[
  {
    "name": "HumanEval_61_correct_bracketing",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nbool correct_bracketing(string brackets)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_61_correct_bracketing.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = correct_bracketing;\n\n    assert(candidate(\"()\") == true);\n    assert(candidate(\"(()())\") == true);\n    assert(candidate(\"()()(()())()\") == true);\n    assert(candidate(\"()()((()()())())(()()(()))\") == true);\n    assert(candidate(\"((()())))\") == false);\n    assert(candidate(\")(()\") == false);\n    assert(candidate(\"(\") == false);\n    assert(candidate(\"((((\") == false);\n    assert(candidate(\")\") == false);\n    assert(candidate(\"(()\") == false);\n    assert(candidate(\"()()(()())())(()\") == false);\n    assert(candidate(\"()()(()())()))()\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction correct_bracketing($brackets) {\n    $depth = 0;\n    for ($i = 0; $i < strlen($brackets); $i++) {\n        if ($brackets[$i] === \"(\") {\n            $depth += 1;\n        } else {\n            $depth -= 1;\n        }\n        if ($depth < 0) {\n            return False;\n        }\n    }\n    return $depth === 0;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nbool correct_bracketing(string brackets)\n"
  },
  {
    "name": "HumanEval_45_triangle_area",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nfloat triangle_area(long a, long h)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_45_triangle_area.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(5L, 3L) == 7.5);\n    assert(candidate(2L, 2L) == 2.0);\n    assert(candidate(10L, 8L) == 40.0);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction triangle_area($a, $h) {\n    return $a * $h / 2.0;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nfloat triangle_area(long a, long h)\n"
  },
  {
    "name": "HumanEval_139_special_factorial",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nlong special_factorial(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_139_special_factorial.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = special_factorial;\n\n    assert(candidate(4L) == 288L);\n    assert(candidate(5L) == 34560L);\n    assert(candidate(7L) == 125411328000L);\n    assert(candidate(1L) == 1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction special_factorial($n) {\n    $fact_i = 1;\n    $special_fact = 1;\n    for ($i = 1; $i <= $n; $i++) {\n        $fact_i *= $i;\n        $special_fact *= $fact_i;\n    }\n    return $special_fact;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nlong special_factorial(long n)\n"
  },
  {
    "name": "HumanEval_136_largest_smallest_integers",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(Nullable!(long), Nullable!(long)) largest_smallest_integers(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_136_largest_smallest_integers.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = largest_smallest_integers;\n\n{\n        auto result = candidate([2L, 4L, 1L, 3L, 5L, 7L]);\n        assert(result[0].isNull);\n        assert(!result[1].isNull && result[1].get == 1L);\n}\n\n{\n        auto result = candidate([2L, 4L, 1L, 3L, 5L, 7L, 0L]);\n        assert(result[0].isNull);\n        assert(!result[1].isNull && result[1].get == 1L);\n}\n\n{\n        auto result = candidate([1L, 3L, 2L, 4L, 5L, 6L, -2L]);\n        assert(!result[0].isNull && result[0].get == -2L);\n        assert(!result[1].isNull && result[1].get == 1L);\n}\n\n{\n        auto result = candidate([4L, 5L, 3L, 6L, 2L, 7L, -7L]);\n        assert(!result[0].isNull && result[0].get == -7L);\n        assert(!result[1].isNull && result[1].get == 2L);\n}\n\n{\n        auto result = candidate([7L, 3L, 8L, 4L, 9L, 2L, 5L, -9L]);\n        assert(!result[0].isNull && result[0].get == -9L);\n        assert(!result[1].isNull && result[1].get == 2L);\n}\n\n{\n        auto result = candidate([]);\n        assert(result[0].isNull);\n        assert(result[1].isNull);\n}\n\n{\n        auto result = candidate([0L]);\n        assert(result[0].isNull);\n        assert(result[1].isNull);\n}\n\n{\n        auto result = candidate([-1L, -3L, -5L, -6L]);\n        assert(!result[0].isNull && result[0].get == -1L);\n        assert(result[1].isNull);\n}\n\n{\n        auto result = candidate([-1L, -3L, -5L, -6L, 0L]);\n        assert(!result[0].isNull && result[0].get == -1L);\n        assert(result[1].isNull);\n}\n\n{\n        auto result = candidate([-6L, -4L, -4L, -3L, 1L]);\n        assert(!result[0].isNull && result[0].get == -3L);\n        assert(!result[1].isNull && result[1].get == 1L);\n}\n\n{\n        auto result = candidate([-6L, -4L, -4L, -3L, -100L, 1L]);\n        assert(!result[0].isNull && result[0].get == -3L);\n        assert(!result[1].isNull && result[1].get == 1L);\n}\n\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction largest_smallest_integers($lst) {\n    $smallest = array_filter($lst, function($x) { return $x < 0; });\n    $largest = array_filter($lst, function($x) { return $x > 0; });\n    return [max($smallest) ?: null, min($largest) ?: null];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(Nullable!(long), Nullable!(long)) largest_smallest_integers(long[] lst)\n"
  },
  {
    "name": "HumanEval_109_move_one_ball",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool move_one_ball(long[] arr)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_109_move_one_ball.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = move_one_ball;\n\n    assert(candidate([3L, 4L, 5L, 1L, 2L]) == true);\n    assert(candidate([3L, 5L, 10L, 1L, 2L]) == true);\n    assert(candidate([4L, 3L, 1L, 2L]) == false);\n    assert(candidate([3L, 5L, 4L, 1L, 2L]) == false);\n    assert(candidate([]) == true);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction move_one_ball($arr) {\n    if (count($arr) == 0) {\n        return true;\n    }\n    $sorted_array = $arr;\n    sort($sorted_array);\n\n    $min_value = min($arr);\n    $min_index = array_search($min_value, $arr);\n    $my_arr = array_merge(array_slice($arr, $min_index), array_slice($arr, 0, $min_index));\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($my_arr[$i] != $sorted_array[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool move_one_ball(long[] arr)\n"
  },
  {
    "name": "HumanEval_131_digits",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong digits(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_131_digits.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = digits;\n\n    assert(candidate(5L) == 5L);\n    assert(candidate(54L) == 5L);\n    assert(candidate(120L) == 1L);\n    assert(candidate(5014L) == 5L);\n    assert(candidate(98765L) == 315L);\n    assert(candidate(5576543L) == 2625L);\n    assert(candidate(2468L) == 0L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction digits($n) {\n    $product = 1;\n    $odd_count = 0;\n    foreach(str_split($n) as $digit) {\n        $int_digit = intval($digit);\n        if ($int_digit%2 == 1) {\n            $product= $product*$int_digit;\n            $odd_count+=1;\n        }\n    }\n    if ($odd_count ==0) {\n        return 0;\n    } else {\n        return $product;\n    }\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong digits(long n)\n"
  },
  {
    "name": "HumanEval_46_fib4",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fib4(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_46_fib4.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = fib4;\n\n    assert(candidate(5L) == 4L);\n    assert(candidate(8L) == 28L);\n    assert(candidate(10L) == 104L);\n    assert(candidate(12L) == 386L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction fib4($n) {\n    $results = [0, 0, 2, 0];\n    if ($n < 4) {\n        return $results[$n];\n    }\n\n    for ($i = 4; $i <= $n; $i++) {\n        array_push($results, $results[count($results)-1] + $results[count($results)-2] + $results[count($results)-3] + $results[count($results)-4]);\n        array_shift($results);\n    }\n\n    return $results[count($results)-1];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fib4(long n)\n"
  },
  {
    "name": "HumanEval_145_order_by_points",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] order_by_points(long[] nums)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_145_order_by_points.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = order_by_points;\n\n    assert(candidate([1L, 11L, -1L, -11L, -12L]) == [-1L, -11L, 1L, -12L, 11L]);\n    assert(candidate([1234L, 423L, 463L, 145L, 2L, 423L, 423L, 53L, 6L, 37L, 3457L, 3L, 56L, 0L, 46L]) == [0L, 2L, 3L, 6L, 53L, 423L, 423L, 423L, 1234L, 145L, 37L, 46L, 56L, 463L, 3457L]);\n    assert(candidate([]) == []);\n    assert(candidate([1L, -11L, -32L, 43L, 54L, -98L, 2L, -3L]) == [-3L, -32L, -98L, -11L, 1L, 2L, 43L, 54L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L]) == [1L, 10L, 2L, 11L, 3L, 4L, 5L, 6L, 7L, 8L, 9L]);\n    assert(candidate([0L, 6L, 6L, -76L, -21L, 23L, 4L]) == [-76L, -21L, 0L, 4L, 23L, 6L, 6L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction order_by_points($nums) {\n    $digits_sum = function($n) {\n        $neg = 1;\n        if ($n < 0) {\n            $n = -1 * $n;\n            $neg = -1;\n        }\n        $n = array_map('intval', str_split($n));\n        $n[0] = $n[0] * $neg;\n        return array_sum($n);\n    };\n    usort($nums, function($a, $b) use ($digits_sum) {\n        return $digits_sum($a) - $digits_sum($b);\n    });\n    return $nums;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] order_by_points(long[] nums)\n"
  },
  {
    "name": "HumanEval_80_is_happy",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_happy(string s)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_80_is_happy.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_happy;\n\n    assert(candidate(\"a\") == false);\n    assert(candidate(\"aa\") == false);\n    assert(candidate(\"abcd\") == true);\n    assert(candidate(\"aabb\") == false);\n    assert(candidate(\"adb\") == true);\n    assert(candidate(\"xyy\") == false);\n    assert(candidate(\"iopaxpoi\") == true);\n    assert(candidate(\"iopaxioi\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_happy($s) {\n  if (strlen($s) < 3) {\n    return false;\n  }\n\n  for ($i = 0; $i < strlen($s) - 2; $i++) {\n    if ($s[$i] == $s[$i+1] || $s[$i+1] == $s[$i+2] || $s[$i] == $s[$i+2]) {\n      return false;\n    }\n  }\n  return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_happy(string s)\n"
  },
  {
    "name": "HumanEval_65_circular_shift",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring circular_shift(long x, long shift)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_65_circular_shift.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction circular_shift($x, $shift) {\n    $s = strval($x);\n    if ($shift > strlen($s)) {\n        return strrev($s);\n    } else {\n        return substr($s, strlen($s) - $shift) . substr($s, 0, strlen($s) - $shift);\n    }\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring circular_shift(long x, long shift)\n"
  },
  {
    "name": "HumanEval_0_has_close_elements",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool has_close_elements(float[] numbers, float threshold)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_0_has_close_elements.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = has_close_elements;\n\n    assert(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == true);\n    assert(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == false);\n    assert(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == true);\n    assert(candidate([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == false);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == true);\n    assert(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == true);\n    assert(candidate([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction has_close_elements($numbers, $threshold) {\n    foreach ($numbers as $idx => $elem) {\n        foreach ($numbers as $idx2 => $elem2) {\n            if ($idx != $idx2) {\n                $distance = abs($elem - $elem2);\n                if ($distance < $threshold) {\n                    return true;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool has_close_elements(float[] numbers, float threshold)\n"
  },
  {
    "name": "HumanEval_81_numerical_letter_grade",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] numerical_letter_grade(float[] grades)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_81_numerical_letter_grade.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = numerical_letter_grade;\n\n    assert(candidate([4.0, 3L, 1.7, 2L, 3.5]) == [\"A+\", \"B\", \"C-\", \"C\", \"A-\"]);\n    assert(candidate([1.2]) == [\"D+\"]);\n    assert(candidate([0.5]) == [\"D-\"]);\n    assert(candidate([0.0]) == [\"E\"]);\n    assert(candidate([1.0, 0.3, 1.5, 2.8, 3.3]) == [\"D\", \"D-\", \"C-\", \"B\", \"B+\"]);\n    assert(candidate([0.0, 0.7]) == [\"E\", \"D-\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction numerical_letter_grade($grades) {\n    $letter_grade = [];\n    foreach ($grades as $gpa) {\n        if ($gpa == 4.0) {\n            $letter_grade[] = \"A+\";\n        } elseif ($gpa > 3.7) {\n            $letter_grade[] = \"A\";\n        } elseif ($gpa > 3.3) {\n            $letter_grade[] = \"A-\";\n        } elseif ($gpa > 3.0) {\n            $letter_grade[] = \"B+\";\n        } elseif ($gpa > 2.7) {\n            $letter_grade[] = \"B\";\n        } elseif ($gpa > 2.3) {\n            $letter_grade[] = \"B-\";\n        } elseif ($gpa > 2.0) {\n            $letter_grade[] = \"C+\";\n        } elseif ($gpa > 1.7) {\n            $letter_grade[] = \"C\";\n        } elseif ($gpa > 1.3) {\n            $letter_grade[] = \"C-\";\n        } elseif ($gpa > 1.0) {\n            $letter_grade[] = \"D+\";\n        } elseif ($gpa > 0.7) {\n            $letter_grade[] = \"D\";\n        } elseif ($gpa > 0.0) {\n            $letter_grade[] = \"D-\";\n        } else {\n            $letter_grade[] = \"E\";\n        }\n    }\n    return $letter_grade;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] numerical_letter_grade(float[] grades)\n"
  },
  {
    "name": "HumanEval_150_x_or_y",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong x_or_y(long n, long x, long y)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_150_x_or_y.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = x_or_y;\n\n    assert(candidate(7L, 34L, 12L) == 34L);\n    assert(candidate(15L, 8L, 5L) == 5L);\n    assert(candidate(3L, 33L, 5212L) == 33L);\n    assert(candidate(1259L, 3L, 52L) == 3L);\n    assert(candidate(7919L, -1L, 12L) == -1L);\n    assert(candidate(3609L, 1245L, 583L) == 583L);\n    assert(candidate(91L, 56L, 129L) == 129L);\n    assert(candidate(6L, 34L, 1234L) == 1234L);\n    assert(candidate(1L, 2L, 0L) == 0L);\n    assert(candidate(2L, 2L, 0L) == 2L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction x_or_y($n, $x, $y) {\n    if ($n == 1) {\n        return $y;\n    }\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n            break;\n        }\n    }\n    return $x;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong x_or_y(long n, long x, long y)\n"
  },
  {
    "name": "HumanEval_146_specialFilter",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong specialFilter(long[] nums)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_146_specialFilter.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = specialFilter;\n\n    assert(candidate([5L, -2L, 1L, -5L]) == 0L);\n    assert(candidate([15L, -73L, 14L, -15L]) == 1L);\n    assert(candidate([33L, -2L, -3L, 45L, 21L, 109L]) == 2L);\n    assert(candidate([43L, -12L, 93L, 125L, 121L, 109L]) == 4L);\n    assert(candidate([71L, -2L, -33L, 75L, 21L, 19L]) == 3L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([]) == 0L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction specialFilter($nums) {\n    $count = 0;\n    foreach($nums as $num) {\n        if ($num > 10) {\n            $odd_digits = [1, 3, 5, 7, 9];\n            $number_as_string = strval($num);\n            if (in_array(intval($number_as_string[0]), $odd_digits) && in_array(intval($number_as_string[-1]), $odd_digits)) {\n                $count += 1;\n            }\n        }\n    }\n    return $count;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong specialFilter(long[] nums)\n"
  },
  {
    "name": "HumanEval_17_parse_music",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] parse_music(string music_string)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_17_parse_music.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = parse_music;\n\n    assert(candidate(\"\") == []);\n    assert(candidate(\"o o o o\") == [4L, 4L, 4L, 4L]);\n    assert(candidate(\".| .| .| .|\") == [1L, 1L, 1L, 1L]);\n    assert(candidate(\"o| o| .| .| o o o o\") == [2L, 2L, 1L, 1L, 4L, 4L, 4L, 4L]);\n    assert(candidate(\"o| .| o| .| o o| o o|\") == [2L, 1L, 2L, 1L, 4L, 2L, 4L, 2L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction parse_music($music_string) {\n    $note_map = ['o' => 4, 'o|' => 2, '.|' => 1];\n    return array_filter(array_map(function($x) use ($note_map) {\n        return $note_map[$x];\n    }, explode(' ', $music_string)));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] parse_music(string music_string)\n"
  },
  {
    "name": "HumanEval_66_digitSum",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong digitSum(string s)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_66_digitSum.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = digitSum;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"abAB\") == 131L);\n    assert(candidate(\"abcCd\") == 67L);\n    assert(candidate(\"helloE\") == 69L);\n    assert(candidate(\"woArBld\") == 131L);\n    assert(candidate(\"aAaaaXa\") == 153L);\n    assert(candidate(\" How are yOu?\") == 151L);\n    assert(candidate(\"You arE Very Smart\") == 327L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction digitSum($s) {\n    if ($s == \"\") return 0;\n    return array_sum(array_map(function ($char) {\n        return ord($char) * ctype_upper($char);\n    }, str_split($s)));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong digitSum(string s)\n"
  },
  {
    "name": "HumanEval_142_sum_squares",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong sum_squares(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_142_sum_squares.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = sum_squares;\n\n    assert(candidate([1L, 2L, 3L]) == 6L);\n    assert(candidate([1L, 4L, 9L]) == 14L);\n    assert(candidate([]) == 0L);\n    assert(candidate([1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L]) == 9L);\n    assert(candidate([-1L, -1L, -1L, -1L, -1L, -1L, -1L, -1L, -1L]) == -3L);\n    assert(candidate([0L]) == 0L);\n    assert(candidate([-1L, -5L, 2L, -1L, -5L]) == -126L);\n    assert(candidate([-56L, -99L, 1L, 0L, -2L]) == 3030L);\n    assert(candidate([-1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, -1L]) == 0L);\n    assert(candidate([-16L, -9L, -2L, 36L, 36L, 26L, -20L, 25L, -40L, 20L, -4L, 12L, -26L, 35L, 37L]) == -14196L);\n    assert(candidate([-1L, -3L, 17L, -1L, -15L, 13L, -1L, 14L, -14L, -12L, -5L, 14L, -14L, 6L, 13L, 11L, 16L, 16L, 4L, 10L]) == -1448L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction sum_squares($lst) {\n    $result =[];\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 3 === 0) {\n            $result[] = $lst[$i]**2;\n        } elseif ($i % 4 === 0 && $i % 3 !== 0) {\n            $result[] = $lst[$i]**3;\n        } else {\n            $result[] = $lst[$i];\n        }\n    }\n    return array_sum($result);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong sum_squares(long[] lst)\n"
  },
  {
    "name": "HumanEval_96_count_up_to",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] count_up_to(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_96_count_up_to.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = count_up_to;\n\n    assert(candidate(5L) == [2L, 3L]);\n    assert(candidate(6L) == [2L, 3L, 5L]);\n    assert(candidate(7L) == [2L, 3L, 5L]);\n    assert(candidate(10L) == [2L, 3L, 5L, 7L]);\n    assert(candidate(0L) == []);\n    assert(candidate(22L) == [2L, 3L, 5L, 7L, 11L, 13L, 17L, 19L]);\n    assert(candidate(1L) == []);\n    assert(candidate(18L) == [2L, 3L, 5L, 7L, 11L, 13L, 17L]);\n    assert(candidate(47L) == [2L, 3L, 5L, 7L, 11L, 13L, 17L, 19L, 23L, 29L, 31L, 37L, 41L, 43L]);\n    assert(candidate(101L) == [2L, 3L, 5L, 7L, 11L, 13L, 17L, 19L, 23L, 29L, 31L, 37L, 41L, 43L, 47L, 53L, 59L, 61L, 67L, 71L, 73L, 79L, 83L, 89L, 97L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction count_up_to($n) {\n    $primes = [];\n\n    for ($i = 2; $i < $n; $i++) {\n        $is_prime = true;\n        for ($j = 2; $j < $i; $j++) {\n            if ($i % $j === 0) {\n                $is_prime = false;\n                break;\n            }\n        }\n        if ($is_prime) {\n            $primes[] = $i;\n        }\n    }\n\n    return $primes;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] count_up_to(long n)\n"
  },
  {
    "name": "HumanEval_34_unique",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] unique(long[] l)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_34_unique.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = unique;\n\n    assert(candidate([5L, 3L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [0L, 2L, 3L, 5L, 9L, 123L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction unique($l) {\n    $unique = array_unique($l);\n    sort($unique);\n    return $unique;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] unique(long[] l)\n"
  },
  {
    "name": "HumanEval_55_fib",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fib(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_55_fib.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction fib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fib(long n)\n"
  },
  {
    "name": "HumanEval_36_fizz_buzz",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fizz_buzz(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_36_fizz_buzz.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L) == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L) == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L) == 8026L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction fizz_buzz($n) {\n    $ns = [];\n    for ($i = 0; $i < $n; $i++) {\n        if ($i % 11 === 0 || $i % 13 === 0) {\n            $ns[] = $i;\n        }\n    }\n    $s = implode('', array_map('strval', $ns));\n    $ans = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        $ans += ($s[$i] === '7');\n    }\n    return $ans;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fizz_buzz(long n)\n"
  },
  {
    "name": "HumanEval_153_Strongest_Extension",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring Strongest_Extension(string class_name, string[] extensions)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_153_Strongest_Extension.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = Strongest_Extension;\n\n    assert(candidate(\"Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\");\n    assert(candidate(\"Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]) == \"Boku123.YEs.WeCaNe\");\n    assert(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"]) == \"__YESIMHERE.NuLl__\");\n    assert(candidate(\"K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\");\n    assert(candidate(\"__HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\");\n    assert(candidate(\"YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\");\n    assert(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\");\n    assert(candidate(\"_\", [\"Bb\", \"91245\"]) == \"_.Bb\");\n    assert(candidate(\"Sp\", [\"671235\", \"Bb\"]) == \"Sp.671235\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction Strongest_Extension($class_name, $extensions) {\n    $strong = $extensions[0];\n    $my_val = strlen(preg_replace('/[^A-Z]/', '', $extensions[0])) - strlen(preg_replace('/[^a-z]/', '', $extensions[0]));\n    foreach ($extensions as $s) {\n        $val = strlen(preg_replace('/[^A-Z]/', '', $s)) - strlen(preg_replace('/[^a-z]/', '', $s));\n        if ($val > $my_val) {\n            $strong = $s;\n            $my_val = $val;\n        }\n    }\n    $ans = $class_name . \".\" . $strong;\n    return $ans;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring Strongest_Extension(string class_name, string[] extensions)\n"
  },
  {
    "name": "HumanEval_20_find_closest_elements",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(float, float) find_closest_elements(float[] numbers)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_20_find_closest_elements.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = find_closest_elements;\n\n    assert(candidate([1.0, 2.0, 3.9, 4.0, 5.0, 2.2]) == tuple(3.9, 4.0));\n    assert(candidate([1.0, 2.0, 5.9, 4.0, 5.0]) == tuple(5.0, 5.9));\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.2]) == tuple(2.0, 2.2));\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0, 2.0]) == tuple(2.0, 2.0));\n    assert(candidate([1.1, 2.2, 3.1, 4.1, 5.1]) == tuple(2.2, 3.1));\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction find_closest_elements($numbers) {\n    $closest_pair = null;\n    $distance = null;\n\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers); $j++) {\n            if ($i != $j) {\n                if ($distance === null) {\n                    $distance = abs($numbers[$i] - $numbers[$j]);\n                    $closest_pair = [$numbers[$i], $numbers[$j]];\n                } else {\n                    $new_distance = abs($numbers[$i] - $numbers[$j]);\n                    if ($new_distance < $distance) {\n                        $distance = $new_distance;\n                        $closest_pair = [$numbers[$i], $numbers[$j]];\n                    }\n                }\n            }\n        }\n    }\n\n    sort($closest_pair);\n    return $closest_pair;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(float, float) find_closest_elements(float[] numbers)\n"
  },
  {
    "name": "HumanEval_124_valid_date",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool valid_date(string date)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_124_valid_date.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = valid_date;\n\n    assert(candidate(\"03-11-2000\") == true);\n    assert(candidate(\"15-01-2012\") == false);\n    assert(candidate(\"04-0-2040\") == false);\n    assert(candidate(\"06-04-2020\") == true);\n    assert(candidate(\"01-01-2007\") == true);\n    assert(candidate(\"03-32-2011\") == false);\n    assert(candidate(\"\") == false);\n    assert(candidate(\"04-31-3000\") == false);\n    assert(candidate(\"06-06-2005\") == true);\n    assert(candidate(\"21-31-2000\") == false);\n    assert(candidate(\"04-12-2003\") == true);\n    assert(candidate(\"04122003\") == false);\n    assert(candidate(\"20030412\") == false);\n    assert(candidate(\"2003-04\") == false);\n    assert(candidate(\"2003-04-12\") == false);\n    assert(candidate(\"04-2003\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction valid_date($date) {\n    try {\n        $date = trim($date);\n        list($month, $day, $year) = explode('-', $date);\n        $month = (int)$month;\n        $day = (int)$day;\n        $year = (int)$year;\n        if ($month < 1 || $month > 12) {\n            return false;\n        }\n        if (in_array($month, [1,3,5,7,8,10,12]) && ($day < 1 || $day > 31)) {\n            return false;\n        }\n        if (in_array($month, [4,6,9,11]) && ($day < 1 || $day > 30)) {\n            return false;\n        }\n        if ($month == 2 && ($day < 1 || $day > 29)) {\n            return false;\n        }\n    } catch (Exception $e) {\n        return false;\n    }\n\n    return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool valid_date(string date)\n"
  },
  {
    "name": "HumanEval_53_add",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong add(long x, long y)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_53_add.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction add($x, $y) {\n    return $x + $y;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong add(long x, long y)\n"
  },
  {
    "name": "HumanEval_40_triples_sum_to_zero",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool triples_sum_to_zero(long[] l)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_40_triples_sum_to_zero.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = triples_sum_to_zero;\n\n    assert(candidate([1L, 3L, 5L, 0L]) == false);\n    assert(candidate([1L, 3L, 5L, -1L]) == false);\n    assert(candidate([1L, 3L, -2L, 1L]) == true);\n    assert(candidate([1L, 2L, 3L, 7L]) == false);\n    assert(candidate([1L, 2L, 5L, 7L]) == false);\n    assert(candidate([2L, 4L, -5L, 3L, 9L, 7L]) == true);\n    assert(candidate([1L]) == false);\n    assert(candidate([1L, 3L, 5L, -100L]) == false);\n    assert(candidate([100L, 3L, 5L, -100L]) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction triples_sum_to_zero($l) {\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j = $i + 1; $j < count($l); $j++) {\n            for ($k = $j + 1; $k < count($l); $k++) {\n                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool triples_sum_to_zero(long[] l)\n"
  },
  {
    "name": "HumanEval_24_largest_divisor",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong largest_divisor(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_24_largest_divisor.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction largest_divisor($n) {\n    for ($i = $n-1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n            return $i;\n        }\n    }\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong largest_divisor(long n)\n"
  },
  {
    "name": "HumanEval_19_sort_numbers",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring sort_numbers(string numbers)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_19_sort_numbers.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = sort_numbers;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"three\") == \"three\");\n    assert(candidate(\"three five nine\") == \"three five nine\");\n    assert(candidate(\"five zero four seven nine eight\") == \"zero four five seven eight nine\");\n    assert(candidate(\"six five four three two one zero\") == \"zero one two three four five six\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction sort_numbers($numbers) {\n    $value_map = [\n        'zero' => 0,\n        'one' => 1,\n        'two' => 2,\n        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine' => 9\n    ];\n    $arr = array_filter(explode(' ', $numbers));\n    usort($arr, function($a, $b) use ($value_map) {\n        return $value_map[$a] - $value_map[$b];\n    });\n    return implode(' ', $arr);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring sort_numbers(string numbers)\n"
  },
  {
    "name": "HumanEval_73_smallest_change",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong smallest_change(long[] arr)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_73_smallest_change.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = smallest_change;\n\n    assert(candidate([1L, 2L, 3L, 5L, 4L, 7L, 9L, 6L]) == 4L);\n    assert(candidate([1L, 2L, 3L, 4L, 3L, 2L, 2L]) == 1L);\n    assert(candidate([1L, 4L, 2L]) == 1L);\n    assert(candidate([1L, 4L, 4L, 2L]) == 1L);\n    assert(candidate([1L, 2L, 3L, 2L, 1L]) == 0L);\n    assert(candidate([3L, 1L, 1L, 3L]) == 0L);\n    assert(candidate([1L]) == 0L);\n    assert(candidate([0L, 1L]) == 1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction smallest_change($arr) {\n    $ans = 0;\n    for ($i = 0; $i < count($arr) / 2; $i++) {\n        if ($arr[$i] != $arr[count($arr) - $i - 1]) {\n            $ans += 1;\n        }\n    }\n    return $ans;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong smallest_change(long[] arr)\n"
  },
  {
    "name": "HumanEval_52_below_threshold",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool below_threshold(long[] l, long t)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_52_below_threshold.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = below_threshold;\n\n    assert(candidate([1L, 2L, 4L, 10L], 100L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 5L) == false);\n    assert(candidate([1L, 20L, 4L, 10L], 21L) == true);\n    assert(candidate([1L, 20L, 4L, 10L], 22L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 11L) == true);\n    assert(candidate([1L, 8L, 4L, 10L], 10L) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction below_threshold($l, $t) {\n    foreach ($l as $e) {\n        if ($e >= $t) {\n            return false;\n        }\n    }\n    return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool below_threshold(long[] l, long t)\n"
  },
  {
    "name": "HumanEval_128_prod_signs",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(long) prod_signs(long[] arr)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_128_prod_signs.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = prod_signs;\n\n{\n        auto result = candidate([1L, 2L, 2L, -4L]);\n        assert(!result.isNull && result.get == -9L);\n}\n\n{\n        auto result = candidate([0L, 1L]);\n        assert(!result.isNull && result.get == 0L);\n}\n\n{\n        auto result = candidate([1L, 1L, 1L, 2L, 3L, -1L, 1L]);\n        assert(!result.isNull && result.get == -10L);\n}\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([2L, 4L, 1L, 2L, -1L, -1L, 9L]);\n        assert(!result.isNull && result.get == 20L);\n}\n\n{\n        auto result = candidate([-1L, 1L, -1L, 1L]);\n        assert(!result.isNull && result.get == 4L);\n}\n\n{\n        auto result = candidate([-1L, 1L, 1L, 1L]);\n        assert(!result.isNull && result.get == -4L);\n}\n\n{\n        auto result = candidate([-1L, 1L, 1L, 0L]);\n        assert(!result.isNull && result.get == 0L);\n}\n\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction prod_signs($arr) {\n    if (empty($arr)) return null;\n    $prod = in_array(0, $arr) ? 0 : pow(-1, count(array_filter($arr, function($x) { return $x < 0; })));\n    return $prod * array_sum(array_map('abs', $arr));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(long) prod_signs(long[] arr)\n"
  },
  {
    "name": "HumanEval_49_modp",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong modp(long n, long p)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_49_modp.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = modp;\n\n    assert(candidate(3L, 5L) == 3L);\n    assert(candidate(1101L, 101L) == 2L);\n    assert(candidate(0L, 101L) == 1L);\n    assert(candidate(3L, 11L) == 8L);\n    assert(candidate(100L, 101L) == 1L);\n    assert(candidate(30L, 5L) == 4L);\n    assert(candidate(31L, 5L) == 3L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction modp($n, $p) {\n    $ret = 1;\n    for ($i = 0; $i < $n; $i++) {\n        $ret = (2 * $ret) % $p;\n    }\n    return $ret;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong modp(long n, long p)\n"
  },
  {
    "name": "HumanEval_98_count_upper",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong count_upper(string s)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_98_count_upper.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = count_upper;\n\n    assert(candidate(\"aBCdEf\") == 1L);\n    assert(candidate(\"abcdefg\") == 0L);\n    assert(candidate(\"dBBE\") == 0L);\n    assert(candidate(\"B\") == 0L);\n    assert(candidate(\"U\") == 1L);\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"EEEE\") == 2L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction count_upper($s) {\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i += 2) {\n        if (strpos(\"AEIOU\", $s[$i]) !== false) {\n            $count += 1;\n        }\n    }\n    return $count;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong count_upper(string s)\n"
  },
  {
    "name": "HumanEval_97_multiply",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong multiply(long a, long b)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_97_multiply.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = multiply;\n\n    assert(candidate(148L, 412L) == 16L);\n    assert(candidate(19L, 28L) == 72L);\n    assert(candidate(2020L, 1851L) == 0L);\n    assert(candidate(14L, -15L) == 20L);\n    assert(candidate(76L, 67L) == 42L);\n    assert(candidate(17L, 27L) == 49L);\n    assert(candidate(0L, 1L) == 0L);\n    assert(candidate(0L, 0L) == 0L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction multiply($a, $b) {\n    return abs($a % 10) * abs($b % 10);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong multiply(long a, long b)\n"
  },
  {
    "name": "HumanEval_104_unique_digits",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] unique_digits(long[] x)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_104_unique_digits.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L, 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L, 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction unique_digits($x) {\n    $odd_digit_elements = [];\n    foreach($x as $i) {\n        if (preg_match('/^[13579]+$/', $i)) {\n            $odd_digit_elements[] = $i;\n        }\n    }\n    sort($odd_digit_elements);\n    return $odd_digit_elements;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] unique_digits(long[] x)\n"
  },
  {
    "name": "HumanEval_72_will_it_fly",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool will_it_fly(long[] q, long w)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_72_will_it_fly.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = will_it_fly;\n\n    assert(candidate([3L, 2L, 3L], 9L) == true);\n    assert(candidate([1L, 2L], 5L) == false);\n    assert(candidate([3L], 5L) == true);\n    assert(candidate([3L, 2L, 3L], 1L) == false);\n    assert(candidate([1L, 2L, 3L], 6L) == false);\n    assert(candidate([5L], 5L) == true);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction will_it_fly($q, $w) {\n    if (array_sum($q) > $w) {\n        return false;\n    }\n\n    $i = 0;\n    $j = count($q)-1;\n    while ($i<$j) {\n        if ($q[$i] != $q[$j]) {\n            return false;\n        }\n        $i+=1;\n        $j-=1;\n    }\n    return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool will_it_fly(long[] q, long w)\n"
  },
  {
    "name": "HumanEval_75_is_multiply_prime",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_multiply_prime(long a)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_75_is_multiply_prime.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_multiply_prime;\n\n    assert(candidate(5L) == false);\n    assert(candidate(30L) == true);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) == false);\n    assert(candidate(125L) == true);\n    assert(candidate(105L) == true);\n    assert(candidate(126L) == false);\n    assert(candidate(729L) == false);\n    assert(candidate(891L) == false);\n    assert(candidate(1001L) == true);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_multiply_prime($a) {\n    $is_prime=function($n) {\n        for ($j = 2; $j < $n; $j++) {\n            if ($n % $j == 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    for ($i = 2; $i < 101; $i++) {\n        if (!$is_prime($i)) {\n            continue;\n        }\n        for ($j = 2; $j < 101; $j++) {\n            if (!$is_prime($j)) {\n                continue;\n            }\n            for ($k = 2; $k < 101; $k++) {\n                if (!$is_prime($k)) {\n                    continue;\n                }\n                if ($i*$j*$k == $a) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_multiply_prime(long a)\n"
  },
  {
    "name": "HumanEval_120_maximum",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] maximum(long[] arr, long k)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_120_maximum.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = maximum;\n\n    assert(candidate([-3L, -4L, 5L], 3L) == [-4L, -3L, 5L]);\n    assert(candidate([4L, -4L, 4L], 2L) == [4L, 4L]);\n    assert(candidate([-3L, 2L, 1L, 2L, -1L, -2L, 1L], 1L) == [2L]);\n    assert(candidate([123L, -123L, 20L, 0L, 1L, 2L, -3L], 3L) == [2L, 20L, 123L]);\n    assert(candidate([-123L, 20L, 0L, 1L, 2L, -3L], 4L) == [0L, 1L, 2L, 20L]);\n    assert(candidate([5L, 15L, 0L, 3L, -13L, -8L, 0L], 7L) == [-13L, -8L, 0L, 0L, 3L, 5L, 15L]);\n    assert(candidate([-1L, 0L, 2L, 5L, 3L, -10L], 2L) == [3L, 5L]);\n    assert(candidate([1L, 0L, 5L, -7L], 1L) == [5L]);\n    assert(candidate([4L, -4L], 2L) == [-4L, 4L]);\n    assert(candidate([-10L, 10L], 2L) == [-10L, 10L]);\n    assert(candidate([1L, 2L, 3L, -23L, 243L, -400L, 0L], 0L) == []);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction maximum($arr, $k) {\n    if ($k == 0) {\n        return [];\n    }\n    sort($arr);\n    return array_slice($arr, -$k);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] maximum(long[] arr, long k)\n"
  },
  {
    "name": "HumanEval_1_separate_paren_groups",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] separate_paren_groups(string paren_string)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_1_separate_paren_groups.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = separate_paren_groups;\n\n    assert(candidate(\"(()()) ((())) () ((())()())\") == [\"(()())\", \"((()))\", \"()\", \"((())()())\"]);\n    assert(candidate(\"() (()) ((())) (((())))\") == [\"()\", \"(())\", \"((()))\", \"(((())))\"]);\n    assert(candidate(\"(()(())((())))\") == [\"(()(())((())))\"]);\n    assert(candidate(\"( ) (( )) (( )( ))\") == [\"()\", \"(())\", \"(()())\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction separate_paren_groups($paren_string) {\n    $result = [];\n    $current_string = [];\n    $current_depth = 0;\n\n    for ($i = 0; $i < strlen($paren_string); $i++) {\n        $c = $paren_string[$i];\n        if ($c === '(') {\n            $current_depth += 1;\n            $current_string[] = $c;\n        } elseif ($c === ')') {\n            $current_depth -= 1;\n            $current_string[] = $c;\n\n            if ($current_depth === 0) {\n                $result[] = implode($current_string);\n                $current_string = [];\n            }\n        }\n    }\n\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] separate_paren_groups(string paren_string)\n"
  },
  {
    "name": "HumanEval_94_skjkasdkd",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong skjkasdkd(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_94_skjkasdkd.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = skjkasdkd;\n\n    assert(candidate([0L, 3L, 2L, 1L, 3L, 5L, 7L, 4L, 5L, 5L, 5L, 2L, 181L, 32L, 4L, 32L, 3L, 2L, 32L, 324L, 4L, 3L]) == 10L);\n    assert(candidate([1L, 0L, 1L, 8L, 2L, 4597L, 2L, 1L, 3L, 40L, 1L, 2L, 1L, 2L, 4L, 2L, 5L, 1L]) == 25L);\n    assert(candidate([1L, 3L, 1L, 32L, 5107L, 34L, 83278L, 109L, 163L, 23L, 2323L, 32L, 30L, 1L, 9L, 3L]) == 13L);\n    assert(candidate([0L, 724L, 32L, 71L, 99L, 32L, 6L, 0L, 5L, 91L, 83L, 0L, 5L, 6L]) == 11L);\n    assert(candidate([0L, 81L, 12L, 3L, 1L, 21L]) == 3L);\n    assert(candidate([0L, 8L, 1L, 2L, 1L, 7L]) == 7L);\n    assert(candidate([8191L]) == 19L);\n    assert(candidate([8191L, 123456L, 127L, 7L]) == 19L);\n    assert(candidate([127L, 97L, 8192L]) == 10L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction skjkasdkd($lst) {\n    $isPrime = function($n) {\n        for ($i = 2; $i <= sqrt($n); $i++) {\n            if ($n % $i === 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    $maxx = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($lst[$i] > $maxx && $isPrime($lst[$i])) {\n            $maxx = $lst[$i];\n        }\n    }\n    $result = array_sum(str_split(strval($maxx)));\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong skjkasdkd(long[] lst)\n"
  },
  {
    "name": "HumanEval_74_total_match",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] total_match(string[] lst1, string[] lst2)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_74_total_match.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = total_match;\n\n    assert(candidate([], []) == []);\n    assert(candidate([\"hi\", \"admin\"], [\"hi\", \"hi\"]) == [\"hi\", \"hi\"]);\n    assert(candidate([\"hi\", \"admin\"], [\"hi\", \"hi\", \"admin\", \"project\"]) == [\"hi\", \"admin\"]);\n    assert(candidate([\"4\"], [\"1\", \"2\", \"3\", \"4\", \"5\"]) == [\"4\"]);\n    assert(candidate([\"hi\", \"admin\"], [\"hI\", \"Hi\"]) == [\"hI\", \"Hi\"]);\n    assert(candidate([\"hi\", \"admin\"], [\"hI\", \"hi\", \"hi\"]) == [\"hI\", \"hi\", \"hi\"]);\n    assert(candidate([\"hi\", \"admin\"], [\"hI\", \"hi\", \"hii\"]) == [\"hi\", \"admin\"]);\n    assert(candidate([], [\"this\"]) == []);\n    assert(candidate([\"this\"], []) == []);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction total_match($lst1, $lst2) {\n    $l1 = array_reduce($lst1, function($acc, $st) {\n        return $acc + strlen($st);\n    }, 0);\n    $l2 = array_reduce($lst2, function($acc, $st) {\n        return $acc + strlen($st);\n    }, 0);\n\n    return $l1 <= $l2 ? $lst1 : $lst2;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] total_match(string[] lst1, string[] lst2)\n"
  },
  {
    "name": "HumanEval_162_string_to_md5",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(string) string_to_md5(string text)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_162_string_to_md5.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction string_to_md5($text) {\n    return $text ? md5($text) : null;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(string) string_to_md5(string text)\n"
  },
  {
    "name": "HumanEval_41_car_race_collision",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong car_race_collision(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_41_car_race_collision.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = car_race_collision;\n\n    assert(candidate(2L) == 4L);\n    assert(candidate(3L) == 9L);\n    assert(candidate(4L) == 16L);\n    assert(candidate(8L) == 64L);\n    assert(candidate(10L) == 100L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction car_race_collision($n) {\n    return $n**2;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong car_race_collision(long n)\n"
  },
  {
    "name": "HumanEval_76_is_simple_power",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_simple_power(long x, long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_76_is_simple_power.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_simple_power;\n\n    assert(candidate(16L, 2L) == true);\n    assert(candidate(143214L, 16L) == false);\n    assert(candidate(4L, 2L) == true);\n    assert(candidate(9L, 3L) == true);\n    assert(candidate(16L, 4L) == true);\n    assert(candidate(24L, 2L) == false);\n    assert(candidate(128L, 4L) == false);\n    assert(candidate(12L, 6L) == false);\n    assert(candidate(1L, 1L) == true);\n    assert(candidate(1L, 12L) == true);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_simple_power($x, $n) {\n    if ($n == 1) {\n        return $x == 1;\n    }\n    $power = 1;\n    while ($power < $x) {\n        $power = $power * $n;\n    }\n    return $power == $x;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_simple_power(long x, long n)\n"
  },
  {
    "name": "HumanEval_93_encode",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring encode(string message)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_93_encode.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = encode;\n\n    assert(candidate(\"TEST\") == \"tgst\");\n    assert(candidate(\"Mudasir\") == \"mWDCSKR\");\n    assert(candidate(\"YES\") == \"ygs\");\n    assert(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\");\n    assert(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction encode($message) {\n    $vowels = \"aeiouAEIOU\";\n    $vowels_replace = array_combine(str_split($vowels), array_map(function($i) { return chr(ord($i) + 2); }, str_split($vowels)));\n    $message = strtolower($message) ^ strtoupper($message) ^ $message;\n    return strtr($message, $vowels_replace);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring encode(string message)\n"
  },
  {
    "name": "HumanEval_42_incr_list",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] incr_list(long[] l)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_42_incr_list.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = incr_list;\n\n    assert(candidate([]) == []);\n    assert(candidate([3L, 2L, 1L]) == [4L, 3L, 2L]);\n    assert(candidate([5L, 2L, 5L, 2L, 3L, 3L, 9L, 0L, 123L]) == [6L, 3L, 6L, 3L, 4L, 4L, 10L, 1L, 124L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction incr_list($l) {\n    return array_map(function($e) { return $e + 1; }, $l);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] incr_list(long[] l)\n"
  },
  {
    "name": "HumanEval_27_flip_case",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring flip_case(string string)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_27_flip_case.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction flip_case($string) {\n    return strtolower($string) ^ strtoupper($string) ^ $string;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring flip_case(string string)\n"
  },
  {
    "name": "HumanEval_64_vowels_count",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong vowels_count(string s)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_64_vowels_count.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = vowels_count;\n\n    assert(candidate(\"abcde\") == 2L);\n    assert(candidate(\"Alone\") == 3L);\n    assert(candidate(\"key\") == 2L);\n    assert(candidate(\"bye\") == 1L);\n    assert(candidate(\"keY\") == 2L);\n    assert(candidate(\"bYe\") == 1L);\n    assert(candidate(\"ACEDY\") == 3L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction vowels_count($s) {\n    $vowels = \"aeiouAEIOU\";\n    $n_vowels = count(array_filter(str_split($s), function($c) use ($vowels) {\n        return strpos($vowels, $c) !== false;\n    }));\n    if (substr($s, -1) === 'y' || substr($s, -1) === 'Y') {\n        $n_vowels++;\n    }\n    return $n_vowels;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong vowels_count(string s)\n"
  },
  {
    "name": "HumanEval_149_sorted_list_sum",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] sorted_list_sum(string[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_149_sorted_list_sum.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = sorted_list_sum;\n\n    assert(candidate([\"aa\", \"a\", \"aaa\"]) == [\"aa\"]);\n    assert(candidate([\"school\", \"AI\", \"asdf\", \"b\"]) == [\"AI\", \"asdf\", \"school\"]);\n    assert(candidate([\"d\", \"b\", \"c\", \"a\"]) == []);\n    assert(candidate([\"d\", \"dcba\", \"abcd\", \"a\"]) == [\"abcd\", \"dcba\"]);\n    assert(candidate([\"AI\", \"ai\", \"au\"]) == [\"AI\", \"ai\", \"au\"]);\n    assert(candidate([\"a\", \"b\", \"b\", \"c\", \"c\", \"a\"]) == []);\n    assert(candidate([\"aaaa\", \"bbbb\", \"dd\", \"cc\"]) == [\"cc\", \"dd\", \"aaaa\", \"bbbb\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction sorted_list_sum($lst) {\n    sort($lst);\n    $new_lst = [];\n    foreach ($lst as $i) {\n        if (strlen($i)%2 == 0) {\n            $new_lst[] = $i;\n        }\n    }\n    usort($new_lst, function($a, $b) {\n        return strlen($a) - strlen($b);\n    });\n    return $new_lst;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] sorted_list_sum(string[] lst)\n"
  },
  {
    "name": "HumanEval_107_even_odd_palindrome",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(long, long) even_odd_palindrome(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_107_even_odd_palindrome.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = even_odd_palindrome;\n\n    assert(candidate(123L) == tuple(8L, 13L));\n    assert(candidate(12L) == tuple(4L, 6L));\n    assert(candidate(3L) == tuple(1L, 2L));\n    assert(candidate(63L) == tuple(6L, 8L));\n    assert(candidate(25L) == tuple(5L, 6L));\n    assert(candidate(19L) == tuple(4L, 6L));\n    assert(candidate(9L) == tuple(4L, 5L));\n    assert(candidate(1L) == tuple(0L, 1L));\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction even_odd_palindrome($n) {\n    $is_palindrome=function($n) {\n        return strval($n) === strrev(strval($n));\n    };\n\n    $even_palindrome_count = 0;\n    $odd_palindrome_count = 0;\n\n    for ($i = 1; $i <= $n; $i++) {\n        if ($i % 2 === 1 && $is_palindrome($i)) {\n            $odd_palindrome_count += 1;\n        } elseif ($i % 2 === 0 && $is_palindrome($i)) {\n            $even_palindrome_count += 1;\n        }\n    }\n\n    return [$even_palindrome_count, $odd_palindrome_count];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(long, long) even_odd_palindrome(long n)\n"
  },
  {
    "name": "HumanEval_71_triangle_area",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat triangle_area(long a, long b, long c)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_71_triangle_area.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = triangle_area;\n\n    assert(candidate(3L, 4L, 5L) == 6.0);\n    assert(candidate(1L, 2L, 10L) == -1L);\n    assert(candidate(4L, 8L, 5L) == 8.18);\n    assert(candidate(2L, 2L, 2L) == 1.73);\n    assert(candidate(1L, 2L, 3L) == -1L);\n    assert(candidate(10L, 5L, 7L) == 16.25);\n    assert(candidate(2L, 6L, 3L) == -1L);\n    assert(candidate(1L, 1L, 1L) == 0.43);\n    assert(candidate(2L, 2L, 10L) == -1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction triangle_area($a, $b, $c) {\n    if ($a + $b <= $c || $a + $c <= $b || $b + $c <= $a) {\n        return -1;\n    }\n    $s = ($a + $b + $c)/2;\n    $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));\n    $area = round($area, 2);\n    return $area;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat triangle_area(long a, long b, long c)\n"
  },
  {
    "name": "HumanEval_95_check_dict_case",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool check_dict_case(Nullable!(string[string]) dict)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_95_check_dict_case.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = check_dict_case;\n\n    assert(candidate([\"p\": \"pineapple\", \"b\": \"banana\"].nullable) == true);\n    assert(candidate([\"p\": \"pineapple\", \"A\": \"banana\", \"B\": \"banana\"].nullable) == false);\n    assert(candidate([\"p\": \"pineapple\", \"5\": \"banana\", \"a\": \"apple\"].nullable) == false);\n    assert(candidate([\"Name\": \"John\", \"Age\": \"36\", \"City\": \"Houston\"].nullable) == false);\n    assert(candidate([\"STATE\": \"NC\", \"ZIP\": \"12345\"].nullable) == true);\n    assert(candidate([\"fruit\": \"Orange\", \"taste\": \"Sweet\"].nullable) == true);\n    assert(candidate(Nullable!(string[string]).init) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction check_dict_case($dict) {\n    if (count($dict) == 0) {\n        return false;\n    } else {\n        $state = \"start\";\n        foreach ($dict as $key => $value) {\n            if (!is_string($key)) {\n                $state = \"mixed\";\n                break;\n            }\n            if ($state == \"start\") {\n                if (ctype_upper($key)) {\n                    $state = \"upper\";\n                } elseif (ctype_lower($key)) {\n                    $state = \"lower\";\n                } else {\n                    break;\n                }\n            } elseif (($state == \"upper\" && !ctype_upper($key)) || ($state == \"lower\" && !ctype_lower($key))) {\n                $state = \"mixed\";\n                break;\n            } else {\n                continue;\n            }\n        }\n        return $state == \"upper\" || $state == \"lower\";\n    }\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool check_dict_case(Nullable!(string[string]) dict)\n"
  },
  {
    "name": "HumanEval_130_tri",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] tri(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_130_tri.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = tri;\n\n    assert(candidate(3L) == [1L, 3L, 2L, 8L]);\n    assert(candidate(4L) == [1L, 3L, 2L, 8L, 3L]);\n    assert(candidate(5L) == [1L, 3L, 2L, 8L, 3L, 15L]);\n    assert(candidate(6L) == [1L, 3L, 2L, 8L, 3L, 15L, 4L]);\n    assert(candidate(7L) == [1L, 3L, 2L, 8L, 3L, 15L, 4L, 24L]);\n    assert(candidate(8L) == [1L, 3L, 2L, 8L, 3L, 15L, 4L, 24L, 5L]);\n    assert(candidate(9L) == [1L, 3L, 2L, 8L, 3L, 15L, 4L, 24L, 5L, 35L]);\n    assert(candidate(20L) == [1L, 3L, 2L, 8L, 3L, 15L, 4L, 24L, 5L, 35L, 6L, 48L, 7L, 63L, 8L, 80L, 9L, 99L, 10L, 120L, 11L]);\n    assert(candidate(0L) == [1L]);\n    assert(candidate(1L) == [1L, 3L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction tri($n) {\n    if ($n == 0) {\n        return [1];\n    }\n    $my_tri = [1, 3];\n    for ($i = 2; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $my_tri[] = $i / 2 + 1;\n        } else {\n            $my_tri[] = $my_tri[$i - 1] + $my_tri[$i - 2] + ($i + 3) / 2;\n        }\n    }\n    return $my_tri;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] tri(long n)\n"
  },
  {
    "name": "HumanEval_47_median",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat median(long[] l)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_47_median.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = median;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == 3L);\n    assert(candidate([-10L, 4L, 6L, 1000L, 10L, 20L]) == 8.0);\n    assert(candidate([5L]) == 5L);\n    assert(candidate([6L, 5L]) == 5.5);\n    assert(candidate([8L, 1L, 3L, 9L, 9L, 2L, 7L]) == 7L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction median($l) {\n    sort($l);\n    if (count($l) % 2 == 1) {\n        return $l[count($l) / 2];\n    } else {\n        return ($l[count($l) / 2 - 1] + $l[count($l) / 2]) / 2.0;\n    }\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat median(long[] l)\n"
  },
  {
    "name": "HumanEval_44_change_base",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring change_base(long x, long base)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_44_change_base.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = change_base;\n\n    assert(candidate(8L, 3L) == \"22\");\n    assert(candidate(9L, 3L) == \"100\");\n    assert(candidate(234L, 2L) == \"11101010\");\n    assert(candidate(16L, 2L) == \"10000\");\n    assert(candidate(8L, 2L) == \"1000\");\n    assert(candidate(7L, 2L) == \"111\");\n    assert(candidate(2L, 3L) == \"2\");\n    assert(candidate(3L, 4L) == \"3\");\n    assert(candidate(4L, 5L) == \"4\");\n    assert(candidate(5L, 6L) == \"5\");\n    assert(candidate(6L, 7L) == \"6\");\n    assert(candidate(7L, 8L) == \"7\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction change_base($x, $base) {\n    $ret = \"\";\n    while ($x > 0) {\n        $ret = strval($x % $base) . $ret;\n        $x = intdiv($x, $base);\n    }\n    return $ret;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring change_base(long x, long base)\n"
  },
  {
    "name": "HumanEval_12_longest",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(string) longest(string[] strings)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_12_longest.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = longest;\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([\"x\", \"y\", \"z\"]);\n        assert(!result.isNull && result.get == \"x\");\n}\n\n{\n        auto result = candidate([\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"]);\n        assert(!result.isNull && result.get == \"zzzz\");\n}\n\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction longest($strings) {\n    if (!$strings) {\n        return null;\n    }\n\n    $maxlen = max(array_map('strlen', $strings));\n    foreach ($strings as $s) {\n        if (strlen($s) == $maxlen) {\n            return $s;\n        }\n    }\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(string) longest(string[] strings)\n"
  },
  {
    "name": "HumanEval_58_common",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] common(long[] l1, long[] l2)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_58_common.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = common;\n\n    assert(candidate([1L, 4L, 3L, 34L, 653L, 2L, 5L], [5L, 7L, 1L, 5L, 9L, 653L, 121L]) == [1L, 5L, 653L]);\n    assert(candidate([5L, 3L, 2L, 8L], [3L, 2L]) == [2L, 3L]);\n    assert(candidate([4L, 3L, 2L, 8L], [3L, 2L, 4L]) == [2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 8L], []) == []);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction common($l1, $l2) {\n    $ret = array();\n    foreach ($l1 as $e1) {\n        foreach ($l2 as $e2) {\n            if ($e1 == $e2) {\n                $ret[] = $e1;\n            }\n        }\n    }\n    $ret = array_unique($ret);\n    sort($ret);\n    return $ret;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] common(long[] l1, long[] l2)\n"
  },
  {
    "name": "HumanEval_154_cycpattern_check",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool cycpattern_check(string a, string b)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_154_cycpattern_check.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = cycpattern_check;\n\n    assert(candidate(\"xyzw\", \"xyw\") == false);\n    assert(candidate(\"yello\", \"ell\") == true);\n    assert(candidate(\"whattup\", \"ptut\") == false);\n    assert(candidate(\"efef\", \"fee\") == true);\n    assert(candidate(\"abab\", \"aabb\") == false);\n    assert(candidate(\"winemtt\", \"tinem\") == true);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction cycpattern_check($a, $b) {\n    $l = strlen($b);\n    $pat = $b . $b;\n    for ($i = 0; $i < strlen($a) - $l + 1; $i++) {\n        for ($j = 0; $j < $l + 1; $j++) {\n            if (substr($a, $i, $l) == substr($pat, $j, $l)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool cycpattern_check(string a, string b)\n"
  },
  {
    "name": "HumanEval_114_minSubArraySum",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong minSubArraySum(long[] nums)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_114_minSubArraySum.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = minSubArraySum;\n\n    assert(candidate([2L, 3L, 4L, 1L, 2L, 4L]) == 1L);\n    assert(candidate([-1L, -2L, -3L]) == -6L);\n    assert(candidate([-1L, -2L, -3L, 2L, -10L]) == -14L);\n    assert(candidate([-9999999999999999L]) == -9999999999999999L);\n    assert(candidate([0L, 10L, 20L, 1000000L]) == 0L);\n    assert(candidate([-1L, -2L, -3L, 10L, -5L]) == -6L);\n    assert(candidate([100L, -1L, -2L, -3L, 10L, -5L]) == -6L);\n    assert(candidate([10L, 11L, 13L, 8L, 3L, 4L]) == 3L);\n    assert(candidate([100L, -33L, 32L, -1L, 0L, -2L]) == -33L);\n    assert(candidate([-10L]) == -10L);\n    assert(candidate([7L]) == 7L);\n    assert(candidate([1L, -1L]) == -1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction minSubArraySum($nums) {\n    $max_sum = 0;\n    $s = 0;\n    foreach ($nums as $num) {\n        $s += -$num;\n        if ($s < 0) {\n            $s = 0;\n        }\n        $max_sum = max($s, $max_sum);\n    }\n    if ($max_sum == 0) {\n        $max_sum = max(array_map(function($i) {return -$i;}, $nums));\n    }\n    $min_sum = -$max_sum;\n    return $min_sum;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong minSubArraySum(long[] nums)\n"
  },
  {
    "name": "HumanEval_88_sort_array",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] sort_array(long[] array)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_88_sort_array.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = sort_array;\n\n    assert(candidate([]) == []);\n    assert(candidate([5L]) == [5L]);\n    assert(candidate([2L, 4L, 3L, 0L, 1L, 5L]) == [0L, 1L, 2L, 3L, 4L, 5L]);\n    assert(candidate([2L, 4L, 3L, 0L, 1L, 5L, 6L]) == [6L, 5L, 4L, 3L, 2L, 1L, 0L]);\n    assert(candidate([2L, 1L]) == [1L, 2L]);\n    assert(candidate([15L, 42L, 87L, 32L, 11L, 0L]) == [0L, 11L, 15L, 32L, 42L, 87L]);\n    assert(candidate([21L, 14L, 23L, 11L]) == [23L, 21L, 14L, 11L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction sort_array($array) {\n    return empty($array) ? [] : (function() use($array) {\n        $is_even = ($array[0] + $array[count($array) - 1]) % 2 === 0;\n        sort($array);\n        return $is_even ? array_reverse($array) : $array;\n    })();\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] sort_array(long[] array)\n"
  },
  {
    "name": "HumanEval_111_histogram",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(long[string]) histogram(string test)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_111_histogram.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = histogram;\n\n{\n        auto result = candidate(\"a b b a\");\n        assert(!result.isNull && result.get == [\"a\": 2L, \"b\": 2L]);\n}\n\n{\n        auto result = candidate(\"a b c a b\");\n        assert(!result.isNull && result.get == [\"a\": 2L, \"b\": 2L]);\n}\n\n{\n        auto result = candidate(\"a b c d g\");\n        assert(!result.isNull && result.get == [\"a\": 1L, \"b\": 1L, \"c\": 1L, \"d\": 1L, \"g\": 1L]);\n}\n\n{\n        auto result = candidate(\"r t g\");\n        assert(!result.isNull && result.get == [\"r\": 1L, \"t\": 1L, \"g\": 1L]);\n}\n\n{\n        auto result = candidate(\"b b b b a\");\n        assert(!result.isNull && result.get == [\"b\": 4L]);\n}\n\n{\n        auto result = candidate(\"r t g\");\n        assert(!result.isNull && result.get == [\"r\": 1L, \"t\": 1L, \"g\": 1L]);\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"a\");\n        assert(!result.isNull && result.get == [\"a\": 1L]);\n}\n\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction histogram($test) {\n    $dict1=[];\n    $list1=explode(\" \", $test);\n    $t=0;\n\n    foreach ($list1 as $i) {\n        if (substr_count($test, $i) > $t && $i != '') {\n            $t = substr_count($test, $i);\n        }\n    }\n    if ($t > 0) {\n        foreach ($list1 as $i) {\n            if (substr_count($test, $i) == $t) {\n                $dict1[$i] = $t;\n            }\n        }\n    }\n    return $dict1;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(long[string]) histogram(string test)\n"
  },
  {
    "name": "HumanEval_123_get_odd_collatz",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] get_odd_collatz(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_123_get_odd_collatz.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = get_odd_collatz;\n\n    assert(candidate(14L) == [1L, 5L, 7L, 11L, 13L, 17L]);\n    assert(candidate(5L) == [1L, 5L]);\n    assert(candidate(12L) == [1L, 3L, 5L]);\n    assert(candidate(1L) == [1L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction get_odd_collatz($n) {\n    if ($n%2==0) {\n        $odd_collatz = [];\n    } else {\n        $odd_collatz = [$n];\n    }\n    while ($n > 1) {\n        if ($n % 2 == 0) {\n            $n = $n/2;\n        } else {\n            $n = $n*3 + 1;\n        }\n        if ($n%2 == 1) {\n            array_push($odd_collatz, intval($n));\n        }\n    }\n    sort($odd_collatz);\n    return $odd_collatz;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] get_odd_collatz(long n)\n"
  },
  {
    "name": "HumanEval_62_derivative",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] derivative(long[] xs)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_62_derivative.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = derivative;\n\n    assert(candidate([3L, 1L, 2L, 4L, 5L]) == [1L, 4L, 12L, 20L]);\n    assert(candidate([1L, 2L, 3L]) == [2L, 6L]);\n    assert(candidate([3L, 2L, 1L]) == [2L, 2L]);\n    assert(candidate([3L, 2L, 1L, 0L, 4L]) == [2L, 2L, 0L, 16L]);\n    assert(candidate([1L]) == []);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction derivative($xs) {\n    $result = [];\n    for ($i = 1; $i < count($xs); $i++) {\n        $result[] = $i * $xs[$i];\n    }\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] derivative(long[] xs)\n"
  },
  {
    "name": "HumanEval_63_fibfib",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fibfib(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_63_fibfib.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = fibfib;\n\n    assert(candidate(2L) == 1L);\n    assert(candidate(1L) == 0L);\n    assert(candidate(5L) == 4L);\n    assert(candidate(8L) == 24L);\n    assert(candidate(10L) == 81L);\n    assert(candidate(12L) == 274L);\n    assert(candidate(14L) == 927L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction fibfib($n) {\n    if ($n == 0) {\n        return 0;\n    }\n    if ($n == 1) {\n        return 0;\n    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fibfib($n - 1) + fibfib($n - 2) + fibfib($n - 3);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fibfib(long n)\n"
  },
  {
    "name": "HumanEval_2_truncate_number",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat truncate_number(float number)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_2_truncate_number.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = truncate_number;\n\n    assert(candidate(3.5) == 0.5);\n    assert(candidate(1.25) == 0.25);\n    assert(candidate(123.0) == 0.0);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction truncate_number($number) {\n    return fmod($number, 1.0);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat truncate_number(float number)\n"
  },
  {
    "name": "HumanEval_35_max_element",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong max_element(long[] l)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_35_max_element.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = max_element;\n\n    assert(candidate([1L, 2L, 3L]) == 3L);\n    assert(candidate([5L, 3L, -5L, 2L, -3L, 3L, 9L, 0L, 124L, 1L, -10L]) == 124L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction max_element($l) {\n    $m = $l[0];\n    foreach ($l as $e) {\n        if ($e > $m) {\n            $m = $e;\n        }\n    }\n    return $m;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong max_element(long[] l)\n"
  },
  {
    "name": "HumanEval_39_prime_fib",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong prime_fib(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_39_prime_fib.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = prime_fib;\n\n    assert(candidate(1L) == 2L);\n    assert(candidate(2L) == 3L);\n    assert(candidate(3L) == 5L);\n    assert(candidate(4L) == 13L);\n    assert(candidate(5L) == 89L);\n    assert(candidate(6L) == 233L);\n    assert(candidate(7L) == 1597L);\n    assert(candidate(8L) == 28657L);\n    assert(candidate(9L) == 514229L);\n    assert(candidate(10L) == 433494437L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction prime_fib($n) {\n    $is_prime=function($p) {\n        if ($p < 2) {\n            return False;\n        }\n        for ($k = 2; $k < min(intval(sqrt($p)) + 1, $p - 1); $k++) {\n            if ($p % $k == 0) {\n                return False;\n            }\n        }\n        return True;\n    };\n    $f = [0, 1];\n    while (True) {\n        $f[] = $f[count($f) - 1] + $f[count($f) - 2];\n        if ($is_prime($f[count($f) - 1])) {\n            $n -= 1;\n        }\n        if ($n == 0) {\n            return $f[count($f) - 1];\n        }\n    }\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong prime_fib(long n)\n"
  },
  {
    "name": "HumanEval_8_sum_product",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(long, long) sum_product(long[] numbers)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_8_sum_product.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction sum_product($numbers) {\n    $sum_value = 0;\n    $prod_value = 1;\n\n    foreach($numbers as $n) {\n        $sum_value += $n;\n        $prod_value *= $n;\n    }\n    return [$sum_value, $prod_value];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(long, long) sum_product(long[] numbers)\n"
  },
  {
    "name": "HumanEval_117_select_words",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] select_words(string s, long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_117_select_words.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = select_words;\n\n    assert(candidate(\"Mary had a little lamb\", 4L) == [\"little\"]);\n    assert(candidate(\"Mary had a little lamb\", 3L) == [\"Mary\", \"lamb\"]);\n    assert(candidate(\"simple white space\", 2L) == []);\n    assert(candidate(\"Hello world\", 4L) == [\"world\"]);\n    assert(candidate(\"Uncle sam\", 3L) == [\"Uncle\"]);\n    assert(candidate(\"\", 4L) == []);\n    assert(candidate(\"a b c d e f\", 1L) == [\"b\", \"c\", \"d\", \"f\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction select_words($s, $n) {\n    $result = [];\n    foreach (explode(\" \", $s) as $word) {\n        $n_consonants = 0;\n        foreach (str_split($word) as $c) {\n            if (!in_array(strtolower($c), [\"a\",\"e\",\"i\",\"o\",\"u\"])) {\n                $n_consonants += 1;\n            }\n        }\n        if ($n_consonants == $n) {\n            array_push($result, $word);\n        }\n    }\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] select_words(string s, long n)\n"
  },
  {
    "name": "HumanEval_122_add_elements",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong add_elements(long[] arr, long k)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_122_add_elements.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = add_elements;\n\n    assert(candidate([1L, -2L, -3L, 41L, 57L, 76L, 87L, 88L, 99L], 3L) == -4L);\n    assert(candidate([111L, 121L, 3L, 4000L, 5L, 6L], 2L) == 0L);\n    assert(candidate([11L, 21L, 3L, 90L, 5L, 6L, 7L, 8L, 9L], 4L) == 125L);\n    assert(candidate([111L, 21L, 3L, 4000L, 5L, 6L, 7L, 8L, 9L], 4L) == 24L);\n    assert(candidate([1L], 1L) == 1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction add_elements($arr, $k) {\n    return array_sum(array_filter(array_slice($arr, 0, $k), function($elem) {\n        return strlen(strval($elem)) <= 2;\n    }));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong add_elements(long[] arr, long k)\n"
  },
  {
    "name": "HumanEval_159_eat",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] eat(long number, long need, long remaining)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_159_eat.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = eat;\n\n    assert(candidate(5L, 6L, 10L) == [11L, 4L]);\n    assert(candidate(4L, 8L, 9L) == [12L, 1L]);\n    assert(candidate(1L, 10L, 10L) == [11L, 0L]);\n    assert(candidate(2L, 11L, 5L) == [7L, 0L]);\n    assert(candidate(4L, 5L, 7L) == [9L, 2L]);\n    assert(candidate(4L, 5L, 1L) == [5L, 0L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction eat($number, $need, $remaining) {\n    if($need <= $remaining) {\n        return [$number + $need, $remaining - $need];\n    } else {\n        return [$number + $remaining, 0];\n    }\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] eat(long number, long need, long remaining)\n"
  },
  {
    "name": "HumanEval_113_odd_count",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] odd_count(string[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_113_odd_count.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = odd_count;\n\n    assert(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]);\n    assert(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"]);\n    assert(candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction odd_count($lst) {\n    $res = [];\n    foreach ($lst as $arr) {\n        $n = array_sum(array_map(function($d) { return (int)$d%2==1; }, str_split($arr)));\n        $res[] = \"the number of odd elements \" . $n . \"n the str\". $n .\"ng \". $n .\" of the \". $n .\"nput.\";\n    }\n    return $res;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] odd_count(string[] lst)\n"
  },
  {
    "name": "HumanEval_90_next_smallest",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(long) next_smallest(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_90_next_smallest.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = next_smallest;\n\n{\n        auto result = candidate([1L, 2L, 3L, 4L, 5L]);\n        assert(!result.isNull && result.get == 2L);\n}\n\n{\n        auto result = candidate([5L, 1L, 4L, 3L, 2L]);\n        assert(!result.isNull && result.get == 2L);\n}\n\n{\n        auto result = candidate([]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([1L, 1L]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([1L, 1L, 1L, 1L, 0L]);\n        assert(!result.isNull && result.get == 1L);\n}\n\n{\n        auto result = candidate([1L, 1L]);\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate([-35L, 34L, 12L, -45L]);\n        assert(!result.isNull && result.get == -35L);\n}\n\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction next_smallest($lst) {\n    $lst = array_unique($lst);\n    sort($lst);\n    return count($lst) < 2 ? null : $lst[1];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nNullable!(long) next_smallest(long[] lst)\n"
  },
  {
    "name": "HumanEval_87_get_row",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(long, long)[] get_row(long[][] lst, long x)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_87_get_row.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = get_row;\n\n    assert(candidate([[1L, 2L, 3L, 4L, 5L, 6L], [1L, 2L, 3L, 4L, 1L, 6L], [1L, 2L, 3L, 4L, 5L, 1L]], 1L) == [tuple(0L, 0L), tuple(1L, 4L), tuple(1L, 0L), tuple(2L, 5L), tuple(2L, 0L)]);\n    assert(candidate([[1L, 2L, 3L, 4L, 5L, 6L], [1L, 2L, 3L, 4L, 5L, 6L], [1L, 2L, 3L, 4L, 5L, 6L], [1L, 2L, 3L, 4L, 5L, 6L], [1L, 2L, 3L, 4L, 5L, 6L], [1L, 2L, 3L, 4L, 5L, 6L]], 2L) == [tuple(0L, 1L), tuple(1L, 1L), tuple(2L, 1L), tuple(3L, 1L), tuple(4L, 1L), tuple(5L, 1L)]);\n    assert(candidate([[1L, 2L, 3L, 4L, 5L, 6L], [1L, 2L, 3L, 4L, 5L, 6L], [1L, 1L, 3L, 4L, 5L, 6L], [1L, 2L, 1L, 4L, 5L, 6L], [1L, 2L, 3L, 1L, 5L, 6L], [1L, 2L, 3L, 4L, 1L, 6L], [1L, 2L, 3L, 4L, 5L, 1L]], 1L) == [tuple(0L, 0L), tuple(1L, 0L), tuple(2L, 1L), tuple(2L, 0L), tuple(3L, 2L), tuple(3L, 0L), tuple(4L, 3L), tuple(4L, 0L), tuple(5L, 4L), tuple(5L, 0L), tuple(6L, 5L), tuple(6L, 0L)]);\n    assert(candidate([], 1L) == []);\n    assert(candidate([[1L]], 2L) == []);\n    assert(candidate([[], [1L], [1L, 2L, 3L]], 3L) == [tuple(2L, 2L)]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction get_row($lst, $x) {\n    $coords = [];\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $v) {\n            if ($v === $x) {\n                $coords[] = [$i, $j];\n            }\n        }\n    }\n    usort($coords, function($a, $b) {\n        if ($a[0] === $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $coords;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(long, long)[] get_row(long[][] lst, long x)\n"
  },
  {
    "name": "HumanEval_29_filter_by_prefix",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] filter_by_prefix(string[] strings, string prefix)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_29_filter_by_prefix.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = filter_by_prefix;\n\n    assert(candidate([], \"john\") == []);\n    assert(candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction filter_by_prefix($strings, $prefix) {\n    $result = [];\n    foreach ($strings as $x) {\n        if (strpos($x, $prefix) === 0) {\n            $result[] = $x;\n        }\n    }\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] filter_by_prefix(string[] strings, string prefix)\n"
  },
  {
    "name": "HumanEval_102_choose_num",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong choose_num(long x, long y)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_102_choose_num.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = choose_num;\n\n    assert(candidate(12L, 15L) == 14L);\n    assert(candidate(13L, 12L) == -1L);\n    assert(candidate(33L, 12354L) == 12354L);\n    assert(candidate(5234L, 5233L) == -1L);\n    assert(candidate(6L, 29L) == 28L);\n    assert(candidate(27L, 10L) == -1L);\n    assert(candidate(7L, 7L) == -1L);\n    assert(candidate(546L, 546L) == 546L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction choose_num($x, $y) {\n    if ($x > $y) {\n        return -1;\n    }\n    if ($y % 2 == 0) {\n        return $y;\n    }\n    if ($x == $y) {\n        return -1;\n    }\n    return $y - 1;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong choose_num(long x, long y)\n"
  },
  {
    "name": "HumanEval_82_prime_length",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool prime_length(string string)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_82_prime_length.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = prime_length;\n\n    assert(candidate(\"Hello\") == true);\n    assert(candidate(\"abcdcba\") == true);\n    assert(candidate(\"kittens\") == true);\n    assert(candidate(\"orange\") == false);\n    assert(candidate(\"wow\") == true);\n    assert(candidate(\"world\") == true);\n    assert(candidate(\"MadaM\") == true);\n    assert(candidate(\"Wow\") == true);\n    assert(candidate(\"\") == false);\n    assert(candidate(\"HI\") == true);\n    assert(candidate(\"go\") == true);\n    assert(candidate(\"gogo\") == false);\n    assert(candidate(\"aaaaaaaaaaaaaaa\") == false);\n    assert(candidate(\"Madam\") == true);\n    assert(candidate(\"M\") == false);\n    assert(candidate(\"0\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction prime_length($string) {\n    $l = strlen($string);\n    if ($l == 0 || $l == 1) {\n        return false;\n    }\n    for ($i = 2; $i < $l; $i++) {\n        if ($l % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool prime_length(string string)\n"
  },
  {
    "name": "HumanEval_60_sum_to_n",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong sum_to_n(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_60_sum_to_n.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = sum_to_n;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(6L) == 21L);\n    assert(candidate(11L) == 66L);\n    assert(candidate(30L) == 465L);\n    assert(candidate(100L) == 5050L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction sum_to_n($n) {\n    return array_sum(range(0, $n));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong sum_to_n(long n)\n"
  },
  {
    "name": "HumanEval_140_fix_spaces",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring fix_spaces(string text)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_140_fix_spaces.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\");\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\");\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction fix_spaces($text) {\n    $new_text = \"\";\n    $i = 0;\n    $start = $end = 0;\n    while ($i < strlen($text)) {\n        if ($text[$i] == \" \") {\n            $end += 1;\n        } else {\n            if ($end - $start > 2) {\n                $new_text .= \"-\".$text[$i];\n            } elseif ($end - $start > 0) {\n                $new_text .= str_repeat(\"_\", $end - $start).$text[$i];\n            } else {\n                $new_text .= $text[$i];\n            }\n            $start = $end = $i+1;\n        }\n        $i+=1;\n    }\n    if ($end - $start > 2) {\n        $new_text .= \"-\";\n    } elseif ($end - $start > 0) {\n        $new_text .= \"_\";\n    }\n    return $new_text;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring fix_spaces(string text)\n"
  },
  {
    "name": "HumanEval_9_rolling_max",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] rolling_max(long[] numbers)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_9_rolling_max.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = rolling_max;\n\n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 2L, 3L, 4L]);\n    assert(candidate([4L, 3L, 2L, 1L]) == [4L, 4L, 4L, 4L]);\n    assert(candidate([3L, 2L, 3L, 100L, 3L]) == [3L, 3L, 3L, 100L, 100L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction rolling_max($numbers) {\n    $running_max = null;\n    $result = [];\n\n    foreach ($numbers as $n) {\n        if ($running_max === null) {\n            $running_max = $n;\n        } else {\n            $running_max = max($running_max, $n);\n        }\n\n        $result[] = $running_max;\n    }\n\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] rolling_max(long[] numbers)\n"
  },
  {
    "name": "HumanEval_143_words_in_sentence",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring words_in_sentence(string sentence)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_143_words_in_sentence.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = words_in_sentence;\n\n    assert(candidate(\"This is a test\") == \"is\");\n    assert(candidate(\"lets go for swimming\") == \"go for\");\n    assert(candidate(\"there is no place available here\") == \"there is no place\");\n    assert(candidate(\"Hi I am Hussein\") == \"Hi am Hussein\");\n    assert(candidate(\"go for it\") == \"go for it\");\n    assert(candidate(\"here\") == \"\");\n    assert(candidate(\"here is\") == \"is\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction words_in_sentence($sentence) {\n    $new_lst = [];\n    foreach(explode(\" \", $sentence) as $word) {\n        $flg = 0;\n        if (strlen($word) == 1) {\n            $flg = 1;\n        }\n        for ($i = 2; $i < strlen($word); $i++) {\n            if (strlen($word)%$i == 0) {\n                $flg = 1;\n            }\n        }\n        if ($flg == 0 || strlen($word) == 2) {\n            array_push($new_lst, $word);\n        }\n    }\n    return join(\" \", $new_lst);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring words_in_sentence(string sentence)\n"
  },
  {
    "name": "HumanEval_118_get_closest_vowel",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring get_closest_vowel(string word)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_118_get_closest_vowel.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = get_closest_vowel;\n\n    assert(candidate(\"yogurt\") == \"u\");\n    assert(candidate(\"full\") == \"u\");\n    assert(candidate(\"easy\") == \"\");\n    assert(candidate(\"eAsy\") == \"\");\n    assert(candidate(\"ali\") == \"\");\n    assert(candidate(\"bad\") == \"a\");\n    assert(candidate(\"most\") == \"o\");\n    assert(candidate(\"ab\") == \"\");\n    assert(candidate(\"ba\") == \"\");\n    assert(candidate(\"quick\") == \"\");\n    assert(candidate(\"anime\") == \"i\");\n    assert(candidate(\"Asia\") == \"\");\n    assert(candidate(\"Above\") == \"o\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction get_closest_vowel($word) {\n    if (strlen($word) < 3) {\n        return \"\";\n    }\n\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", 'O', 'U', 'I'];\n    for ($i = strlen($word)-2; $i > 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if (!in_array($word[$i+1], $vowels) && !in_array($word[$i-1], $vowels)) {\n                return $word[$i];\n            }\n        }\n    }\n    return \"\";\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring get_closest_vowel(string word)\n"
  },
  {
    "name": "HumanEval_152_compare",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] compare(long[] game, long[] guess)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_152_compare.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = compare;\n\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 1L], [1L, 2L, 3L, 4L, 2L, -2L]) == [0L, 0L, 0L, 0L, 3L, 3L]);\n    assert(candidate([0L, 0L, 0L, 0L, 0L, 0L], [0L, 0L, 0L, 0L, 0L, 0L]) == [0L, 0L, 0L, 0L, 0L, 0L]);\n    assert(candidate([1L, 2L, 3L], [-1L, -2L, -3L]) == [2L, 4L, 6L]);\n    assert(candidate([1L, 2L, 3L, 5L], [-1L, 2L, 3L, 4L]) == [2L, 0L, 0L, 1L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction compare($game, $guess) {\n    return array_map(function($x, $y) { return abs($x - $y); }, $game, $guess);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] compare(long[] game, long[] guess)\n"
  },
  {
    "name": "HumanEval_54_same_chars",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool same_chars(string s0, string s1)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_54_same_chars.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = same_chars;\n\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddeddabc\") == true);\n    assert(candidate(\"abcd\", \"dddddddabc\") == true);\n    assert(candidate(\"dddddddabc\", \"abcd\") == true);\n    assert(candidate(\"eabcd\", \"dddddddabc\") == false);\n    assert(candidate(\"abcd\", \"dddddddabcf\") == false);\n    assert(candidate(\"eabcdzzzz\", \"dddzzzzzzzddddabc\") == false);\n    assert(candidate(\"aabb\", \"aaccc\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction same_chars($s0, $s1) {\n    return array_diff(str_split($s0), str_split($s1)) == array_diff(str_split($s1), str_split($s0));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool same_chars(string s0, string s1)\n"
  },
  {
    "name": "HumanEval_6_parse_nested_parens",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] parse_nested_parens(string paren_string)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_6_parse_nested_parens.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = parse_nested_parens;\n\n    assert(candidate(\"(()()) ((())) () ((())()())\") == [2L, 3L, 1L, 3L]);\n    assert(candidate(\"() (()) ((())) (((())))\") == [1L, 2L, 3L, 4L]);\n    assert(candidate(\"(()(())((())))\") == [4L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction parse_nested_parens($paren_string) {\n    $parse_paren_group = function($s) {\n        $depth = 0;\n        $max_depth = 0;\n        for ($i = 0; $i < strlen($s); $i++) {\n            if ($s[$i] === '(') {\n                $depth += 1;\n                $max_depth = max($depth, $max_depth);\n            } else {\n                $depth -= 1;\n            }\n        }\n\n        return $max_depth;\n    };\n\n    return array_map($parse_paren_group, array_filter(explode(' ', $paren_string)));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] parse_nested_parens(string paren_string)\n"
  },
  {
    "name": "HumanEval_155_even_odd_count",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(long, long) even_odd_count(long num)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_155_even_odd_count.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction even_odd_count($num) {\n    $even_count = 0;\n    $odd_count = 0;\n    foreach (str_split(abs($num)) as $i) {\n        if ($i % 2 == 0) {\n            $even_count += 1;\n        } else {\n            $odd_count += 1;\n        }\n    }\n    return [$even_count, $odd_count];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(long, long) even_odd_count(long num)\n"
  },
  {
    "name": "HumanEval_67_fruit_distribution",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fruit_distribution(string s, long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_67_fruit_distribution.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = fruit_distribution;\n\n    assert(candidate(\"5 apples and 6 oranges\", 19L) == 8L);\n    assert(candidate(\"5 apples and 6 oranges\", 21L) == 10L);\n    assert(candidate(\"0 apples and 1 oranges\", 3L) == 2L);\n    assert(candidate(\"1 apples and 0 oranges\", 3L) == 2L);\n    assert(candidate(\"2 apples and 3 oranges\", 100L) == 95L);\n    assert(candidate(\"2 apples and 3 oranges\", 5L) == 0L);\n    assert(candidate(\"1 apples and 100 oranges\", 120L) == 19L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction fruit_distribution($s, $n) {\n    $lis = [];\n    foreach (explode(' ', $s) as $i) {\n        if (is_numeric($i)) {\n            array_push($lis, intval($i));\n        }\n    }\n    return $n - array_sum($lis);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong fruit_distribution(string s, long n)\n"
  },
  {
    "name": "HumanEval_11_string_xor",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring string_xor(string a, string b)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_11_string_xor.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = string_xor;\n\n    assert(candidate(\"111000\", \"101010\") == \"010010\");\n    assert(candidate(\"1\", \"1\") == \"0\");\n    assert(candidate(\"0101\", \"0000\") == \"0101\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction string_xor($a, $b) {\n    $xor = function($i, $j) {\n        return $i === $j ? '0' : '1';\n    };\n\n    return join('', array_map($xor, str_split($a), str_split($b)));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring string_xor(string a, string b)\n"
  },
  {
    "name": "HumanEval_15_string_sequence",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring string_sequence(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_15_string_sequence.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = string_sequence;\n\n    assert(candidate(0L) == \"0\");\n    assert(candidate(3L) == \"0 1 2 3\");\n    assert(candidate(10L) == \"0 1 2 3 4 5 6 7 8 9 10\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction string_sequence($n) {\n    return implode(' ', range(0, $n));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring string_sequence(long n)\n"
  },
  {
    "name": "HumanEval_141_file_name_check",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring file_name_check(string file_name)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_141_file_name_check.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = file_name_check;\n\n    assert(candidate(\"example.txt\") == \"Yes\");\n    assert(candidate(\"1example.dll\") == \"No\");\n    assert(candidate(\"s1sdf3.asd\") == \"No\");\n    assert(candidate(\"K.dll\") == \"Yes\");\n    assert(candidate(\"MY16FILE3.exe\") == \"Yes\");\n    assert(candidate(\"His12FILE94.exe\") == \"No\");\n    assert(candidate(\"_Y.txt\") == \"No\");\n    assert(candidate(\"?aREYA.exe\") == \"No\");\n    assert(candidate(\"/this_is_valid.dll\") == \"No\");\n    assert(candidate(\"this_is_valid.wow\") == \"No\");\n    assert(candidate(\"this_is_valid.txt\") == \"Yes\");\n    assert(candidate(\"this_is_valid.txtexe\") == \"No\");\n    assert(candidate(\"#this2_i4s_5valid.ten\") == \"No\");\n    assert(candidate(\"@this1_is6_valid.exe\") == \"No\");\n    assert(candidate(\"this_is_12valid.6exe4.txt\") == \"No\");\n    assert(candidate(\"all.exe.txt\") == \"No\");\n    assert(candidate(\"I563_No.exe\") == \"Yes\");\n    assert(candidate(\"Is3youfault.txt\") == \"Yes\");\n    assert(candidate(\"no_one#knows.dll\") == \"Yes\");\n    assert(candidate(\"1I563_Yes3.exe\") == \"No\");\n    assert(candidate(\"I563_Yes3.txtt\") == \"No\");\n    assert(candidate(\"final..txt\") == \"No\");\n    assert(candidate(\"final132\") == \"No\");\n    assert(candidate(\"_f4indsartal132.\") == \"No\");\n    assert(candidate(\".txt\") == \"No\");\n    assert(candidate(\"s.\") == \"No\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction file_name_check($file_name) {\n    $suf = ['txt', 'exe', 'dll'];\n    $lst = explode('.', $file_name);\n    if (count($lst) != 2) {\n        return 'No';\n    }\n    if (!in_array($lst[1], $suf)) {\n        return 'No';\n    }\n    if (strlen($lst[0]) == 0) {\n        return 'No';\n    }\n    if (!ctype_alpha($lst[0][0])) {\n        return 'No';\n    }\n    $t = preg_match_all('/\\d/', $lst[0]);\n    if ($t > 3) {\n        return 'No';\n    }\n    return 'Yes';\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring file_name_check(string file_name)\n"
  },
  {
    "name": "HumanEval_135_can_arrange",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong can_arrange(long[] arr)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_135_can_arrange.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = can_arrange;\n\n    assert(candidate([1L, 2L, 4L, 3L, 5L]) == 3L);\n    assert(candidate([1L, 2L, 4L, 5L]) == -1L);\n    assert(candidate([1L, 4L, 2L, 5L, 6L, 7L, 8L, 9L, 10L]) == 2L);\n    assert(candidate([4L, 8L, 5L, 7L, 3L]) == 4L);\n    assert(candidate([]) == -1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction can_arrange($arr) {\n    $ind = -1;\n    for ($i = 1; $i < count($arr); $i++) {\n        if ($arr[$i] < $arr[$i-1]) {\n            $ind = $i;\n        }\n    }\n    return $ind;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong can_arrange(long[] arr)\n"
  },
  {
    "name": "HumanEval_85_add",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong add(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_85_add.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction add($lst) {\n  $sum = 0;\n  for ($i = 1; $i < count($lst); $i += 2) {\n    if ($lst[$i] % 2 == 0) {\n      $sum += $lst[$i];\n    }\n  }\n  return $sum;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong add(long[] lst)\n"
  },
  {
    "name": "HumanEval_5_intersperse",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] intersperse(long[] numbers, long delimeter)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_5_intersperse.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = intersperse;\n\n    assert(candidate([], 7L) == []);\n    assert(candidate([5L, 6L, 3L, 2L], 8L) == [5L, 8L, 6L, 8L, 3L, 8L, 2L]);\n    assert(candidate([2L, 2L, 2L], 2L) == [2L, 2L, 2L, 2L, 2L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction intersperse($numbers, $delimeter) {\n    if (empty($numbers)) {\n        return [];\n    }\n\n    $result = [];\n\n    foreach ($numbers as $n) {\n        $result[] = $n;\n        $result[] = $delimeter;\n    }\n\n    array_pop($result);\n\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] intersperse(long[] numbers, long delimeter)\n"
  },
  {
    "name": "HumanEval_119_match_parens",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring match_parens(string[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_119_match_parens.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = match_parens;\n\n    assert(candidate([\"()(\", \")\"]) == \"Yes\");\n    assert(candidate([\")\", \")\"]) == \"No\");\n    assert(candidate([\"(()(())\", \"())())\"]) == \"No\");\n    assert(candidate([\")())\", \"(()()(\"]) == \"Yes\");\n    assert(candidate([\"(())))\", \"(()())((\"]) == \"Yes\");\n    assert(candidate([\"()\", \"())\"]) == \"No\");\n    assert(candidate([\"(()(\", \"()))()\"]) == \"Yes\");\n    assert(candidate([\"((((\", \"((())\"]) == \"No\");\n    assert(candidate([\")(()\", \"(()(\"]) == \"No\");\n    assert(candidate([\")(\", \")(\"]) == \"No\");\n    assert(candidate([\"(\", \")\"]) == \"Yes\");\n    assert(candidate([\")\", \"(\"]) == \"Yes\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction match_parens($lst) {\n    $check = function($s) {\n        $val = 0;\n        for ($i = 0; $i < strlen($s); $i++) {\n            if ($s[$i] == '(') {\n                $val += 1;\n            } else {\n                $val -= 1;\n            }\n            if ($val < 0) {\n                return false;\n            }\n        }\n        return $val == 0;\n    };\n\n    $S1 = $lst[0] . $lst[1];\n    $S2 = $lst[1] . $lst[0];\n    return $check($S1) || $check($S2) ? 'Yes' : 'No';\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring match_parens(string[] lst)\n"
  },
  {
    "name": "HumanEval_92_any_int",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool any_int(float x, float y, float z)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_92_any_int.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z)) {\n        if (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n            return true;\n        }\n    }\n    return false;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool any_int(float x, float y, float z)\n"
  },
  {
    "name": "HumanEval_7_filter_by_substring",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] filter_by_substring(string[] strings, string substring)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_7_filter_by_substring.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = filter_by_substring;\n\n    assert(candidate([], \"john\") == []);\n    assert(candidate([\"xxx\", \"asd\", \"xxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xxx\") == [\"xxx\", \"xxxAAA\", \"xxx\"]);\n    assert(candidate([\"xxx\", \"asd\", \"aaaxxy\", \"john doe\", \"xxxAAA\", \"xxx\"], \"xx\") == [\"xxx\", \"aaaxxy\", \"xxxAAA\", \"xxx\"]);\n    assert(candidate([\"grunt\", \"trumpet\", \"prune\", \"gruesome\"], \"run\") == [\"grunt\", \"prune\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction filter_by_substring($strings, $substring) {\n    return array_values(array_filter($strings, function($x) use ($substring) {\n        return strpos($x, $substring) !== false;\n    }));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] filter_by_substring(string[] strings, string substring)\n"
  },
  {
    "name": "HumanEval_158_find_max",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring find_max(string[] words)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_158_find_max.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = find_max;\n\n    assert(candidate([\"name\", \"of\", \"string\"]) == \"string\");\n    assert(candidate([\"name\", \"enam\", \"game\"]) == \"enam\");\n    assert(candidate([\"aaaaaaa\", \"bb\", \"cc\"]) == \"aaaaaaa\");\n    assert(candidate([\"abc\", \"cba\"]) == \"abc\");\n    assert(candidate([\"play\", \"this\", \"game\", \"of\", \"footbott\"]) == \"footbott\");\n    assert(candidate([\"we\", \"are\", \"gonna\", \"rock\"]) == \"gonna\");\n    assert(candidate([\"we\", \"are\", \"a\", \"mad\", \"nation\"]) == \"nation\");\n    assert(candidate([\"this\", \"is\", \"a\", \"prrk\"]) == \"this\");\n    assert(candidate([\"b\"]) == \"b\");\n    assert(candidate([\"play\", \"play\", \"play\"]) == \"play\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction find_max($words) {\n    usort($words, function($a, $b) {\n        return (count(array_unique(str_split($b))) <=> count(array_unique(str_split($a)))) ?: strcmp($a, $b);\n    });\n\n    return $words[0];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring find_max(string[] words)\n"
  },
  {
    "name": "HumanEval_163_generate_integers",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] generate_integers(long a, long b)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_163_generate_integers.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = generate_integers;\n\n    assert(candidate(2L, 10L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(10L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(132L, 2L) == [2L, 4L, 6L, 8L]);\n    assert(candidate(17L, 89L) == []);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction generate_integers($a, $b) {\n    $lower = max(2, min($a, $b));\n    $upper = min(8, max($a, $b));\n\n    $result = [];\n    for ($i = $lower; $i <= $upper; $i++) {\n        if ($i % 2 === 0) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] generate_integers(long a, long b)\n"
  },
  {
    "name": "HumanEval_110_exchange",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring exchange(long[] lst1, long[] lst2)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_110_exchange.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = exchange;\n\n    assert(candidate([1L, 2L, 3L, 4L], [1L, 2L, 3L, 4L]) == \"YES\");\n    assert(candidate([1L, 2L, 3L, 4L], [1L, 5L, 3L, 4L]) == \"NO\");\n    assert(candidate([1L, 2L, 3L, 4L], [2L, 1L, 4L, 3L]) == \"YES\");\n    assert(candidate([5L, 7L, 3L], [2L, 6L, 4L]) == \"YES\");\n    assert(candidate([5L, 7L, 3L], [2L, 6L, 3L]) == \"NO\");\n    assert(candidate([3L, 2L, 6L, 1L, 8L, 9L], [3L, 5L, 5L, 1L, 1L, 1L]) == \"NO\");\n    assert(candidate([100L, 200L], [200L, 200L]) == \"YES\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction exchange($lst1, $lst2) {\n  $odd = 0;\n  $even = 0;\n  foreach ($lst1 as $i) {\n    if ($i%2 == 1) {\n      $odd += 1;\n    }\n  }\n  foreach ($lst2 as $i) {\n    if ($i%2 == 0) {\n      $even += 1;\n    }\n  }\n  if ($even >= $odd) {\n    return \"YES\";\n  }\n  return \"NO\";\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring exchange(long[] lst1, long[] lst2)\n"
  },
  {
    "name": "HumanEval_156_int_to_mini_roman",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring int_to_mini_roman(long number)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_156_int_to_mini_roman.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = int_to_mini_roman;\n\n    assert(candidate(19L) == \"xix\");\n    assert(candidate(152L) == \"clii\");\n    assert(candidate(251L) == \"ccli\");\n    assert(candidate(426L) == \"cdxxvi\");\n    assert(candidate(500L) == \"d\");\n    assert(candidate(1L) == \"i\");\n    assert(candidate(4L) == \"iv\");\n    assert(candidate(43L) == \"xliii\");\n    assert(candidate(90L) == \"xc\");\n    assert(candidate(94L) == \"xciv\");\n    assert(candidate(532L) == \"dxxxii\");\n    assert(candidate(900L) == \"cm\");\n    assert(candidate(994L) == \"cmxciv\");\n    assert(candidate(1000L) == \"m\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction int_to_mini_roman($number) {\n    $num = [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000];\n    $sym = [\"I\", \"IV\", \"V\", \"IX\", \"X\", \"XL\", \"L\", \"XC\", \"C\", \"CD\", \"D\", \"CM\", \"M\"];\n    $i = 12;\n    $res = '';\n    while ($number) {\n        $div = intdiv($number, $num[$i]);\n        $number %= $num[$i];\n        while ($div) {\n            $res .= $sym[$i];\n            $div--;\n        }\n        $i--;\n    }\n    return strtolower($res);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring int_to_mini_roman(long number)\n"
  },
  {
    "name": "HumanEval_138_is_equal_to_sum_even",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_equal_to_sum_even(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_138_is_equal_to_sum_even.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_equal_to_sum_even;\n\n    assert(candidate(4L) == false);\n    assert(candidate(6L) == false);\n    assert(candidate(8L) == true);\n    assert(candidate(10L) == true);\n    assert(candidate(11L) == false);\n    assert(candidate(12L) == true);\n    assert(candidate(13L) == false);\n    assert(candidate(16L) == true);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_equal_to_sum_even($n) {\n    return $n%2 == 0 && $n >= 8;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_equal_to_sum_even(long n)\n"
  },
  {
    "name": "HumanEval_79_decimal_to_binary",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring decimal_to_binary(long decimal)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_79_decimal_to_binary.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = decimal_to_binary;\n\n    assert(candidate(0L) == \"db0db\");\n    assert(candidate(32L) == \"db100000db\");\n    assert(candidate(103L) == \"db1100111db\");\n    assert(candidate(15L) == \"db1111db\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction decimal_to_binary($decimal) {\n    return \"db\".decbin($decimal).\"db\";\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring decimal_to_binary(long decimal)\n"
  },
  {
    "name": "HumanEval_144_simplify",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool simplify(string x, string n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_144_simplify.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = simplify;\n\n    assert(candidate(\"1/5\", \"5/1\") == true);\n    assert(candidate(\"1/6\", \"2/1\") == false);\n    assert(candidate(\"5/1\", \"3/1\") == true);\n    assert(candidate(\"7/10\", \"10/2\") == false);\n    assert(candidate(\"2/10\", \"50/10\") == true);\n    assert(candidate(\"7/2\", \"4/2\") == true);\n    assert(candidate(\"11/6\", \"6/1\") == true);\n    assert(candidate(\"2/3\", \"5/2\") == false);\n    assert(candidate(\"5/2\", \"3/5\") == false);\n    assert(candidate(\"2/4\", \"8/4\") == true);\n    assert(candidate(\"2/4\", \"4/2\") == true);\n    assert(candidate(\"1/5\", \"5/1\") == true);\n    assert(candidate(\"1/5\", \"1/5\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction simplify($x, $n) {\n    list($a, $b) = explode(\"/\", $x);\n    list($c, $d) = explode(\"/\", $n);\n    $numerator = $a * $c;\n    $denom = $b * $d;\n    if ($numerator / $denom == floor($numerator / $denom)) {\n        return true;\n    }\n    return false;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool simplify(string x, string n)\n"
  },
  {
    "name": "HumanEval_161_solve",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring solve(string s)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_161_solve.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\") == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"#AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\") == \"#CCC\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction solve($s) {\n    $flg = 0;\n    $idx = 0;\n    $new_str = str_split($s);\n    foreach ($new_str as &$i) {\n        if (ctype_alpha($i)) {\n            $i = ctype_upper($i) ? strtolower($i) : strtoupper($i);\n            $flg = 1;\n        }\n        $idx += 1;\n    }\n    $s = implode($new_str);\n    if ($flg == 0) {\n        return strrev($s);\n    }\n    return $s;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring solve(string s)\n"
  },
  {
    "name": "HumanEval_157_right_angle_triangle",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool right_angle_triangle(long a, long b, long c)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_157_right_angle_triangle.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = right_angle_triangle;\n\n    assert(candidate(3L, 4L, 5L) == true);\n    assert(candidate(1L, 2L, 3L) == false);\n    assert(candidate(10L, 6L, 8L) == true);\n    assert(candidate(2L, 2L, 2L) == false);\n    assert(candidate(7L, 24L, 25L) == true);\n    assert(candidate(10L, 5L, 7L) == false);\n    assert(candidate(5L, 12L, 13L) == true);\n    assert(candidate(15L, 8L, 17L) == true);\n    assert(candidate(48L, 55L, 73L) == true);\n    assert(candidate(1L, 1L, 1L) == false);\n    assert(candidate(2L, 2L, 10L) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction right_angle_triangle($a, $b, $c) {\n    return $a*$a == $b*$b + $c*$c || $b*$b == $a*$a + $c*$c || $c*$c == $a*$a + $b*$b;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool right_angle_triangle(long a, long b, long c)\n"
  },
  {
    "name": "HumanEval_3_below_zero",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool below_zero(long[] operations)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_3_below_zero.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = below_zero;\n\n    assert(candidate([]) == false);\n    assert(candidate([1L, 2L, -3L, 1L, 2L, -3L]) == false);\n    assert(candidate([1L, 2L, -4L, 5L, 6L]) == true);\n    assert(candidate([1L, -1L, 2L, -2L, 5L, -5L, 4L, -4L]) == false);\n    assert(candidate([1L, -1L, 2L, -2L, 5L, -5L, 4L, -5L]) == true);\n    assert(candidate([1L, -2L, 2L, -2L, 5L, -5L, 4L, -4L]) == true);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction below_zero($operations) {\n    $balance = 0;\n\n    foreach ($operations as $op) {\n        $balance += $op;\n        if ($balance < 0) {\n            return true;\n        }\n    }\n\n    return false;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool below_zero(long[] operations)\n"
  },
  {
    "name": "HumanEval_13_greatest_common_divisor",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong greatest_common_divisor(long a, long b)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_13_greatest_common_divisor.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction greatest_common_divisor($a, $b) {\n    while ($b) {\n        [$a, $b] = [$b, $a % $b];\n    }\n    return $a;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong greatest_common_divisor(long a, long b)\n"
  },
  {
    "name": "HumanEval_106_f",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] f(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_106_f.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = f;\n\n    assert(candidate(5L) == [1L, 2L, 6L, 24L, 15L]);\n    assert(candidate(7L) == [1L, 2L, 6L, 24L, 15L, 720L, 28L]);\n    assert(candidate(1L) == [1L]);\n    assert(candidate(3L) == [1L, 2L, 6L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction f($n) {\n    $ret = [];\n    for ($i = 1; $i <= $n; $i++) {\n        if ($i%2 == 0) {\n            $x = 1;\n            for ($j = 1; $j <= $i; $j++) $x *= $j;\n            $ret[] = $x;\n        } else {\n            $x = 0;\n            for ($j = 1; $j <= $i; $j++) $x += $j;\n            $ret[] = $x;\n        }\n    }\n    return $ret;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] f(long n)\n"
  },
  {
    "name": "HumanEval_105_by_length",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] by_length(long[] arr)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_105_by_length.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = by_length;\n\n    assert(candidate([2L, 1L, 1L, 4L, 5L, 8L, 2L, 3L]) == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]);\n    assert(candidate([]) == []);\n    assert(candidate([1L, -1L, 55L]) == [\"One\"]);\n    assert(candidate([1L, -1L, 3L, 2L]) == [\"Three\", \"Two\", \"One\"]);\n    assert(candidate([9L, 4L, 8L]) == [\"Nine\", \"Eight\", \"Four\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction by_length($arr) {\n    $dic = [\n        1 => \"One\",\n        2 => \"Two\",\n        3 => \"Three\",\n        4 => \"Four\",\n        5 => \"Five\",\n        6 => \"Six\",\n        7 => \"Seven\",\n        8 => \"Eight\",\n        9 => \"Nine\",\n    ];\n    rsort($arr);\n    $new_arr = [];\n    foreach ($arr as $var) {\n        if (array_key_exists($var, $dic)) {\n            $new_arr[] = $dic[$var];\n        }\n    }\n    return $new_arr;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] by_length(long[] arr)\n"
  },
  {
    "name": "HumanEval_51_remove_vowels",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring remove_vowels(string text)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_51_remove_vowels.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = remove_vowels;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"abcdef\nghijklm\") == \"bcdf\nghjklm\");\n    assert(candidate(\"fedcba\") == \"fdcb\");\n    assert(candidate(\"eeeee\") == \"\");\n    assert(candidate(\"acBAA\") == \"cB\");\n    assert(candidate(\"EcBOO\") == \"cB\");\n    assert(candidate(\"ybcd\") == \"ybcd\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction remove_vowels($text) {\n    return preg_replace(\"/[aeiou]/i\", \"\", $text);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring remove_vowels(string text)\n"
  },
  {
    "name": "HumanEval_134_check_if_last_char_is_a_letter",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool check_if_last_char_is_a_letter(string txt)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_134_check_if_last_char_is_a_letter.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = check_if_last_char_is_a_letter;\n\n    assert(candidate(\"apple\") == false);\n    assert(candidate(\"apple pi e\") == true);\n    assert(candidate(\"eeeee\") == false);\n    assert(candidate(\"A\") == true);\n    assert(candidate(\"Pumpkin pie \") == false);\n    assert(candidate(\"Pumpkin pie 1\") == false);\n    assert(candidate(\"\") == false);\n    assert(candidate(\"eeeee e \") == false);\n    assert(candidate(\"apple pie\") == false);\n    assert(candidate(\"apple pi e \") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction check_if_last_char_is_a_letter($txt) {\n    $check = explode(' ', $txt);\n    $check = end($check);\n    return (strlen($check) == 1 && (ord(strtolower($check)) >= 97 && ord(strtolower($check)) <= 122));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool check_if_last_char_is_a_letter(string txt)\n"
  },
  {
    "name": "HumanEval_77_iscube",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool iscube(long a)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_77_iscube.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = iscube;\n\n    assert(candidate(1L) == true);\n    assert(candidate(2L) == false);\n    assert(candidate(-1L) == true);\n    assert(candidate(64L) == true);\n    assert(candidate(180L) == false);\n    assert(candidate(1000L) == true);\n    assert(candidate(0L) == true);\n    assert(candidate(1729L) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction iscube($a) {\n    $a = abs($a);\n    return pow(round(pow($a, 1/3)), 3) == $a;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool iscube(long a)\n"
  },
  {
    "name": "HumanEval_112_reverse_delete",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(string, bool) reverse_delete(string s, string c)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_112_reverse_delete.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = reverse_delete;\n\n    assert(candidate(\"abcde\", \"ae\") == tuple(\"bcd\", false));\n    assert(candidate(\"abcdef\", \"b\") == tuple(\"acdef\", false));\n    assert(candidate(\"abcdedcba\", \"ab\") == tuple(\"cdedc\", true));\n    assert(candidate(\"dwik\", \"w\") == tuple(\"dik\", false));\n    assert(candidate(\"a\", \"a\") == tuple(\"\", true));\n    assert(candidate(\"abcdedcba\", \"\") == tuple(\"abcdedcba\", true));\n    assert(candidate(\"abcdedcba\", \"v\") == tuple(\"abcdedcba\", true));\n    assert(candidate(\"vabba\", \"v\") == tuple(\"abba\", true));\n    assert(candidate(\"mamma\", \"mia\") == tuple(\"\", true));\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction reverse_delete($s, $c) {\n    $s = str_replace(str_split($c), '', $s);\n    return [$s, strrev($s) == $s];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nTuple!(string, bool) reverse_delete(string s, string c)\n"
  },
  {
    "name": "HumanEval_4_mean_absolute_deviation",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat mean_absolute_deviation(float[] numbers)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_4_mean_absolute_deviation.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = mean_absolute_deviation;\n\n    assert(candidate([1.0, 2.0]) == 0.5);\n    assert(candidate([1.0, 2.0, 3.0, 4.0]) == 1.0);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction mean_absolute_deviation($numbers) {\n    $mean = array_sum($numbers) / count($numbers);\n    return array_sum(array_map(function($x) use ($mean) { return abs($x - $mean); }, $numbers)) / count($numbers);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat mean_absolute_deviation(float[] numbers)\n"
  },
  {
    "name": "HumanEval_56_correct_bracketing",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool correct_bracketing(string brackets)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_56_correct_bracketing.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = correct_bracketing;\n\n    assert(candidate(\"<>\") == true);\n    assert(candidate(\"<<><>>\") == true);\n    assert(candidate(\"<><><<><>><>\") == true);\n    assert(candidate(\"<><><<<><><>><>><<><><<>>>\") == true);\n    assert(candidate(\"<<<><>>>>\") == false);\n    assert(candidate(\"><<>\") == false);\n    assert(candidate(\"<\") == false);\n    assert(candidate(\"<<<<\") == false);\n    assert(candidate(\">\") == false);\n    assert(candidate(\"<<>\") == false);\n    assert(candidate(\"<><><<><>><>><<>\") == false);\n    assert(candidate(\"<><><<><>><>>><>\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction correct_bracketing($brackets) {\n    $depth = 0;\n    foreach (str_split($brackets) as $b) {\n        if ($b == \"<\") {\n            $depth += 1;\n        } else {\n            $depth -= 1;\n        }\n        if ($depth < 0) {\n            return False;\n        }\n    }\n    return $depth == 0;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool correct_bracketing(string brackets)\n"
  },
  {
    "name": "HumanEval_21_rescale_to_unit",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat[] rescale_to_unit(float[] numbers)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_21_rescale_to_unit.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = rescale_to_unit;\n\n    assert(candidate([2.0, 49.9]) == [0.0, 1.0]);\n    assert(candidate([100.0, 49.9]) == [1.0, 0.0]);\n    assert(candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == [0.0, 0.25, 0.5, 0.75, 1.0]);\n    assert(candidate([2.0, 1.0, 5.0, 3.0, 4.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n    assert(candidate([12.0, 11.0, 15.0, 13.0, 14.0]) == [0.25, 0.0, 1.0, 0.5, 0.75]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction rescale_to_unit($numbers) {\n    $min_number = min($numbers);\n    $max_number = max($numbers);\n    return array_map(function($x) use ($min_number, $max_number) {\n        return ($x - $min_number) / ($max_number - $min_number);\n    }, $numbers);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nfloat[] rescale_to_unit(float[] numbers)\n"
  },
  {
    "name": "HumanEval_127_intersection",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring intersection(Tuple!(long, long) interval1, Tuple!(long, long) interval2)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_127_intersection.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = intersection;\n\n    assert(candidate(tuple(1L, 2L), tuple(2L, 3L)) == \"NO\");\n    assert(candidate(tuple(-1L, 1L), tuple(0L, 4L)) == \"NO\");\n    assert(candidate(tuple(-3L, -1L), tuple(-5L, 5L)) == \"YES\");\n    assert(candidate(tuple(-2L, 2L), tuple(-4L, 0L)) == \"YES\");\n    assert(candidate(tuple(-11L, 2L), tuple(-1L, -1L)) == \"NO\");\n    assert(candidate(tuple(1L, 2L), tuple(3L, 5L)) == \"NO\");\n    assert(candidate(tuple(1L, 2L), tuple(1L, 2L)) == \"NO\");\n    assert(candidate(tuple(-2L, -2L), tuple(-3L, -2L)) == \"NO\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction intersection($interval1, $interval2) {\n    $is_prime=function($num) {\n        if ($num == 1 || $num == 0) {\n            return false;\n        }\n        if ($num == 2) {\n            return true;\n        }\n        for ($i = 2; $i < $num; $i++) {\n            if ($num % $i == 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    $l = max($interval1[0], $interval2[0]);\n    $r = min($interval1[1], $interval2[1]);\n    $length = $r - $l;\n    if ($length > 0 && $is_prime($length)) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring intersection(Tuple!(long, long) interval1, Tuple!(long, long) interval2)\n"
  },
  {
    "name": "HumanEval_78_hex_key",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong hex_key(string num)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_78_hex_key.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = hex_key;\n\n    assert(candidate(\"AB\") == 1L);\n    assert(candidate(\"1077E\") == 2L);\n    assert(candidate(\"ABED1A33\") == 4L);\n    assert(candidate(\"2020\") == 2L);\n    assert(candidate(\"123456789ABCDEF0\") == 6L);\n    assert(candidate(\"112233445566778899AABBCCDDEEFF00\") == 12L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction hex_key($num) {\n    $primes = ['2', '3', '5', '7', 'B', 'D'];\n    $total = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $primes)) {\n            $total += 1;\n        }\n    }\n    return $total;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong hex_key(string num)\n"
  },
  {
    "name": "HumanEval_70_strange_sort_list",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] strange_sort_list(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_70_strange_sort_list.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = strange_sort_list;\n\n    assert(candidate([1L, 2L, 3L, 4L]) == [1L, 4L, 2L, 3L]);\n    assert(candidate([5L, 6L, 7L, 8L, 9L]) == [5L, 9L, 6L, 8L, 7L]);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == [1L, 5L, 2L, 4L, 3L]);\n    assert(candidate([5L, 6L, 7L, 8L, 9L, 1L]) == [1L, 9L, 5L, 8L, 6L, 7L]);\n    assert(candidate([5L, 5L, 5L, 5L]) == [5L, 5L, 5L, 5L]);\n    assert(candidate([]) == []);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L]) == [1L, 8L, 2L, 7L, 3L, 6L, 4L, 5L]);\n    assert(candidate([0L, 2L, 2L, 2L, 5L, 5L, -5L, -5L]) == [-5L, 5L, -5L, 5L, 0L, 2L, 2L, 2L]);\n    assert(candidate([111111L]) == [111111L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction strange_sort_list($lst) {\n    $res = [];\n    $switch = true;\n    while ($lst) {\n        $res[] = $switch ? min($lst) : max($lst);\n        unset($lst[array_search(end($res), $lst)]);\n        $switch = !$switch;\n    }\n    return $res;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] strange_sort_list(long[] lst)\n"
  },
  {
    "name": "HumanEval_91_is_bored",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong is_bored(string S)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_91_is_bored.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"You and I are going for a walk\") == 0L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_bored($S) {\n    $sentences = preg_split('/[.?!]\\s*/', $S);\n    return count(array_filter($sentences, function($sentence) {\n        return substr($sentence, 0, 2) == 'I ';\n    }));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong is_bored(string S)\n"
  },
  {
    "name": "HumanEval_14_all_prefixes",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] all_prefixes(string string)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_14_all_prefixes.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = all_prefixes;\n\n    assert(candidate(\"\") == []);\n    assert(candidate(\"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n    assert(candidate(\"WWW\") == [\"W\", \"WW\", \"WWW\"]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction all_prefixes($string) {\n    $result = [];\n\n    for ($i = 0; $i < strlen($string); $i++) {\n        $result[] = substr($string, 0, $i+1);\n    }\n\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring[] all_prefixes(string string)\n"
  },
  {
    "name": "HumanEval_18_how_many_times",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong how_many_times(string string, string substring)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_18_how_many_times.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = how_many_times;\n\n    assert(candidate(\"\", \"x\") == 0L);\n    assert(candidate(\"xyxyxyx\", \"x\") == 4L);\n    assert(candidate(\"cacacacac\", \"cac\") == 4L);\n    assert(candidate(\"john doe\", \"john\") == 1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction how_many_times($string, $substring) {\n    $times = 0;\n\n    for ($i = 0; $i <= strlen($string) - strlen($substring); $i++) {\n        if (substr($string, $i, strlen($substring)) == $substring) {\n            $times += 1;\n        }\n    }\n\n    return $times;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong how_many_times(string string, string substring)\n"
  },
  {
    "name": "HumanEval_121_solution",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong solution(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_121_solution.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = solution;\n\n    assert(candidate([5L, 8L, 7L, 1L]) == 12L);\n    assert(candidate([3L, 3L, 3L, 3L, 3L]) == 9L);\n    assert(candidate([30L, 13L, 24L, 321L]) == 0L);\n    assert(candidate([5L, 9L]) == 5L);\n    assert(candidate([2L, 4L, 8L]) == 0L);\n    assert(candidate([30L, 13L, 23L, 32L]) == 23L);\n    assert(candidate([3L, 13L, 2L, 9L]) == 3L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction solution($lst) {\n    return array_sum(array_filter($lst, function($x, $idx) {\n        return $idx%2==0 && $x%2==1;\n    }, ARRAY_FILTER_USE_BOTH));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong solution(long[] lst)\n"
  },
  {
    "name": "HumanEval_126_is_sorted",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_sorted(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_126_is_sorted.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_sorted;\n\n    assert(candidate([5L]) == true);\n    assert(candidate([1L, 2L, 3L, 4L, 5L]) == true);\n    assert(candidate([1L, 3L, 2L, 4L, 5L]) == false);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L]) == true);\n    assert(candidate([1L, 2L, 3L, 4L, 5L, 6L, 7L]) == true);\n    assert(candidate([1L, 3L, 2L, 4L, 5L, 6L, 7L]) == false);\n    assert(candidate([]) == true);\n    assert(candidate([1L]) == true);\n    assert(candidate([3L, 2L, 1L]) == false);\n    assert(candidate([1L, 2L, 2L, 2L, 3L, 4L]) == false);\n    assert(candidate([1L, 2L, 3L, 3L, 3L, 4L]) == false);\n    assert(candidate([1L, 2L, 2L, 3L, 3L, 4L]) == true);\n    assert(candidate([1L, 2L, 3L, 4L]) == true);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_sorted($lst) {\n    $count_digit = array_fill_keys($lst, 0);\n    foreach ($lst as $i) {\n        $count_digit[$i]++;\n    }\n    if (in_array(true, array_map(function($i) use ($count_digit) {\n        return $count_digit[$i] > 2;\n    }, $lst))) {\n        return false;\n    }\n    for ($i = 1; $i < count($lst); $i++) {\n        if ($lst[$i - 1] > $lst[$i]) {\n            return false;\n        }\n    }\n    return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_sorted(long[] lst)\n"
  },
  {
    "name": "HumanEval_69_search",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong search(long[] lst)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_69_search.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = search;\n\n    assert(candidate([5L, 5L, 5L, 5L, 1L]) == 1L);\n    assert(candidate([4L, 1L, 4L, 1L, 4L, 4L]) == 4L);\n    assert(candidate([3L, 3L]) == -1L);\n    assert(candidate([8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L]) == 8L);\n    assert(candidate([2L, 3L, 3L, 2L, 2L]) == 2L);\n    assert(candidate([2L, 7L, 8L, 8L, 4L, 8L, 7L, 3L, 9L, 6L, 5L, 10L, 4L, 3L, 6L, 7L, 1L, 7L, 4L, 10L, 8L, 1L]) == 1L);\n    assert(candidate([3L, 2L, 8L, 2L]) == 2L);\n    assert(candidate([6L, 7L, 1L, 8L, 8L, 10L, 5L, 8L, 5L, 3L, 10L]) == 1L);\n    assert(candidate([8L, 8L, 3L, 6L, 5L, 6L, 4L]) == -1L);\n    assert(candidate([6L, 9L, 6L, 7L, 1L, 4L, 7L, 1L, 8L, 8L, 9L, 8L, 10L, 10L, 8L, 4L, 10L, 4L, 10L, 1L, 2L, 9L, 5L, 7L, 9L]) == 1L);\n    assert(candidate([1L, 9L, 10L, 1L, 3L]) == 1L);\n    assert(candidate([6L, 9L, 7L, 5L, 8L, 7L, 5L, 3L, 7L, 5L, 10L, 10L, 3L, 6L, 10L, 2L, 8L, 6L, 5L, 4L, 9L, 5L, 3L, 10L]) == 5L);\n    assert(candidate([1L]) == 1L);\n    assert(candidate([8L, 8L, 10L, 6L, 4L, 3L, 5L, 8L, 2L, 4L, 2L, 8L, 4L, 6L, 10L, 4L, 2L, 1L, 10L, 2L, 1L, 1L, 5L]) == 4L);\n    assert(candidate([2L, 10L, 4L, 8L, 2L, 10L, 5L, 1L, 2L, 9L, 5L, 5L, 6L, 3L, 8L, 6L, 4L, 10L]) == 2L);\n    assert(candidate([1L, 6L, 10L, 1L, 6L, 9L, 10L, 8L, 6L, 8L, 7L, 3L]) == 1L);\n    assert(candidate([9L, 2L, 4L, 1L, 5L, 1L, 5L, 2L, 5L, 7L, 7L, 7L, 3L, 10L, 1L, 5L, 4L, 2L, 8L, 4L, 1L, 9L, 10L, 7L, 10L, 2L, 8L, 10L, 9L, 4L]) == 4L);\n    assert(candidate([2L, 6L, 4L, 2L, 8L, 7L, 5L, 6L, 4L, 10L, 4L, 6L, 3L, 7L, 8L, 8L, 3L, 1L, 4L, 2L, 2L, 10L, 7L]) == 4L);\n    assert(candidate([9L, 8L, 6L, 10L, 2L, 6L, 10L, 2L, 7L, 8L, 10L, 3L, 8L, 2L, 6L, 2L, 3L, 1L]) == 2L);\n    assert(candidate([5L, 5L, 3L, 9L, 5L, 6L, 3L, 2L, 8L, 5L, 6L, 10L, 10L, 6L, 8L, 4L, 10L, 7L, 7L, 10L, 8L]) == -1L);\n    assert(candidate([10L]) == -1L);\n    assert(candidate([9L, 7L, 7L, 2L, 4L, 7L, 2L, 10L, 9L, 7L, 5L, 7L, 2L]) == 2L);\n    assert(candidate([5L, 4L, 10L, 2L, 1L, 1L, 10L, 3L, 6L, 1L, 8L]) == 1L);\n    assert(candidate([7L, 9L, 9L, 9L, 3L, 4L, 1L, 5L, 9L, 1L, 2L, 1L, 1L, 10L, 7L, 5L, 6L, 7L, 6L, 7L, 7L, 6L]) == 1L);\n    assert(candidate([3L, 10L, 10L, 9L, 2L]) == -1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction search($lst) {\n    $frq = array_fill(0, max($lst) + 1, 0);\n    foreach ($lst as $i) {\n        $frq[$i]++;\n    }\n\n    $ans = -1;\n    for ($i = 1; $i < count($frq); $i++) {\n        if ($frq[$i] >= $i) {\n            $ans = $i;\n        }\n    }\n\n    return $ans;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong search(long[] lst)\n"
  },
  {
    "name": "HumanEval_68_pluck",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] pluck(long[] arr)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_68_pluck.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = pluck;\n\n    assert(candidate([4L, 2L, 3L]) == [2L, 1L]);\n    assert(candidate([1L, 2L, 3L]) == [2L, 1L]);\n    assert(candidate([]) == []);\n    assert(candidate([5L, 0L, 3L, 0L, 4L, 2L]) == [0L, 1L]);\n    assert(candidate([1L, 2L, 3L, 0L, 5L, 3L]) == [0L, 3L]);\n    assert(candidate([5L, 4L, 8L, 4L, 8L]) == [4L, 1L]);\n    assert(candidate([7L, 6L, 7L, 1L]) == [6L, 1L]);\n    assert(candidate([7L, 9L, 7L, 1L]) == []);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction pluck($arr) {\n  if(count($arr) == 0) return [];\n  $evens = array_filter($arr, function($x) { return $x%2 == 0; });\n  if($evens == []) return [];\n  return [min($evens), array_search(min($evens), $arr)];\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] pluck(long[] arr)\n"
  },
  {
    "name": "HumanEval_43_pairs_sum_to_zero",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool pairs_sum_to_zero(long[] l)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_43_pairs_sum_to_zero.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = pairs_sum_to_zero;\n\n    assert(candidate([1L, 3L, 5L, 0L]) == false);\n    assert(candidate([1L, 3L, -2L, 1L]) == false);\n    assert(candidate([1L, 2L, 3L, 7L]) == false);\n    assert(candidate([2L, 4L, -5L, 3L, 5L, 7L]) == true);\n    assert(candidate([1L]) == false);\n    assert(candidate([-3L, 9L, -1L, 3L, 2L, 30L]) == true);\n    assert(candidate([-3L, 9L, -1L, 3L, 2L, 31L]) == true);\n    assert(candidate([-3L, 9L, -1L, 4L, 2L, 30L]) == false);\n    assert(candidate([-3L, 9L, -1L, 4L, 2L, 31L]) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction pairs_sum_to_zero($l) {\n    for ($i = 0; $i < count($l); $i++) {\n        for ($j = $i + 1; $j < count($l); $j++) {\n            if ($l[$i] + $l[$j] == 0) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool pairs_sum_to_zero(long[] l)\n"
  },
  {
    "name": "HumanEval_10_make_palindrome",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring make_palindrome(string string)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_10_make_palindrome.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = make_palindrome;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"x\") == \"x\");\n    assert(candidate(\"xyz\") == \"xyzyx\");\n    assert(candidate(\"xyx\") == \"xyx\");\n    assert(candidate(\"jerry\") == \"jerryrrej\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction make_palindrome($string) {\n    if (!$string) {\n        return '';\n    }\n\n    $beginning_of_suffix = 0;\n\n    while (substr($string, $beginning_of_suffix) != strrev(substr($string, $beginning_of_suffix))) {\n        $beginning_of_suffix++;\n    }\n\n    return $string . strrev(substr($string, 0, $beginning_of_suffix));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring make_palindrome(string string)\n"
  },
  {
    "name": "HumanEval_83_starts_one_ends",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong starts_one_ends(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_83_starts_one_ends.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = starts_one_ends;\n\n    assert(candidate(1L) == 1L);\n    assert(candidate(2L) == 18L);\n    assert(candidate(3L) == 180L);\n    assert(candidate(4L) == 1800L);\n    assert(candidate(5L) == 18000L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction starts_one_ends($n) {\n    if ($n == 1) return 1;\n    return 18 * pow(10, $n - 2);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong starts_one_ends(long n)\n"
  },
  {
    "name": "HumanEval_30_get_positive",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] get_positive(long[] l)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_30_get_positive.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = get_positive;\n\n    assert(candidate([-1L, -2L, 4L, 5L, 6L]) == [4L, 5L, 6L]);\n    assert(candidate([5L, 3L, -5L, 2L, 3L, 3L, 9L, 0L, 123L, 1L, -10L]) == [5L, 3L, 2L, 3L, 3L, 9L, 123L, 1L]);\n    assert(candidate([-1L, -2L]) == []);\n    assert(candidate([]) == []);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction get_positive($l) {\n    $result = array();\n    foreach ($l as $e) {\n        if ($e > 0) {\n            $result[] = $e;\n        }\n    }\n    return $result;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] get_positive(long[] l)\n"
  },
  {
    "name": "HumanEval_28_concatenate",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring concatenate(string[] strings)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_28_concatenate.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = concatenate;\n\n    assert(candidate([]) == \"\");\n    assert(candidate([\"x\", \"y\", \"z\"]) == \"xyz\");\n    assert(candidate([\"x\", \"y\", \"z\", \"w\", \"k\"]) == \"xyzwk\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction concatenate($strings) {\n    return implode($strings);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring concatenate(string[] strings)\n"
  },
  {
    "name": "HumanEval_132_is_nested",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_nested(string string)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_132_is_nested.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_nested;\n\n    assert(candidate(\"[[]]\") == true);\n    assert(candidate(\"[]]]]]]][[[[[]\") == false);\n    assert(candidate(\"[][]\") == false);\n    assert(candidate(\"[]\") == false);\n    assert(candidate(\"[[[[]]]]\") == true);\n    assert(candidate(\"[]]]]]]]]]]\") == false);\n    assert(candidate(\"[][][[]]\") == true);\n    assert(candidate(\"[[]\") == false);\n    assert(candidate(\"[]]\") == false);\n    assert(candidate(\"[[]][[\") == true);\n    assert(candidate(\"[[][]]\") == true);\n    assert(candidate(\"\") == false);\n    assert(candidate(\"[[[[[[[[\") == false);\n    assert(candidate(\"]]]]]]]]\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_nested($string) {\n    $opening_bracket_index = [];\n    $closing_bracket_index = [];\n    for ($i = 0; $i < strlen($string); $i++) {\n        if ($string[$i] == '[') {\n            array_push($opening_bracket_index, $i);\n        } else {\n            array_push($closing_bracket_index, $i);\n        }\n    }\n    $closing_bracket_index = array_reverse($closing_bracket_index);\n    $cnt = 0;\n    $i = 0;\n    $l = count($closing_bracket_index);\n    foreach ($opening_bracket_index as $idx) {\n        if ($i < $l && $idx < $closing_bracket_index[$i]) {\n            $cnt += 1;\n            $i += 1;\n        }\n    }\n    return $cnt >= 2;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_nested(string string)\n"
  },
  {
    "name": "HumanEval_48_is_palindrome",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_palindrome(string text)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_48_is_palindrome.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_palindrome;\n\n    assert(candidate(\"\") == true);\n    assert(candidate(\"aba\") == true);\n    assert(candidate(\"aaaaa\") == true);\n    assert(candidate(\"zbcd\") == false);\n    assert(candidate(\"xywyx\") == true);\n    assert(candidate(\"xywyz\") == false);\n    assert(candidate(\"xywzx\") == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_palindrome($text) {\n    for ($i = 0; $i < strlen($text); $i++) {\n        if ($text[$i] != $text[strlen($text) - 1 - $i]) {\n            return false;\n        }\n    }\n    return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_palindrome(string text)\n"
  },
  {
    "name": "HumanEval_108_count_nums",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong count_nums(long[] arr)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_108_count_nums.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = count_nums;\n\n    assert(candidate([]) == 0L);\n    assert(candidate([-1L, -2L, 0L]) == 0L);\n    assert(candidate([1L, 1L, 2L, -2L, 3L, 4L, 5L]) == 6L);\n    assert(candidate([1L, 6L, 9L, -6L, 0L, 1L, 5L]) == 5L);\n    assert(candidate([1L, 100L, 98L, -7L, 1L, -1L]) == 4L);\n    assert(candidate([12L, 23L, 34L, -45L, -56L, 0L]) == 5L);\n    assert(candidate([0L, 1L]) == 1L);\n    assert(candidate([1L]) == 1L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction count_nums($arr) {\n    $digits_sum = function($n) {\n        $neg = 1;\n        if ($n < 0) {\n            $n = -1 * $n;\n            $neg = -1;\n        }\n        $n = array_map('intval', str_split($n));\n        $n[0] = $n[0] * $neg;\n        return array_sum($n);\n    };\n    return count(array_filter(array_map($digits_sum, $arr), function($x) { return $x > 0; }));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong count_nums(long[] arr)\n"
  },
  {
    "name": "HumanEval_25_factorize",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] factorize(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_25_factorize.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = factorize;\n\n    assert(candidate(2L) == [2L]);\n    assert(candidate(4L) == [2L, 2L]);\n    assert(candidate(8L) == [2L, 2L, 2L]);\n    assert(candidate(57L) == [3L, 19L]);\n    assert(candidate(3249L) == [3L, 3L, 19L, 19L]);\n    assert(candidate(185193L) == [3L, 3L, 3L, 19L, 19L, 19L]);\n    assert(candidate(20577L) == [3L, 19L, 19L, 19L]);\n    assert(candidate(18L) == [2L, 3L, 3L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction factorize($n) {\n    $fact = [];\n    $i = 2;\n    while ($i <= intval(sqrt($n) + 1)) {\n        if ($n % $i === 0) {\n            $fact[] = $i;\n            $n /= $i;\n        } else {\n            $i += 1;\n        }\n    }\n\n    if ($n > 1) {\n        $fact[] = $n;\n    }\n    return $fact;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] factorize(long n)\n"
  },
  {
    "name": "HumanEval_59_largest_prime_factor",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong largest_prime_factor(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_59_largest_prime_factor.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = largest_prime_factor;\n\n    assert(candidate(15L) == 5L);\n    assert(candidate(27L) == 3L);\n    assert(candidate(63L) == 7L);\n    assert(candidate(330L) == 11L);\n    assert(candidate(13195L) == 29L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction largest_prime_factor($n) {\n    $is_prime=function($k) {\n        if ($k < 2) {\n            return false;\n        }\n        for ($i = 2; $i < $k; $i++) {\n            if ($k % $i == 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    $largest = 1;\n    for ($j = 2; $j <= $n; $j++) {\n        if ($n % $j == 0 && $is_prime($j)) {\n            $largest = max($largest, $j);\n        }\n    }\n    return $largest;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong largest_prime_factor(long n)\n"
  },
  {
    "name": "HumanEval_147_get_max_triples",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong get_max_triples(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_147_get_max_triples.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = get_max_triples;\n\n    assert(candidate(5L) == 1L);\n    assert(candidate(6L) == 4L);\n    assert(candidate(10L) == 36L);\n    assert(candidate(100L) == 53361L);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction get_max_triples($n) {\n    $A = array_map(function($i) { return $i*$i - $i + 1; }, range(1, $n));\n    $ans = [];\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i+1; $j < $n; $j++) {\n            for ($k = $j+1; $k < $n; $k++) {\n                if (($A[$i]+$A[$j]+$A[$k])%3 == 0) {\n                    $ans[] = [$A[$i], $A[$j], $A[$k]];\n                }\n            }\n        }\n    }\n    return count($ans);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong get_max_triples(long n)\n"
  },
  {
    "name": "HumanEval_86_anti_shuffle",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring anti_shuffle(string s)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_86_anti_shuffle.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = anti_shuffle;\n\n    assert(candidate(\"Hi\") == \"Hi\");\n    assert(candidate(\"hello\") == \"ehllo\");\n    assert(candidate(\"number\") == \"bemnru\");\n    assert(candidate(\"abcd\") == \"abcd\");\n    assert(candidate(\"Hello World!!!\") == \"Hello !!!Wdlor\");\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hi. My name is Mister Robot. How are you?\") == \".Hi My aemn is Meirst .Rboot How aer ?ouy\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction anti_shuffle($s) {\n    $words = explode(' ', $s);\n    $sorted_words = array_map(function($i) {\n        $chars = str_split($i);\n        sort($chars);\n        return implode($chars);\n    }, $words);\n    return implode(' ', $sorted_words);\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring anti_shuffle(string s)\n"
  },
  {
    "name": "HumanEval_84_solve",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring solve(long N)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_84_solve.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = solve;\n\n    assert(candidate(1000L) == \"1\");\n    assert(candidate(150L) == \"110\");\n    assert(candidate(147L) == \"1100\");\n    assert(candidate(333L) == \"1001\");\n    assert(candidate(963L) == \"10010\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction solve($N) {\n    return decbin(array_sum(str_split($N)));\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring solve(long N)\n"
  },
  {
    "name": "HumanEval_129_minPath",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] minPath(long[][] grid, long k)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_129_minPath.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = minPath;\n\n    assert(candidate([[1L, 2L, 3L], [4L, 5L, 6L], [7L, 8L, 9L]], 3L) == [1L, 2L, 1L]);\n    assert(candidate([[5L, 9L, 3L], [4L, 1L, 6L], [7L, 8L, 2L]], 1L) == [1L]);\n    assert(candidate([[1L, 2L, 3L, 4L], [5L, 6L, 7L, 8L], [9L, 10L, 11L, 12L], [13L, 14L, 15L, 16L]], 4L) == [1L, 2L, 1L, 2L]);\n    assert(candidate([[6L, 4L, 13L, 10L], [5L, 7L, 12L, 1L], [3L, 16L, 11L, 15L], [8L, 14L, 9L, 2L]], 7L) == [1L, 10L, 1L, 10L, 1L, 10L, 1L]);\n    assert(candidate([[8L, 14L, 9L, 2L], [6L, 4L, 13L, 15L], [5L, 7L, 1L, 12L], [3L, 10L, 11L, 16L]], 5L) == [1L, 7L, 1L, 7L, 1L]);\n    assert(candidate([[11L, 8L, 7L, 2L], [5L, 16L, 14L, 4L], [9L, 3L, 15L, 6L], [12L, 13L, 10L, 1L]], 9L) == [1L, 6L, 1L, 6L, 1L, 6L, 1L, 6L, 1L]);\n    assert(candidate([[12L, 13L, 10L, 1L], [9L, 3L, 15L, 6L], [5L, 16L, 14L, 4L], [11L, 8L, 7L, 2L]], 12L) == [1L, 6L, 1L, 6L, 1L, 6L, 1L, 6L, 1L, 6L, 1L, 6L]);\n    assert(candidate([[2L, 7L, 4L], [3L, 1L, 5L], [6L, 8L, 9L]], 8L) == [1L, 3L, 1L, 3L, 1L, 3L, 1L, 3L]);\n    assert(candidate([[6L, 1L, 5L], [3L, 8L, 9L], [2L, 7L, 4L]], 8L) == [1L, 5L, 1L, 5L, 1L, 5L, 1L, 5L]);\n    assert(candidate([[1L, 2L], [3L, 4L]], 10L) == [1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L, 1L, 2L]);\n    assert(candidate([[1L, 3L], [3L, 2L]], 10L) == [1L, 3L, 1L, 3L, 1L, 3L, 1L, 3L, 1L, 3L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction minPath($grid, $k) {\n    $n = count($grid);\n    $val = $n * $n + 1;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            if ($grid[$i][$j] == 1) {\n                $temp = [];\n                if ($i != 0) {\n                    $temp[] = $grid[$i - 1][$j];\n                }\n\n                if ($j != 0) {\n                    $temp[] = $grid[$i][$j - 1];\n                }\n\n                if ($i != $n - 1) {\n                    $temp[] = $grid[$i + 1][$j];\n                }\n\n                if ($j != $n - 1) {\n                    $temp[] = $grid[$i][$j + 1];\n                }\n\n                $val = min($temp);\n            }\n        }\n    }\n\n    $ans = [];\n    for ($i = 0; $i < $k; $i++) {\n        if ($i % 2 == 0) {\n            $ans[] = 1;\n        } else {\n            $ans[] = $val;\n        }\n    }\n    return $ans;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] minPath(long[][] grid, long k)\n"
  },
  {
    "name": "HumanEval_89_encrypt",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring encrypt(string s)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_89_encrypt.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = encrypt;\n\n    assert(candidate(\"hi\") == \"lm\");\n    assert(candidate(\"asdfghjkl\") == \"ewhjklnop\");\n    assert(candidate(\"gf\") == \"kj\");\n    assert(candidate(\"et\") == \"ix\");\n    assert(candidate(\"faewfawefaewg\") == \"jeiajeaijeiak\");\n    assert(candidate(\"hellomyfriend\") == \"lippsqcjvmirh\");\n    assert(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n    assert(candidate(\"a\") == \"e\");\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction encrypt($s) {\n    $d = 'abcdefghijklmnopqrstuvwxyz';\n    $out = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $c = $s[$i];\n        if (strpos($d, $c) !== false) {\n            $out .= $d[(strpos($d, $c)+4) % 26];\n        } else {\n            $out .= $c;\n        }\n    }\n    return $out;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nstring encrypt(string s)\n"
  },
  {
    "name": "HumanEval_100_make_a_pile",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] make_a_pile(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_100_make_a_pile.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = make_a_pile;\n\n    assert(candidate(3L) == [3L, 5L, 7L]);\n    assert(candidate(4L) == [4L, 6L, 8L, 10L]);\n    assert(candidate(5L) == [5L, 7L, 9L, 11L, 13L]);\n    assert(candidate(6L) == [6L, 8L, 10L, 12L, 14L, 16L]);\n    assert(candidate(8L) == [8L, 10L, 12L, 14L, 16L, 18L, 20L, 22L]);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction make_a_pile($n) {\n    $pile = array();\n    for ($i = 0; $i < $n; $i++) {\n        $pile[] = $n + 2*$i;\n    }\n    return $pile;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nlong[] make_a_pile(long n)\n"
  },
  {
    "name": "HumanEval_31_is_prime",
    "language": "d",
    "prompt": "import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_prime(long n)\n",
    "doctests": "keep",
    "original": "/Users/zilutang/Projects/code_translation/explain-then-translate/MultiPL-C2C/datasets/../datasets/originals/HumanEval_31_is_prime.py",
    "prompt_terminology": "remove",
    "source_program": "keep",
    "target_signature": "keep",
    "tests": "}\nunittest\n{\n    alias candidate = is_prime;\n\n    assert(candidate(6L) == false);\n    assert(candidate(101L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(13441L) == true);\n    assert(candidate(61L) == true);\n    assert(candidate(4L) == false);\n    assert(candidate(1L) == false);\n    assert(candidate(5L) == true);\n    assert(candidate(11L) == true);\n    assert(candidate(17L) == true);\n    assert(candidate(85L) == false);\n    assert(candidate(77L) == false);\n    assert(candidate(255379L) == false);\n}\nvoid main(){}",
    "stop_tokens": [
      "\nvoid",
      "\nbool",
      "\nint",
      "\n}"
    ],
    "translation_prompt": "You are an helpful AI assistant who understands all programming languages and can translate between them at ease. Can you explain what this PHP program does with a couple of sentences? The goal with the explanation, is so that a reader can easily rewrite the program in D.\n\n### PHP version\n\n<?php\nfunction is_prime($n) {\n    if ($n < 2) {\n        return false;\n    }\n    for ($k = 2; $k < $n; $k++) {\n        if ($n % $k == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n?>\n\n### Explanation\n\nThis{{{TOFILL}}}\n\n### D version\n\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.format;\nimport std.math;\nimport std.range;\nimport std.string;\nimport std.typecons;\nbool is_prime(long n)\n"
  }
]
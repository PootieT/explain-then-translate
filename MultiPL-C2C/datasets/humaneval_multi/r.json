{
  "HumanEval_126_is_sorted": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nis_sorted <- function(lst) {\n  count_digit <- as.list(table(lst))\n  if (any(count_digit > 2)) {\n    return(FALSE)\n  }\n  if (all(diff(lst) >= 0)) {\n    return(TRUE)\n  } else {\n    return(FALSE)\n  }\n}\ntest_humaneval <- function() {\n    candidate <- is_sorted\n    stopifnot(isTRUE(all.equal(candidate(c(5)), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4, 5)), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 3, 2, 4, 5)), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4, 5, 6)), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4, 5, 6, 7)), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 3, 2, 4, 5, 6, 7)), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(c()), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1)), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(c(3, 2, 1)), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 2, 2, 3, 4)), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 3, 3, 4)), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 2, 3, 3, 4)), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4)), TRUE)))\n}\ntest_humaneval()",
  "HumanEval_78_hex_key": "hex_key <- function(num) {\n    primes <- c('2', '3', '5', '7', 'B', 'D')\n    total <- 0\n    for (i in 1:nchar(num)) {\n        if (substr(num, i, i) %in% primes) {\n            total <- total + 1\n        }\n    }\n    return(total)\n\n}\ntest_humaneval <- function() {\ncandidate <- hex_key\n    if(!identical(candidate('AB'), 1)){quit('no', 1)}\n    if(!identical(candidate('1077E'), 2)){quit('no', 1)}\n    if(!identical(candidate('ABED1A33'), 4)){quit('no', 1)}\n    if(!identical(candidate('2020'), 2)){quit('no', 1)}\n    if(!identical(candidate('123456789ABCDEF0'), 6)){quit('no', 1)}\n    if(!identical(candidate('112233445566778899AABBCCDDEEFF00'), 12)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_55_fib": "fib <- function(n) {\n  if (n == 0) {\n    return(0)\n  }\n  if (n == 1) {\n    return(1)\n  }\n  return(fib(n - 1) + fib(n - 2))\n\n}\ntest_humaneval <- function() {\ncandidate <- fib\n    if(!identical(candidate(10), 55)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n    if(!identical(candidate(8), 21)){quit('no', 1)}\n    if(!identical(candidate(11), 89)){quit('no', 1)}\n    if(!identical(candidate(12), 144)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_127_intersection": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nintersection <- function(interval1, interval2) {\n  is_prime <- function(num) {\n    if (num == 1 || num == 0) {\n      return(FALSE)\n    }\n    if (num == 2) {\n      return(TRUE)\n    }\n    for (i in 2:(num-1)) {\n      if (num%%i == 0) {\n        return(FALSE)\n      }\n    }\n    return(TRUE)\n  }\n  l <- max(interval1[1], interval2[1])\n  r <- min(interval1[2], interval2[2])\n  length <- r - l\n  if (length > 0 && is_prime(length)) {\n    return(\"YES\")\n  }\n  return(\"NO\")\n\n}\ntest_humaneval <- function() {\ncandidate <- intersection\n    if(!(candidate(c(1, 2), c(2, 3)) == 'NO')){quit('no', 1)}\n    if(!(candidate(c(-1, 1), c(0, 4)) == 'NO')){quit('no', 1)}\n    if(!(candidate(c(-3, -1), c(-5, 5)) == 'YES')){quit('no', 1)}\n    if(!(candidate(c(-2, 2), c(-4, 0)) == 'YES')){quit('no', 1)}\n    if(!(candidate(c(-11, 2), c(-1, -1)) == 'NO')){quit('no', 1)}\n    if(!(candidate(c(1, 2), c(3, 5)) == 'NO')){quit('no', 1)}\n    if(!(candidate(c(1, 2), c(1, 2)) == 'NO')){quit('no', 1)}\n    if(!(candidate(c(-2, -2), c(-3, -2)) == 'NO')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_104_unique_digits": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nunique_digits <- function(x) {\n    odd_digit_elements <- c()\n    for (i in x) {\n        if (all(strtoi(strsplit(as.character(i), \"\")[[1]]) %% 2 == 1)) {\n            odd_digit_elements <- c(odd_digit_elements, i)\n        }\n    }\n    sort(odd_digit_elements)\n\n}\ntest_humaneval <- function() {\ncandidate <- unique_digits\n    if(!identical(candidate(c(15, 33, 1422, 1)), c(1, 15, 33))){quit('no', 1)}\n    if(!identical(candidate(c(152, 323, 1422, 10)), c())){quit('no', 1)}\n    if(!identical(candidate(c(12345, 2033, 111, 151)), c(111, 151))){quit('no', 1)}\n    if(!identical(candidate(c(135, 103, 31)), c(31, 135))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_18_how_many_times": "how_many_times <- function(string, substring) {\n    times <- 0\n    \n    for (i in 1:(nchar(string) - nchar(substring) + 1)) {\n        if (substr(string, i, i + nchar(substring) - 1) == substring) {\n            times <- times + 1\n        }\n    }\n    \n    return(times)\n\n}\ntest_humaneval <- function() {\ncandidate <- how_many_times\n    if(!identical(candidate('', 'x'), 0)){quit('no', 1)}\n    if(!identical(candidate('xyxyxyx', 'x'), 4)){quit('no', 1)}\n    if(!identical(candidate('cacacacac', 'cac'), 4)){quit('no', 1)}\n    if(!identical(candidate('john doe', 'john'), 1)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_141_file_name_check": "file_name_check <- function(file_name) {\n    suf <- c('txt', 'exe', 'dll')\n    lst <- strsplit(file_name, split='\\\\.')[[1]]\n    if (length(lst) != 2) {\n        return('No')\n    }\n    if (!(lst[2] %in% suf)) {\n        return('No')\n    }\n    if (nchar(lst[1]) == 0) {\n        return('No')\n    }\n    if (!(grepl('^[[:alpha:]]', lst[1]))) {\n        return('No')\n    }\n    t <- length(gregexpr('[[:digit:]]', lst[1])[[1]])\n    if (t > 3) {\n        return('No')\n    }\n    return('Yes')\n\n}\ntest_humaneval <- function() {\ncandidate <- file_name_check\n    if(!identical(candidate('example.txt'), 'Yes')){quit('no', 1)}\n    if(!identical(candidate('1example.dll'), 'No')){quit('no', 1)}\n    if(!identical(candidate('s1sdf3.asd'), 'No')){quit('no', 1)}\n    if(!identical(candidate('K.dll'), 'Yes')){quit('no', 1)}\n    if(!identical(candidate('MY16FILE3.exe'), 'Yes')){quit('no', 1)}\n    if(!identical(candidate('His12FILE94.exe'), 'No')){quit('no', 1)}\n    if(!identical(candidate('_Y.txt'), 'No')){quit('no', 1)}\n    if(!identical(candidate('?aREYA.exe'), 'No')){quit('no', 1)}\n    if(!identical(candidate('/this_is_valid.dll'), 'No')){quit('no', 1)}\n    if(!identical(candidate('this_is_valid.wow'), 'No')){quit('no', 1)}\n    if(!identical(candidate('this_is_valid.txt'), 'Yes')){quit('no', 1)}\n    if(!identical(candidate('this_is_valid.txtexe'), 'No')){quit('no', 1)}\n    if(!identical(candidate('#this2_i4s_5valid.ten'), 'No')){quit('no', 1)}\n    if(!identical(candidate('@this1_is6_valid.exe'), 'No')){quit('no', 1)}\n    if(!identical(candidate('this_is_12valid.6exe4.txt'), 'No')){quit('no', 1)}\n    if(!identical(candidate('all.exe.txt'), 'No')){quit('no', 1)}\n    if(!identical(candidate('I563_No.exe'), 'Yes')){quit('no', 1)}\n    if(!identical(candidate('Is3youfault.txt'), 'Yes')){quit('no', 1)}\n    if(!identical(candidate('no_one#knows.dll'), 'Yes')){quit('no', 1)}\n    if(!identical(candidate('1I563_Yes3.exe'), 'No')){quit('no', 1)}\n    if(!identical(candidate('I563_Yes3.txtt'), 'No')){quit('no', 1)}\n    if(!identical(candidate('final..txt'), 'No')){quit('no', 1)}\n    if(!identical(candidate('final132'), 'No')){quit('no', 1)}\n    if(!identical(candidate('_f4indsartal132.'), 'No')){quit('no', 1)}\n    if(!identical(candidate('.txt'), 'No')){quit('no', 1)}\n    if(!identical(candidate('s.'), 'No')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_102_choose_num": "choose_num <- function(x, y) {\n    if (x > y) {\n        return(-1)\n    }\n    if (y %% 2 == 0) {\n        return(y)\n    }\n    if (x == y) {\n        return(-1)\n    }\n    return(y - 1)\n\n}\ntest_humaneval <- function() {\ncandidate <- choose_num\n    if(!identical(candidate(12, 15), 14)){quit('no', 1)}\n    if(!identical(candidate(13, 12), -1)){quit('no', 1)}\n    if(!identical(candidate(33, 12354), 12354)){quit('no', 1)}\n    if(!identical(candidate(5234, 5233), -1)){quit('no', 1)}\n    if(!identical(candidate(6, 29), 28)){quit('no', 1)}\n    if(!identical(candidate(27, 10), -1)){quit('no', 1)}\n    if(!identical(candidate(7, 7), -1)){quit('no', 1)}\n    if(!identical(candidate(546, 546), 546)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_35_max_element": "max_element <- function(l) {\n    m <- l[1]\n    for (e in l) {\n        if (e > m) {\n            m <- e\n        }\n    }\n    return(m)\n\n}\ntest_humaneval <- function() {\ncandidate <- max_element\n    if(!identical(candidate(c(1, 2, 3)), 3)){quit('no', 1)}\n    if(!identical(candidate(c(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)), 124)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_41_car_race_collision": "car_race_collision <- function(n) {\n    return(n^2)\n\n}\ntest_humaneval <- function() {\ncandidate <- car_race_collision\n    if(!identical(candidate(2), 4)){quit('no', 1)}\n    if(!identical(candidate(3), 9)){quit('no', 1)}\n    if(!identical(candidate(4), 16)){quit('no', 1)}\n    if(!identical(candidate(8), 64)){quit('no', 1)}\n    if(!identical(candidate(10), 100)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_44_change_base": "change_base <- function(x, base) {\n    ret <- \"\"\n    while (x > 0) {\n        ret <- paste0(x %% base, ret)\n        x <- x %/% base\n    }\n    return(ret)\n\n}\ntest_humaneval <- function() {\ncandidate <- change_base\n    if(!identical(candidate(8, 3), '22')){quit('no', 1)}\n    if(!identical(candidate(9, 3), '100')){quit('no', 1)}\n    if(!identical(candidate(234, 2), '11101010')){quit('no', 1)}\n    if(!identical(candidate(16, 2), '10000')){quit('no', 1)}\n    if(!identical(candidate(8, 2), '1000')){quit('no', 1)}\n    if(!identical(candidate(7, 2), '111')){quit('no', 1)}\n    if(!identical(candidate(2, 3), '2')){quit('no', 1)}\n    if(!identical(candidate(3, 4), '3')){quit('no', 1)}\n    if(!identical(candidate(4, 5), '4')){quit('no', 1)}\n    if(!identical(candidate(5, 6), '5')){quit('no', 1)}\n    if(!identical(candidate(6, 7), '6')){quit('no', 1)}\n    if(!identical(candidate(7, 8), '7')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_47_median": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nmedian <- function(l) {\n  l <- sort(l)\n  if (length(l) %% 2 == 1) {\n    return(l[length(l) %/% 2 + 1])\n  } else {\n    return((l[length(l) %/% 2] + l[length(l) %/% 2 + 1]) / 2)\n  }\n\n}\ntest_humaneval <- function() {\ncandidate <- median\n    if(!(candidate(c(3, 1, 2, 4, 5)) == 3)){quit('no', 1)}\n    if(!(candidate(c(-10, 4, 6, 1000, 10, 20)) == 8.0)){quit('no', 1)}\n    if(!(candidate(c(5)) == 5)){quit('no', 1)}\n    if(!(candidate(c(6, 5)) == 5.5)){quit('no', 1)}\n    if(!(candidate(c(8, 1, 3, 9, 9, 2, 7)) == 7)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_155_even_odd_count": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\neven_odd_count <- function(num) {\n    even_count <- 0\n    odd_count <- 0\n    for (i in strsplit(as.character(abs(num)), \"\")[[1]]) {\n        if (as.integer(i) %% 2 == 0) {\n            even_count <- even_count + 1\n        } else {\n            odd_count <- odd_count + 1\n        }\n    }\n    return (c(even_count, odd_count))\n\n}\ntest_humaneval <- function() {\ncandidate <- even_odd_count\n    if(!identical(candidate(7), c(0, 1))){quit('no', 1)}\n    if(!identical(candidate(-78), c(1, 1))){quit('no', 1)}\n    if(!identical(candidate(3452), c(2, 2))){quit('no', 1)}\n    if(!identical(candidate(346211), c(3, 3))){quit('no', 1)}\n    if(!identical(candidate(-345821), c(3, 3))){quit('no', 1)}\n    if(!identical(candidate(-2), c(1, 0))){quit('no', 1)}\n    if(!identical(candidate(-45347), c(2, 3))){quit('no', 1)}\n    if(!identical(candidate(0), c(1, 0))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_108_count_nums": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ncount_nums <- function(arr) {\n  digits_sum <- function(n) {\n    neg <- 1\n    if (n < 0) {n <- -1 * n; neg <- -1}\n    n <- as.integer(strsplit(as.character(n), \"\")[[1]])\n    n[1] <- n[1] * neg\n    return(sum(n))\n  }\n  return(length(Filter(function(x) x > 0, lapply(arr, digits_sum))))\n\n}\ntest_humaneval <- function() {\ncandidate <- count_nums\n    if(!(candidate(c()) == 0)){quit('no', 1)}\n    if(!(candidate(c(-1, -2, 0)) == 0)){quit('no', 1)}\n    if(!(candidate(c(1, 1, 2, -2, 3, 4, 5)) == 6)){quit('no', 1)}\n    if(!(candidate(c(1, 6, 9, -6, 0, 1, 5)) == 5)){quit('no', 1)}\n    if(!(candidate(c(1, 100, 98, -7, 1, -1)) == 4)){quit('no', 1)}\n    if(!(candidate(c(12, 23, 34, -45, -56, 0)) == 5)){quit('no', 1)}\n    if(!(candidate(c(0, 1)) == 1)){quit('no', 1)}\n    if(!(candidate(c(1)) == 1)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_139_special_factorial": "special_factorial <- function(n) {\n    fact_i <- 1\n    special_fact <- 1\n    for (i in 1:n) {\n        fact_i <- fact_i * i\n        special_fact <- special_fact * fact_i\n    }\n    return(special_fact)\n\n}\ntest_humaneval <- function() {\ncandidate <- special_factorial\n    if(!identical(candidate(4), 288)){quit('no', 1)}\n    if(!identical(candidate(5), 34560)){quit('no', 1)}\n    if(!identical(candidate(7), 125411328000)){quit('no', 1)}\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_71_triangle_area": "triangle_area <- function(a, b, c) {\n    if (a + b <= c || a + c <= b || b + c <= a) {\n        return(-1)\n    }\n    s <- (a + b + c)/2\n    area <- (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    area <- round(area, 2)\n    return(area)\n\n}\ntest_humaneval <- function() {\ncandidate <- triangle_area\n    if(!identical(candidate(3, 4, 5), 6.0)){quit('no', 1)}\n    if(!identical(candidate(1, 2, 10), -1)){quit('no', 1)}\n    if(!identical(candidate(4, 8, 5), 8.18)){quit('no', 1)}\n    if(!identical(candidate(2, 2, 2), 1.73)){quit('no', 1)}\n    if(!identical(candidate(1, 2, 3), -1)){quit('no', 1)}\n    if(!identical(candidate(10, 5, 7), 16.25)){quit('no', 1)}\n    if(!identical(candidate(2, 6, 3), -1)){quit('no', 1)}\n    if(!identical(candidate(1, 1, 1), 0.43)){quit('no', 1)}\n    if(!identical(candidate(2, 2, 10), -1)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_0_has_close_elements": "has_close_elements <- function(numbers, threshold) {\n    for (idx in seq_along(numbers)) {\n        for (idx2 in seq_along(numbers)) {\n            if (idx != idx2) {\n                distance <- abs(numbers[idx] - numbers[idx2])\n                if (distance < threshold) {\n                    return(TRUE)\n                }\n            }\n        }\n    }\n    return(FALSE)\n\n}\ntest_humaneval <- function() {\ncandidate <- has_close_elements\n    if(!identical(candidate(c(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1.0, 2.0, 5.9, 4.0, 5.0), 0.95), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1.0, 2.0, 5.9, 4.0, 5.0), 0.8), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1.0, 2.0, 3.0, 4.0, 5.0, 2.0), 0.1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1.1, 2.2, 3.1, 4.1, 5.1), 1.0), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1.1, 2.2, 3.1, 4.1, 5.1), 0.5), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_115_max_fill": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nmax_fill <- function(grid, capacity) {\n  return(sum(sapply(grid, function(arr) {ceiling(sum(arr)/capacity)})))\n\n}\ntest_humaneval <- function() {\ncandidate <- max_fill\n    if(!(candidate(list(c(0, 0, 1, 0), c(0, 1, 0, 0), c(1, 1, 1, 1)), 1) == 6)){quit('no', 1)}\n    if(!(candidate(list(c(0, 0, 1, 1), c(0, 0, 0, 0), c(1, 1, 1, 1), c(0, 1, 1, 1)), 2) == 5)){quit('no', 1)}\n    if(!(candidate(list(c(0, 0, 0), c(0, 0, 0)), 5) == 0)){quit('no', 1)}\n    if(!(candidate(list(c(1, 1, 1, 1), c(1, 1, 1, 1)), 2) == 4)){quit('no', 1)}\n    if(!(candidate(list(c(1, 1, 1, 1), c(1, 1, 1, 1)), 9) == 2)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_12_longest": "longest <- function(strings) {\n    if (is.null(strings) || length(strings) == 0) {\n        return(NULL)\n    }\n    \n    maxlen <- max(nchar(strings))\n    for (s in strings) {\n        if (nchar(s) == maxlen) {\n            return(s)\n        }\n    }\n\n}\ntest_humaneval <- function() {\ncandidate <- longest\n    if(!identical(candidate(c()), NULL)){quit('no', 1)}\n    if(!identical(candidate(c('x', 'y', 'z')), 'x')){quit('no', 1)}\n    if(!identical(candidate(c('x', 'yyy', 'zzzz', 'www', 'kkkk', 'abc')), 'zzzz')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_69_search": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsearch <- function(lst) {\n  frq <- rep(0, max(lst) + 1)\n  for (i in lst) {\n    frq[i] <- frq[i] + 1\n  }\n  ans <- -1\n  for (i in 1:length(frq)) {\n    if (frq[i] >= i) {\n      ans <- i\n    }\n  }\n  return(ans)\n\n}\ntest_humaneval <- function() {\ncandidate <- search\n    if(!(candidate(c(5, 5, 5, 5, 1)) == 1)){quit('no', 1)}\n    if(!(candidate(c(4, 1, 4, 1, 4, 4)) == 4)){quit('no', 1)}\n    if(!(candidate(c(3, 3)) == -1)){quit('no', 1)}\n    if(!(candidate(c(8, 8, 8, 8, 8, 8, 8, 8)) == 8)){quit('no', 1)}\n    if(!(candidate(c(2, 3, 3, 2, 2)) == 2)){quit('no', 1)}\n    if(!(candidate(c(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) == 1)){quit('no', 1)}\n    if(!(candidate(c(3, 2, 8, 2)) == 2)){quit('no', 1)}\n    if(!(candidate(c(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) == 1)){quit('no', 1)}\n    if(!(candidate(c(8, 8, 3, 6, 5, 6, 4)) == -1)){quit('no', 1)}\n    if(!(candidate(c(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) == 1)){quit('no', 1)}\n    if(!(candidate(c(1, 9, 10, 1, 3)) == 1)){quit('no', 1)}\n    if(!(candidate(c(6, 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) == 5)){quit('no', 1)}\n    if(!(candidate(c(1)) == 1)){quit('no', 1)}\n    if(!(candidate(c(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) == 4)){quit('no', 1)}\n    if(!(candidate(c(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) == 2)){quit('no', 1)}\n    if(!(candidate(c(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) == 1)){quit('no', 1)}\n    if(!(candidate(c(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) == 4)){quit('no', 1)}\n    if(!(candidate(c(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) == 4)){quit('no', 1)}\n    if(!(candidate(c(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) == 2)){quit('no', 1)}\n    if(!(candidate(c(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) == -1)){quit('no', 1)}\n    if(!(candidate(c(10)) == -1)){quit('no', 1)}\n    if(!(candidate(c(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) == 2)){quit('no', 1)}\n    if(!(candidate(c(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) == 1)){quit('no', 1)}\n    if(!(candidate(c(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) == 1)){quit('no', 1)}\n    if(!(candidate(c(3, 10, 10, 9, 2)) == -1)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_122_add_elements": "add_elements <- function(arr, k) {\n    sum(arr[1:k][nchar(arr[1:k]) <= 2])\n\n}\ntest_humaneval <- function() {\ncandidate <- add_elements\n    if(!identical(candidate(c(1, -2, -3, 41, 57, 76, 87, 88, 99), 3), -4)){quit('no', 1)}\n    if(!identical(candidate(c(111, 121, 3, 4000, 5, 6), 2), 0)){quit('no', 1)}\n    if(!identical(candidate(c(11, 21, 3, 90, 5, 6, 7, 8, 9), 4), 125)){quit('no', 1)}\n    if(!identical(candidate(c(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4), 24)){quit('no', 1)}\n    if(!identical(candidate(c(1), 1), 1)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_20_find_closest_elements": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nfind_closest_elements <- function(numbers) {\n  closest_pair <- NULL\n  distance <- NULL\n  \n  for (i in 1:length(numbers)) {\n    for (j in 1:length(numbers)) {\n      if (i != j) {\n        if (is.null(distance)) {\n          distance <- abs(numbers[i] - numbers[j])\n          closest_pair <- sort(c(numbers[i], numbers[j]))\n        } else {\n          new_distance <- abs(numbers[i] - numbers[j])\n          if (new_distance < distance) {\n            distance <- new_distance\n            closest_pair <- sort(c(numbers[i], numbers[j]))\n          }\n        }\n      }\n    }\n  }\n  \n  return(closest_pair)\n\n}\ntest_humaneval <- function() {\n    candidate <- find_closest_elements\n    stopifnot(isTRUE(all.equal(candidate(c(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)), c(3.9, 4.0))))\n    stopifnot(isTRUE(all.equal(candidate(c(1.0, 2.0, 5.9, 4.0, 5.0)), c(5.0, 5.9))))\n    stopifnot(isTRUE(all.equal(candidate(c(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)), c(2.0, 2.2))))\n    stopifnot(isTRUE(all.equal(candidate(c(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)), c(2.0, 2.0))))\n    stopifnot(isTRUE(all.equal(candidate(c(1.1, 2.2, 3.1, 4.1, 5.1)), c(2.2, 3.1))))\n}\ntest_humaneval()",
  "HumanEval_25_factorize": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nfactorize <- function(n) {\n  fact <- c()\n  i <- 2\n  while (i <= sqrt(n) + 1) {\n    if (n %% i == 0) {\n      fact <- c(fact, i)\n      n <- n %/% i\n    } else {\n      i <- i + 1\n    }\n  }\n  if (n > 1) {\n    fact <- c(fact, n)\n  }\n  return (fact)\n\n}\ntest_humaneval <- function() {\n    candidate <- factorize\n    stopifnot(isTRUE(all.equal(candidate(2), c(2))))\n    stopifnot(isTRUE(all.equal(candidate(4), c(2, 2))))\n    stopifnot(isTRUE(all.equal(candidate(8), c(2, 2, 2))))\n    stopifnot(isTRUE(all.equal(candidate(57), c(3, 19))))\n    stopifnot(isTRUE(all.equal(candidate(3249), c(3, 3, 19, 19))))\n    stopifnot(isTRUE(all.equal(candidate(185193), c(3, 3, 3, 19, 19, 19))))\n    stopifnot(isTRUE(all.equal(candidate(20577), c(3, 19, 19, 19))))\n    stopifnot(isTRUE(all.equal(candidate(18), c(2, 3, 3))))\n}\ntest_humaneval()",
  "HumanEval_146_specialFilter": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nspecialFilter <- function(nums) {\n  count <- 0\n  for (num in nums) {\n    if (num > 10) {\n      odd_digits <- c(1, 3, 5, 7, 9)\n      number_as_string <- as.character(num)\n      if (as.integer(strsplit(number_as_string, \"\")[[1]][1]) %in% odd_digits && as.integer(strsplit(number_as_string, \"\")[[1]][nchar(number_as_string)]) %in% odd_digits) {\n        count <- count + 1\n      }\n    }\n  }\n  return(count)\n\n}\ntest_humaneval <- function() {\ncandidate <- specialFilter\n    if(!(candidate(c(5, -2, 1, -5)) == 0)){quit('no', 1)}\n    if(!(candidate(c(15, -73, 14, -15)) == 1)){quit('no', 1)}\n    if(!(candidate(c(33, -2, -3, 45, 21, 109)) == 2)){quit('no', 1)}\n    if(!(candidate(c(43, -12, 93, 125, 121, 109)) == 4)){quit('no', 1)}\n    if(!(candidate(c(71, -2, -33, 75, 21, 19)) == 3)){quit('no', 1)}\n    if(!(candidate(c(1)) == 0)){quit('no', 1)}\n    if(!(candidate(c()) == 0)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_152_compare": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ncompare <- function(game, guess) {\n    return (sapply(1:length(game), function(i) abs(game[i] - guess[i])))\n\n}\ntest_humaneval <- function() {\ncandidate <- compare\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 1), c(1, 2, 3, 4, 2, -2)), c(0, 0, 0, 0, 3, 3))){quit('no', 1)}\n    if(!identical(candidate(c(0, 0, 0, 0, 0, 0), c(0, 0, 0, 0, 0, 0)), c(0, 0, 0, 0, 0, 0))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3), c(-1, -2, -3)), c(2, 4, 6))){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 5), c(-1, 2, 3, 4)), c(2, 0, 0, 1))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_99_closest_integer": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nclosest_integer <- function(value) {\n    num <- as.numeric(value)\n    if (substr(value, nchar(value)-1, nchar(value)) == \".5\") {\n        if (num > 0) {\n            res <- ceiling(num)\n        } else {\n            res <- floor(num)\n        }\n    } else if (nchar(value) > 0) {\n        res <- round(num)\n    } else {\n        res <- 0\n    }\n    return(res)\n\n}\ntest_humaneval <- function() {\n    candidate <- closest_integer\n    stopifnot(isTRUE(all.equal(candidate('10'), 10)))\n    stopifnot(isTRUE(all.equal(candidate('14.5'), 15)))\n    stopifnot(isTRUE(all.equal(candidate('-15.5'), -16)))\n    stopifnot(isTRUE(all.equal(candidate('15.3'), 15)))\n    stopifnot(isTRUE(all.equal(candidate('0'), 0)))\n}\ntest_humaneval()",
  "HumanEval_45_triangle_area": "triangle_area <- function(a, h) {\n    a * h / 2.0\n\n}\ntest_humaneval <- function() {\ncandidate <- triangle_area\n    if(!identical(candidate(5, 3), 7.5)){quit('no', 1)}\n    if(!identical(candidate(2, 2), 2.0)){quit('no', 1)}\n    if(!identical(candidate(10, 8), 40.0)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_154_cycpattern_check": "cycpattern_check <- function(a, b) {\n    l <- nchar(b)\n    pat <- paste0(b, b)\n    for (i in 1:(nchar(a) - l + 1)) {\n        for (j in 1:(l + 1)) {\n            if (substr(a, i, i + l - 1) == substr(pat, j, j + l - 1)) {\n                return(TRUE)\n            }\n        }\n    }\n    return(FALSE)\n\n}\ntest_humaneval <- function() {\ncandidate <- cycpattern_check\n    if(!identical(candidate('xyzw', 'xyw'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('yello', 'ell'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('whattup', 'ptut'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('efef', 'fee'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('abab', 'aabb'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('winemtt', 'tinem'), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_3_below_zero": "below_zero <- function(operations) {\n    balance <- 0\n    \n    for (op in operations) {\n        balance <- balance + op\n        if (balance < 0) {\n            return(TRUE)\n        }\n    }\n    \n    return(FALSE)\n\n}\ntest_humaneval <- function() {\ncandidate <- below_zero\n    if(!identical(candidate(c()), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, -3, 1, 2, -3)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, -4, 5, 6)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, -1, 2, -2, 5, -5, 4, -4)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, -1, 2, -2, 5, -5, 4, -5)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, -2, 2, -2, 5, -5, 4, -4)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_140_fix_spaces": "fix_spaces <- function(text) {\n    new_text <- \"\"\n    i <- 1\n    start <- 1\n    end <- 1\n    while (i <= nchar(text)) {\n        if (substr(text, i, i) == \" \") {\n            end <- end + 1\n        } else {\n            if (end - start > 2) {\n                new_text <- paste0(new_text, \"-\", substr(text, i, i))\n            } else if (end - start > 0) {\n                new_text <- paste0(new_text, strrep(\"_\", end - start), substr(text, i, i))\n            } else {\n                new_text <- paste0(new_text, substr(text, i, i))\n            }\n            start <- i + 1\n            end <- i + 1\n        }\n        i <- i + 1\n    }\n    if (end - start > 2) {\n        new_text <- paste0(new_text, \"-\")\n    } else if (end - start > 0) {\n        new_text <- paste0(new_text, \"_\")\n    }\n    return(new_text)\n\n}\ntest_humaneval <- function() {\ncandidate <- fix_spaces\n    if(!identical(candidate('Example'), 'Example')){quit('no', 1)}\n    if(!identical(candidate('Mudasir Hanif '), 'Mudasir_Hanif_')){quit('no', 1)}\n    if(!identical(candidate('Yellow Yellow  Dirty  Fellow'), 'Yellow_Yellow__Dirty__Fellow')){quit('no', 1)}\n    if(!identical(candidate('Exa   mple'), 'Exa-mple')){quit('no', 1)}\n    if(!identical(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_158_find_max": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nfind_max <- function(words) {\n  sorted_words <- words[order(-sapply(words, function(x) length(unique(strsplit(x, \"\")[[1]]))), words)]\n  return(sorted_words[1])\n\n}\ntest_humaneval <- function() {\ncandidate <- find_max\n    if(!(candidate(c('name', 'of', 'string')) == 'string')){quit('no', 1)}\n    if(!(candidate(c('name', 'enam', 'game')) == 'enam')){quit('no', 1)}\n    if(!(candidate(c('aaaaaaa', 'bb', 'cc')) == 'aaaaaaa')){quit('no', 1)}\n    if(!(candidate(c('abc', 'cba')) == 'abc')){quit('no', 1)}\n    if(!(candidate(c('play', 'this', 'game', 'of', 'footbott')) == 'footbott')){quit('no', 1)}\n    if(!(candidate(c('we', 'are', 'gonna', 'rock')) == 'gonna')){quit('no', 1)}\n    if(!(candidate(c('we', 'are', 'a', 'mad', 'nation')) == 'nation')){quit('no', 1)}\n    if(!(candidate(c('this', 'is', 'a', 'prrk')) == 'this')){quit('no', 1)}\n    if(!(candidate(c('b')) == 'b')){quit('no', 1)}\n    if(!(candidate(c('play', 'play', 'play')) == 'play')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_72_will_it_fly": "will_it_fly <- function(q, w) {\n    if (sum(q) > w) {\n        return(FALSE)\n    }\n    i <- 1\n    j <- length(q)\n    while (i < j) {\n        if (q[i] != q[j]) {\n            return(FALSE)\n        }\n        i <- i + 1\n        j <- j - 1\n    }\n    return(TRUE)\n\n}\ntest_humaneval <- function() {\ncandidate <- will_it_fly\n    if(!identical(candidate(c(3, 2, 3), 9), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2), 5), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(3), 5), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(3, 2, 3), 1), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3), 6), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(5), 5), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_138_is_equal_to_sum_even": "is_equal_to_sum_even <- function(n) {\n    n %% 2 == 0 & n >= 8\n\n}\ntest_humaneval <- function() {\ncandidate <- is_equal_to_sum_even\n    if(!identical(candidate(4), FALSE)){quit('no', 1)}\n    if(!identical(candidate(6), FALSE)){quit('no', 1)}\n    if(!identical(candidate(8), TRUE)){quit('no', 1)}\n    if(!identical(candidate(10), TRUE)){quit('no', 1)}\n    if(!identical(candidate(11), FALSE)){quit('no', 1)}\n    if(!identical(candidate(12), TRUE)){quit('no', 1)}\n    if(!identical(candidate(13), FALSE)){quit('no', 1)}\n    if(!identical(candidate(16), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_46_fib4": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nfib4 <- function(n) {\n    results <- c(0, 0, 2, 0)\n    if (n < 4) {\n        return(results[n])\n    }\n    for (i in 4:n) {\n        results <- c(results[2], results[3], results[4], sum(results))\n    }\n    return(results[4])\n\n}\ntest_humaneval <- function() {\ncandidate <- fib4\n    if(!(candidate(5) == 4)){quit('no', 1)}\n    if(!(candidate(8) == 28)){quit('no', 1)}\n    if(!(candidate(10) == 104)){quit('no', 1)}\n    if(!(candidate(12) == 386)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_109_move_one_ball": "move_one_ball <- function(arr) {\n  if (length(arr)==0) {\n    return(TRUE)\n  }\n  sorted_array <- sort(arr)\n  my_arr <- c()\n  \n  min_value <- min(arr)\n  min_index <- which(arr == min_value)\n  my_arr <- c(arr[min_index:length(arr)], arr[1:(min_index-1)])\n  for (i in 1:length(arr)) {\n    if (my_arr[i] != sorted_array[i]) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\n}\ntest_humaneval <- function() {\ncandidate <- move_one_ball\n    if(!identical(candidate(c(3, 4, 5, 1, 2)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(3, 5, 10, 1, 2)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(4, 3, 1, 2)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(3, 5, 4, 1, 2)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c()), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_61_correct_bracketing": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ncorrect_bracketing <- function(brackets) {\n  depth <- 0\n  for (b in strsplit(brackets, \"\")[[1]]) {\n    if (b == \"(\") {\n      depth <- depth + 1\n    } else {\n      depth <- depth - 1\n    }\n    if (depth < 0) {\n      return(FALSE)\n    }\n  }\n  return(depth == 0)\n\n}\ntest_humaneval <- function() {\ncandidate <- correct_bracketing\n    if(!(candidate('()') == TRUE)){quit('no', 1)}\n    if(!(candidate('(()())') == TRUE)){quit('no', 1)}\n    if(!(candidate('()()(()())()') == TRUE)){quit('no', 1)}\n    if(!(candidate('()()((()()())())(()()(()))') == TRUE)){quit('no', 1)}\n    if(!(candidate('((()())))') == FALSE)){quit('no', 1)}\n    if(!(candidate(')(()') == FALSE)){quit('no', 1)}\n    if(!(candidate('(') == FALSE)){quit('no', 1)}\n    if(!(candidate('((((') == FALSE)){quit('no', 1)}\n    if(!(candidate(')') == FALSE)){quit('no', 1)}\n    if(!(candidate('(()') == FALSE)){quit('no', 1)}\n    if(!(candidate('()()(()())())(()') == FALSE)){quit('no', 1)}\n    if(!(candidate('()()(()())()))()') == FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_63_fibfib": "fibfib <- function(n) {\n  if (n == 0) {\n    return(0)\n  }\n  if (n == 1) {\n    return(0)\n  }\n  if (n == 2) {\n    return(1)\n  }\n  return(fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3))\n\n}\ntest_humaneval <- function() {\ncandidate <- fibfib\n    if(!identical(candidate(2), 1)){quit('no', 1)}\n    if(!identical(candidate(1), 0)){quit('no', 1)}\n    if(!identical(candidate(5), 4)){quit('no', 1)}\n    if(!identical(candidate(8), 24)){quit('no', 1)}\n    if(!identical(candidate(10), 81)){quit('no', 1)}\n    if(!identical(candidate(12), 274)){quit('no', 1)}\n    if(!identical(candidate(14), 927)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_133_sum_squares": "sum_squares <- function(lst) {\n    squared <- 0\n    for (i in lst) {\n        squared <- squared + ceiling(i)^2\n    }\n    return(squared)\n\n}\ntest_humaneval <- function() {\ncandidate <- sum_squares\n    if(!identical(candidate(c(1.0, 2.0, 3.0)), 14)){quit('no', 1)}\n    if(!identical(candidate(c(1.0, 2.0, 3.0)), 14)){quit('no', 1)}\n    if(!identical(candidate(c(1.0, 3.0, 5.0, 7.0)), 84)){quit('no', 1)}\n    if(!identical(candidate(c(1.4, 4.2, 0.0)), 29)){quit('no', 1)}\n    if(!identical(candidate(c(-2.4, 1.0, 1.0)), 6)){quit('no', 1)}\n    if(!identical(candidate(c(100.0, 1.0, 15.0, 2.0)), 10230)){quit('no', 1)}\n    if(!identical(candidate(c(10000.0, 10000.0)), 200000000)){quit('no', 1)}\n    if(!identical(candidate(c(-1.4, 4.6, 6.3)), 75)){quit('no', 1)}\n    if(!identical(candidate(c(-1.4, 17.9, 18.9, 19.9)), 1086)){quit('no', 1)}\n    if(!identical(candidate(c(0.0)), 0)){quit('no', 1)}\n    if(!identical(candidate(c(-1.0)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(-1.0, 1.0, 0.0)), 2)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_144_simplify": "simplify <- function(x, n) {\n    a <- strsplit(x, \"/\")[[1]][1]\n    b <- strsplit(x, \"/\")[[1]][2]\n    c <- strsplit(n, \"/\")[[1]][1]\n    d <- strsplit(n, \"/\")[[1]][2]\n    numerator <- as.integer(a) * as.integer(c)\n    denom <- as.integer(b) * as.integer(d)\n    if (numerator/denom == as.integer(numerator/denom)) {\n        return(TRUE)\n    }\n    return(FALSE)\n\n}\ntest_humaneval <- function() {\ncandidate <- simplify\n    if(!identical(candidate('1/5', '5/1'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('1/6', '2/1'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('5/1', '3/1'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('7/10', '10/2'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('2/10', '50/10'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('7/2', '4/2'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('11/6', '6/1'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('2/3', '5/2'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('5/2', '3/5'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('2/4', '8/4'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('2/4', '4/2'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('1/5', '5/1'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('1/5', '1/5'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_13_greatest_common_divisor": "greatest_common_divisor <- function(a, b) {\n    while (b) {\n        temp <- b\n        b <- a %% b\n        a <- temp\n    }\n    return(a)\n\n}\ntest_humaneval <- function() {\ncandidate <- greatest_common_divisor\n    if(!identical(candidate(3, 7), 1)){quit('no', 1)}\n    if(!identical(candidate(10, 15), 5)){quit('no', 1)}\n    if(!identical(candidate(49, 14), 7)){quit('no', 1)}\n    if(!identical(candidate(144, 60), 12)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_23_strlen": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nstrlen <- function(string) {\n    nchar(string)\n\n}\ntest_humaneval <- function() {\ncandidate <- strlen\n    if(!(candidate('') == 0)){quit('no', 1)}\n    if(!(candidate('x') == 1)){quit('no', 1)}\n    if(!(candidate('asdasnakj') == 9)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_88_sort_array": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsort_array <- function(array) {\n    if (length(array) == 0) {\n        return (c())\n    } else {\n        return (sort(array, decreasing = (sum(c(array[1], array[length(array)])) %% 2 == 0)))\n    }\n\n}\ntest_humaneval <- function() {\ncandidate <- sort_array\n    if(!identical(candidate(c()), c())){quit('no', 1)}\n    if(!identical(candidate(c(5)), c(5))){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 3, 0, 1, 5)), c(0, 1, 2, 3, 4, 5))){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 3, 0, 1, 5, 6)), c(6, 5, 4, 3, 2, 1, 0))){quit('no', 1)}\n    if(!identical(candidate(c(2, 1)), c(1, 2))){quit('no', 1)}\n    if(!identical(candidate(c(15, 42, 87, 32, 11, 0)), c(0, 11, 15, 32, 42, 87))){quit('no', 1)}\n    if(!identical(candidate(c(21, 14, 23, 11)), c(23, 21, 14, 11))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_81_numerical_letter_grade": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nnumerical_letter_grade <- function(grades) {\n  letter_grade <- vector(mode = \"character\", length = length(grades))\n  for (i in 1:length(grades)) {\n    if (grades[i] == 4.0) {\n      letter_grade[i] <- \"A+\"\n    } else if (grades[i] > 3.7) {\n      letter_grade[i] <- \"A\"\n    } else if (grades[i] > 3.3) {\n      letter_grade[i] <- \"A-\"\n    } else if (grades[i] > 3.0) {\n      letter_grade[i] <- \"B+\"\n    } else if (grades[i] > 2.7) {\n      letter_grade[i] <- \"B\"\n    } else if (grades[i] > 2.3) {\n      letter_grade[i] <- \"B-\"\n    } else if (grades[i] > 2.0) {\n      letter_grade[i] <- \"C+\"\n    } else if (grades[i] > 1.7) {\n      letter_grade[i] <- \"C\"\n    } else if (grades[i] > 1.3) {\n      letter_grade[i] <- \"C-\"\n    } else if (grades[i] > 1.0) {\n      letter_grade[i] <- \"D+\"\n    } else if (grades[i] > 0.7) {\n      letter_grade[i] <- \"D\"\n    } else if (grades[i] > 0.0) {\n      letter_grade[i] <- \"D-\"\n    } else {\n      letter_grade[i] <- \"E\"\n    }\n  }\n  return(letter_grade)\n\n}\ntest_humaneval <- function() {\n    candidate <- numerical_letter_grade\n    stopifnot(isTRUE(all.equal(candidate(c(4.0, 3, 1.7, 2, 3.5)), c('A+', 'B', 'C-', 'C', 'A-'))))\n    stopifnot(isTRUE(all.equal(candidate(c(1.2)), c('D+'))))\n    stopifnot(isTRUE(all.equal(candidate(c(0.5)), c('D-'))))\n    stopifnot(isTRUE(all.equal(candidate(c(0.0)), c('E'))))\n    stopifnot(isTRUE(all.equal(candidate(c(1.0, 0.3, 1.5, 2.8, 3.3)), c('D', 'D-', 'C-', 'B', 'B+'))))\n    stopifnot(isTRUE(all.equal(candidate(c(0.0, 0.7)), c('E', 'D-'))))\n}\ntest_humaneval()",
  "HumanEval_31_is_prime": "is_prime <- function(n) {\n    if (n < 2) {\n        return(FALSE)\n    }\n    for (k in 2:(n - 1)) {\n        if (n %% k == 0) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n\n}\ntest_humaneval <- function() {\ncandidate <- is_prime\n    if(!identical(candidate(6), FALSE)){quit('no', 1)}\n    if(!identical(candidate(101), TRUE)){quit('no', 1)}\n    if(!identical(candidate(11), TRUE)){quit('no', 1)}\n    if(!identical(candidate(13441), TRUE)){quit('no', 1)}\n    if(!identical(candidate(61), TRUE)){quit('no', 1)}\n    if(!identical(candidate(4), FALSE)){quit('no', 1)}\n    if(!identical(candidate(1), FALSE)){quit('no', 1)}\n    if(!identical(candidate(5), TRUE)){quit('no', 1)}\n    if(!identical(candidate(11), TRUE)){quit('no', 1)}\n    if(!identical(candidate(17), TRUE)){quit('no', 1)}\n    if(!identical(candidate(85), FALSE)){quit('no', 1)}\n    if(!identical(candidate(77), FALSE)){quit('no', 1)}\n    if(!identical(candidate(255379), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_131_digits": "digits <- function(n) {\n    product <- 1\n    odd_count <- 0\n    for (digit in strsplit(as.character(n), \"\")[[1]]) {\n        int_digit <- as.integer(digit)\n        if (int_digit%%2 == 1) {\n            product <- product*int_digit\n            odd_count <- odd_count+1\n        }\n    }\n    if (odd_count ==0) {\n        return(0)\n    } else {\n        return(product)\n    }\n\n}\ntest_humaneval <- function() {\ncandidate <- digits\n    if(!identical(candidate(5), 5)){quit('no', 1)}\n    if(!identical(candidate(54), 5)){quit('no', 1)}\n    if(!identical(candidate(120), 1)){quit('no', 1)}\n    if(!identical(candidate(5014), 5)){quit('no', 1)}\n    if(!identical(candidate(98765), 315)){quit('no', 1)}\n    if(!identical(candidate(5576543), 2625)){quit('no', 1)}\n    if(!identical(candidate(2468), 0)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_15_string_sequence": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nstring_sequence <- function(n) {\n  return(paste0(0:n, collapse = \" \"))\n\n}\ntest_humaneval <- function() {\ncandidate <- string_sequence\n    if(!(candidate(0) == '0')){quit('no', 1)}\n    if(!(candidate(3) == '0 1 2 3')){quit('no', 1)}\n    if(!(candidate(10) == '0 1 2 3 4 5 6 7 8 9 10')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_128_prod_signs": "prod_signs <- function(arr) {\n  if (is.null(arr)) return(NULL)\n  prod <- 0\n  if (0 %in% arr) {\n    prod <- 0\n  } else {\n    prod <- (-1) ^ length(Filter(function(x) x < 0, arr))\n  }\n  return(prod * sum(abs(arr)))\n\n}\ntest_humaneval <- function() {\ncandidate <- prod_signs\n    if(!identical(candidate(c(1, 2, 2, -4)), -9)){quit('no', 1)}\n    if(!identical(candidate(c(0, 1)), 0)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 1, 2, 3, -1, 1)), -10)){quit('no', 1)}\n    if(!identical(candidate(c()), NULL)){quit('no', 1)}\n    if(!identical(candidate(c(2, 4, 1, 2, -1, -1, 9)), 20)){quit('no', 1)}\n    if(!identical(candidate(c(-1, 1, -1, 1)), 4)){quit('no', 1)}\n    if(!identical(candidate(c(-1, 1, 1, 1)), -4)){quit('no', 1)}\n    if(!identical(candidate(c(-1, 1, 1, 0)), 0)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_110_exchange": "exchange <- function(lst1, lst2) {\n    odd <- 0\n    even <- 0\n    for (i in lst1) {\n        if (i %% 2 == 1) {\n            odd <- odd + 1\n        }\n    }\n    for (i in lst2) {\n        if (i %% 2 == 0) {\n            even <- even + 1\n        }\n    }\n    if (even >= odd) {\n        return(\"YES\")\n    }\n    return(\"NO\")\n\n}\ntest_humaneval <- function() {\ncandidate <- exchange\n    if(!identical(candidate(c(1, 2, 3, 4), c(1, 2, 3, 4)), 'YES')){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4), c(1, 5, 3, 4)), 'NO')){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4), c(2, 1, 4, 3)), 'YES')){quit('no', 1)}\n    if(!identical(candidate(c(5, 7, 3), c(2, 6, 4)), 'YES')){quit('no', 1)}\n    if(!identical(candidate(c(5, 7, 3), c(2, 6, 3)), 'NO')){quit('no', 1)}\n    if(!identical(candidate(c(3, 2, 6, 1, 8, 9), c(3, 5, 5, 1, 1, 1)), 'NO')){quit('no', 1)}\n    if(!identical(candidate(c(100, 200), c(200, 200)), 'YES')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_107_even_odd_palindrome": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\neven_odd_palindrome <- function(n) {\n  is_palindrome <- function(n) {\n    return (stri_reverse(as.character(n)) == as.character(n))\n  }\n  even_palindrome_count <- 0\n  odd_palindrome_count <- 0\n  for (i in 1:n) {\n    if (i %% 2 == 1 && is_palindrome(i)) {\n      odd_palindrome_count <- odd_palindrome_count + 1\n    } else if (i %% 2 == 0 && is_palindrome(i)) {\n      even_palindrome_count <- even_palindrome_count + 1\n    }\n  }\n  return (c(even_palindrome_count, odd_palindrome_count))\n\n}\ntest_humaneval <- function() {\n    candidate <- even_odd_palindrome\n    stopifnot(isTRUE(all.equal(candidate(123), c(8, 13))))\n    stopifnot(isTRUE(all.equal(candidate(12), c(4, 6))))\n    stopifnot(isTRUE(all.equal(candidate(3), c(1, 2))))\n    stopifnot(isTRUE(all.equal(candidate(63), c(6, 8))))\n    stopifnot(isTRUE(all.equal(candidate(25), c(5, 6))))\n    stopifnot(isTRUE(all.equal(candidate(19), c(4, 6))))\n    stopifnot(isTRUE(all.equal(candidate(9), c(4, 5))))\n    stopifnot(isTRUE(all.equal(candidate(1), c(0, 1))))\n}\ntest_humaneval()",
  "HumanEval_36_fizz_buzz": "fizz_buzz <- function(n) {\n    ns <- c()\n    for (i in 0:(n-1)) {\n        if (i %% 11 == 0 || i %% 13 == 0) {\n            ns <- c(ns, i)\n        }\n    }\n    s <- paste(as.character(ns), collapse = '')\n    ans <- 0\n    for (c in strsplit(s, '')[[1]]) {\n        ans <- ans + (c == '7')\n    }\n    return(ans)\n\n}\ntest_humaneval <- function() {\ncandidate <- fizz_buzz\n    if(!identical(candidate(50), 0)){quit('no', 1)}\n    if(!identical(candidate(78), 2)){quit('no', 1)}\n    if(!identical(candidate(79), 3)){quit('no', 1)}\n    if(!identical(candidate(100), 3)){quit('no', 1)}\n    if(!identical(candidate(200), 6)){quit('no', 1)}\n    if(!identical(candidate(4000), 192)){quit('no', 1)}\n    if(!identical(candidate(10000), 639)){quit('no', 1)}\n    if(!identical(candidate(100000), 8026)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_21_rescale_to_unit": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nrescale_to_unit <- function(numbers) {\n  min_number <- min(numbers)\n  max_number <- max(numbers)\n  return ((numbers - min_number) / (max_number - min_number))\n\n}\ntest_humaneval <- function() {\ncandidate <- rescale_to_unit\n    if(!identical(candidate(c(2.0, 49.9)), c(0.0, 1.0))){quit('no', 1)}\n    if(!identical(candidate(c(100.0, 49.9)), c(1.0, 0.0))){quit('no', 1)}\n    if(!identical(candidate(c(1.0, 2.0, 3.0, 4.0, 5.0)), c(0.0, 0.25, 0.5, 0.75, 1.0))){quit('no', 1)}\n    if(!identical(candidate(c(2.0, 1.0, 5.0, 3.0, 4.0)), c(0.25, 0.0, 1.0, 0.5, 0.75))){quit('no', 1)}\n    if(!identical(candidate(c(12.0, 11.0, 15.0, 13.0, 14.0)), c(0.25, 0.0, 1.0, 0.5, 0.75))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_28_concatenate": "concatenate <- function(strings) {\n    return(paste(strings, collapse = ''))\n\n}\ntest_humaneval <- function() {\ncandidate <- concatenate\n    if(!identical(candidate(c()), '')){quit('no', 1)}\n    if(!identical(candidate(c('x', 'y', 'z')), 'xyz')){quit('no', 1)}\n    if(!identical(candidate(c('x', 'y', 'z', 'w', 'k')), 'xyzwk')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_60_sum_to_n": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsum_to_n <- function(n) {\n  sum(0:n)\n\n}\ntest_humaneval <- function() {\ncandidate <- sum_to_n\n    if(!(candidate(1) == 1)){quit('no', 1)}\n    if(!(candidate(6) == 21)){quit('no', 1)}\n    if(!(candidate(11) == 66)){quit('no', 1)}\n    if(!(candidate(30) == 465)){quit('no', 1)}\n    if(!(candidate(100) == 5050)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_2_truncate_number": "truncate_number <- function(number) {\n    return(number %% 1.0)\n\n}\ntest_humaneval <- function() {\ncandidate <- truncate_number\n    if(!identical(candidate(3.5), 0.5)){quit('no', 1)}\n    if(!identical(candidate(1.25), 0.25)){quit('no', 1)}\n    if(!identical(candidate(123.0), 0.0)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_97_multiply": "multiply <- function(a, b) {\n    return(abs(a %% 10) * abs(b %% 10))\n\n}\ntest_humaneval <- function() {\ncandidate <- multiply\n    if(!identical(candidate(148, 412), 16)){quit('no', 1)}\n    if(!identical(candidate(19, 28), 72)){quit('no', 1)}\n    if(!identical(candidate(2020, 1851), 0)){quit('no', 1)}\n    if(!identical(candidate(14, -15), 20)){quit('no', 1)}\n    if(!identical(candidate(76, 67), 42)){quit('no', 1)}\n    if(!identical(candidate(17, 27), 49)){quit('no', 1)}\n    if(!identical(candidate(0, 1), 0)){quit('no', 1)}\n    if(!identical(candidate(0, 0), 0)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_8_sum_product": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsum_product <- function(numbers) {\n    sum_value <- sum(numbers)\n    prod_value <- prod(numbers)\n    return (c(sum_value, prod_value))\n\n}\ntest_humaneval <- function() {\n    candidate <- sum_product\n    stopifnot(isTRUE(all.equal(candidate(c()), c(0, 1))))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 1, 1)), c(3, 1))))\n    stopifnot(isTRUE(all.equal(candidate(c(100, 0)), c(100, 0))))\n    stopifnot(isTRUE(all.equal(candidate(c(3, 5, 7)), c(15, 105))))\n    stopifnot(isTRUE(all.equal(candidate(c(10)), c(10, 10))))\n}\ntest_humaneval()",
  "HumanEval_137_compare_one": "compare_one <- function(a, b) {\n    temp_a <- a\n    temp_b <- b\n    if (is.character(temp_a)) {\n        temp_a <- gsub(\",\", \".\", temp_a)\n    }\n    if (is.character(temp_b)) {\n        temp_b <- gsub(\",\", \".\", temp_b)\n    }\n    if (as.numeric(temp_a) == as.numeric(temp_b)) {\n        return(NULL)\n    }\n    if (as.numeric(temp_a) > as.numeric(temp_b)) {\n        return(a)\n    } else {\n        return(b)\n    }\n\n}\ntest_humaneval <- function() {\ncandidate <- compare_one\n    if(!identical(candidate(1, 2), 2)){quit('no', 1)}\n    if(!identical(candidate(1, 2.5), 2.5)){quit('no', 1)}\n    if(!identical(candidate(2, 3), 3)){quit('no', 1)}\n    if(!identical(candidate(5, 6), 6)){quit('no', 1)}\n    if(!identical(candidate(1, '2,3'), '2,3')){quit('no', 1)}\n    if(!identical(candidate('5,1', '6'), '6')){quit('no', 1)}\n    if(!identical(candidate('1', '2'), '2')){quit('no', 1)}\n    if(!identical(candidate('1', 1), NULL)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_83_starts_one_ends": "starts_one_ends <- function(n) {\n    if (n == 1) return(1)\n    return(18 * (10 ^ (n - 2)))\n\n}\ntest_humaneval <- function() {\ncandidate <- starts_one_ends\n    if(!identical(candidate(1), 1)){quit('no', 1)}\n    if(!identical(candidate(2), 18)){quit('no', 1)}\n    if(!identical(candidate(3), 180)){quit('no', 1)}\n    if(!identical(candidate(4), 1800)){quit('no', 1)}\n    if(!identical(candidate(5), 18000)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_157_right_angle_triangle": "right_angle_triangle <- function(a, b, c) {\n    a*a == b*b + c*c || b*b == a*a + c*c || c*c == a*a + b*b\n\n}\ntest_humaneval <- function() {\ncandidate <- right_angle_triangle\n    if(!identical(candidate(3, 4, 5), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1, 2, 3), FALSE)){quit('no', 1)}\n    if(!identical(candidate(10, 6, 8), TRUE)){quit('no', 1)}\n    if(!identical(candidate(2, 2, 2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(7, 24, 25), TRUE)){quit('no', 1)}\n    if(!identical(candidate(10, 5, 7), FALSE)){quit('no', 1)}\n    if(!identical(candidate(5, 12, 13), TRUE)){quit('no', 1)}\n    if(!identical(candidate(15, 8, 17), TRUE)){quit('no', 1)}\n    if(!identical(candidate(48, 55, 73), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1, 1, 1), FALSE)){quit('no', 1)}\n    if(!identical(candidate(2, 2, 10), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_56_correct_bracketing": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ncorrect_bracketing <- function(brackets) {\n  depth <- 0\n  for (b in strsplit(brackets, \"\")[[1]]) {\n    if (b == \"<\") {\n      depth <- depth + 1\n    } else {\n      depth <- depth - 1\n    }\n    if (depth < 0) {\n      return(FALSE)\n    }\n  }\n  return(depth == 0)\n\n}\ntest_humaneval <- function() {\ncandidate <- correct_bracketing\n    if(!(candidate('<>') == TRUE)){quit('no', 1)}\n    if(!(candidate('<<><>>') == TRUE)){quit('no', 1)}\n    if(!(candidate('<><><<><>><>') == TRUE)){quit('no', 1)}\n    if(!(candidate('<><><<<><><>><>><<><><<>>>') == TRUE)){quit('no', 1)}\n    if(!(candidate('<<<><>>>>') == FALSE)){quit('no', 1)}\n    if(!(candidate('><<>') == FALSE)){quit('no', 1)}\n    if(!(candidate('<') == FALSE)){quit('no', 1)}\n    if(!(candidate('<<<<') == FALSE)){quit('no', 1)}\n    if(!(candidate('>') == FALSE)){quit('no', 1)}\n    if(!(candidate('<<>') == FALSE)){quit('no', 1)}\n    if(!(candidate('<><><<><>><>><<>') == FALSE)){quit('no', 1)}\n    if(!(candidate('<><><<><>><>>><>') == FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_90_next_smallest": "next_smallest <- function(lst) {\n    lst <- sort(unique(lst))\n    if (length(lst) < 2) {\n        return(NULL)\n    } else {\n        return(lst[2])\n    }\n\n}\ntest_humaneval <- function() {\ncandidate <- next_smallest\n    if(!identical(candidate(c(1, 2, 3, 4, 5)), 2)){quit('no', 1)}\n    if(!identical(candidate(c(5, 1, 4, 3, 2)), 2)){quit('no', 1)}\n    if(!identical(candidate(c()), NULL)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1)), NULL)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1, 1, 1, 0)), 1)){quit('no', 1)}\n    if(!identical(candidate(c(1, 1)), NULL)){quit('no', 1)}\n    if(!identical(candidate(c(-35, 34, 12, -45)), -35)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_59_largest_prime_factor": "largest_prime_factor <- function(n) {\n    is_prime <- function(k) {\n        if (k < 2) {\n            return(FALSE)\n        }\n        for (i in 2:(k - 1)) {\n            if (k %% i == 0) {\n                return(FALSE)\n            }\n        }\n        return(TRUE)\n    }\n    largest <- 1\n    for (j in 2:(n + 1)) {\n        if (n %% j == 0 && is_prime(j)) {\n            largest <- max(largest, j)\n        }\n    }\n    return(largest)\n\n}\ntest_humaneval <- function() {\ncandidate <- largest_prime_factor\n    if(!identical(candidate(15), 5)){quit('no', 1)}\n    if(!identical(candidate(27), 3)){quit('no', 1)}\n    if(!identical(candidate(63), 7)){quit('no', 1)}\n    if(!identical(candidate(330), 11)){quit('no', 1)}\n    if(!identical(candidate(13195), 29)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_48_is_palindrome": "is_palindrome <- function(text) {\n    for (i in 1:nchar(text)) {\n        if (substr(text, i, i) != substr(text, nchar(text) - i + 1, nchar(text) - i + 1)) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n\n}\ntest_humaneval <- function() {\ncandidate <- is_palindrome\n    if(!identical(candidate(''), TRUE)){quit('no', 1)}\n    if(!identical(candidate('aba'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('aaaaa'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('zbcd'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('xywyx'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('xywyz'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('xywzx'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_52_below_threshold": "below_threshold <- function(l, t) {\n    for (e in l) {\n        if (e >= t) {\n            return(FALSE)\n        }\n    }\n    return(TRUE)\n\n}\ntest_humaneval <- function() {\ncandidate <- below_threshold\n    if(!identical(candidate(c(1, 2, 4, 10), 100), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 20, 4, 10), 5), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 20, 4, 10), 21), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 20, 4, 10), 22), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 8, 4, 10), 11), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 8, 4, 10), 10), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_7_filter_by_substring": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nfilter_by_substring <- function(strings, substring) {\n  return(strings[str_detect(strings, substring)])\n\n}\ntest_humaneval <- function() {\ncandidate <- filter_by_substring\n    if(!identical(candidate(c(), 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'aaaxxy', 'john doe', 'xxxAAA', 'xxx'), 'xx'), c('xxx', 'aaaxxy', 'xxxAAA', 'xxx'))){quit('no', 1)}\n    if(!identical(candidate(c('grunt', 'trumpet', 'prune', 'gruesome'), 'run'), c('grunt', 'prune'))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_80_is_happy": "is_happy <- function(s) {\n  if (nchar(s) < 3) {\n    return(FALSE)\n  }\n  \n  for (i in 1:(nchar(s) - 2)) {\n    if (substr(s, i, i) == substr(s, i+1, i+1) || \n        substr(s, i+1, i+1) == substr(s, i+2, i+2) || \n        substr(s, i, i) == substr(s, i+2, i+2)) {\n      return(FALSE)\n    }\n  }\n  return(TRUE)\n\n}\ntest_humaneval <- function() {\ncandidate <- is_happy\n    if(!identical(candidate('a'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('aa'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('abcd'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('aabb'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('adb'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('xyy'), FALSE)){quit('no', 1)}\n    if(!identical(candidate('iopaxpoi'), TRUE)){quit('no', 1)}\n    if(!identical(candidate('iopaxioi'), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_153_Strongest_Extension": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nStrongest_Extension <- function(class_name, extensions) {\n  strong <- extensions[1]\n  my_val <- nchar(gsub(\"[^[:upper:]]\", \"\", extensions[1])) - nchar(gsub(\"[^[:lower:]]\", \"\", extensions[1]))\n  for (s in extensions) {\n    val <- nchar(gsub(\"[^[:upper:]]\", \"\", s)) - nchar(gsub(\"[^[:lower:]]\", \"\", s))\n    if (val > my_val) {\n      strong <- s\n      my_val <- val\n    }\n  }\n  ans <- paste(class_name, strong, sep = \".\")\n  return(ans)\n\n}\ntest_humaneval <- function() {\ncandidate <- Strongest_Extension\n    if(!(candidate('Watashi', c('tEN', 'niNE', 'eIGHt8OKe')) == 'Watashi.eIGHt8OKe')){quit('no', 1)}\n    if(!(candidate('Boku123', c('nani', 'NazeDa', 'YEs.WeCaNe', '32145tggg')) == 'Boku123.YEs.WeCaNe')){quit('no', 1)}\n    if(!(candidate('__YESIMHERE', c('t', 'eMptY', 'nothing', 'zeR00', 'NuLl__', '123NoooneB321')) == '__YESIMHERE.NuLl__')){quit('no', 1)}\n    if(!(candidate('K', c('Ta', 'TAR', 't234An', 'cosSo')) == 'K.TAR')){quit('no', 1)}\n    if(!(candidate('__HAHA', c('Tab', '123', '781345', '-_-')) == '__HAHA.123')){quit('no', 1)}\n    if(!(candidate('YameRore', c('HhAas', 'okIWILL123', 'WorkOut', 'Fails', '-_-')) == 'YameRore.okIWILL123')){quit('no', 1)}\n    if(!(candidate('finNNalLLly', c('Die', 'NowW', 'Wow', 'WoW')) == 'finNNalLLly.WoW')){quit('no', 1)}\n    if(!(candidate('_', c('Bb', '91245')) == '_.Bb')){quit('no', 1)}\n    if(!(candidate('Sp', c('671235', 'Bb')) == 'Sp.671235')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_53_add": "add <- function(x, y) {\n    return(x + y)\n\n}\ntest_humaneval <- function() {\ncandidate <- add\n    if(!identical(candidate(0, 1), 1)){quit('no', 1)}\n    if(!identical(candidate(1, 0), 1)){quit('no', 1)}\n    if(!identical(candidate(2, 3), 5)){quit('no', 1)}\n    if(!identical(candidate(5, 7), 12)){quit('no', 1)}\n    if(!identical(candidate(7, 5), 12)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_5_intersperse": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nintersperse <- function(numbers, delimeter) {\n    if (length(numbers) == 0) {\n        return (c())\n    }\n    result <- c()\n    for (n in numbers[-length(numbers)]) {\n        result <- c(result, n, delimeter)\n    }\n    result <- c(result, numbers[length(numbers)])\n    return (result)\n\n}\ntest_humaneval <- function() {\ncandidate <- intersperse\n    if(!identical(candidate(c(), 7), c())){quit('no', 1)}\n    if(!identical(candidate(c(5, 6, 3, 2), 8), c(5, 8, 6, 8, 3, 8, 2))){quit('no', 1)}\n    if(!identical(candidate(c(2, 2, 2), 2), c(2, 2, 2, 2, 2))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_76_is_simple_power": "is_simple_power <- function(x, n) {\n    if (n == 1) {\n        return (x == 1)\n    }\n    power <- 1\n    while (power < x) {\n        power <- power * n\n    }\n    return (power == x)\n\n}\ntest_humaneval <- function() {\ncandidate <- is_simple_power\n    if(!identical(candidate(16, 2), TRUE)){quit('no', 1)}\n    if(!identical(candidate(143214, 16), FALSE)){quit('no', 1)}\n    if(!identical(candidate(4, 2), TRUE)){quit('no', 1)}\n    if(!identical(candidate(9, 3), TRUE)){quit('no', 1)}\n    if(!identical(candidate(16, 4), TRUE)){quit('no', 1)}\n    if(!identical(candidate(24, 2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(128, 4), FALSE)){quit('no', 1)}\n    if(!identical(candidate(12, 6), FALSE)){quit('no', 1)}\n    if(!identical(candidate(1, 1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1, 12), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_57_monotonic": "monotonic <- function(l) {\n    if (identical(l, sort(l)) || identical(l, sort(l, decreasing = TRUE))) {\n        return(TRUE)\n    }\n    return(FALSE)\n\n}\ntest_humaneval <- function() {\ncandidate <- monotonic\n    if(!identical(candidate(c(1, 2, 4, 10)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 4, 20)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 20, 4, 10)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(4, 1, 0, -10)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(4, 1, 1, 0)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 2, 5, 60)), FALSE)){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4, 5, 60)), TRUE)){quit('no', 1)}\n    if(!identical(candidate(c(9, 9, 9, 9)), TRUE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_120_maximum": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nmaximum <- function(arr, k) {\n  if (k == 0) {\n    return (c())\n  }\n  ans <- tail(sort(arr), k)\n  return (ans)\n\n}\ntest_humaneval <- function() {\n    candidate <- maximum\n    stopifnot(isTRUE(all.equal(candidate(c(-3, -4, 5), 3), c(-4, -3, 5))))\n    stopifnot(isTRUE(all.equal(candidate(c(4, -4, 4), 2), c(4, 4))))\n    stopifnot(isTRUE(all.equal(candidate(c(-3, 2, 1, 2, -1, -2, 1), 1), c(2))))\n    stopifnot(isTRUE(all.equal(candidate(c(123, -123, 20, 0, 1, 2, -3), 3), c(2, 20, 123))))\n    stopifnot(isTRUE(all.equal(candidate(c(-123, 20, 0, 1, 2, -3), 4), c(0, 1, 2, 20))))\n    stopifnot(isTRUE(all.equal(candidate(c(5, 15, 0, 3, -13, -8, 0), 7), c(-13, -8, 0, 0, 3, 5, 15))))\n    stopifnot(isTRUE(all.equal(candidate(c(-1, 0, 2, 5, 3, -10), 2), c(3, 5))))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 0, 5, -7), 1), c(5))))\n    stopifnot(isTRUE(all.equal(candidate(c(4, -4), 2), c(-4, 4))))\n    stopifnot(isTRUE(all.equal(candidate(c(-10, 10), 2), c(-10, 10))))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, -23, 243, -400, 0), 0), c())))\n}\ntest_humaneval()",
  "HumanEval_65_circular_shift": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ncircular_shift <- function(x, shift) {\n    s <- as.character(x)\n    if (shift > nchar(s)) {\n        return(stri_reverse(s))\n    } else {\n        return(paste0(substr(s, nchar(s) - shift + 1, nchar(s)), substr(s, 1, nchar(s) - shift)))\n    }\n\n}\ntest_humaneval <- function() {\ncandidate <- circular_shift\n    if(!(candidate(100, 2) == '001')){quit('no', 1)}\n    if(!(candidate(12, 2) == '12')){quit('no', 1)}\n    if(!(candidate(97, 8) == '79')){quit('no', 1)}\n    if(!(candidate(12, 1) == '21')){quit('no', 1)}\n    if(!(candidate(11, 101) == '11')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_29_filter_by_prefix": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nfilter_by_prefix <- function(strings, prefix) {\n  return (strings[str_detect(strings, prefix)])\n\n}\ntest_humaneval <- function() {\ncandidate <- filter_by_prefix\n    if(!identical(candidate(c(), 'john'), c())){quit('no', 1)}\n    if(!identical(candidate(c('xxx', 'asd', 'xxy', 'john doe', 'xxxAAA', 'xxx'), 'xxx'), c('xxx', 'xxxAAA', 'xxx'))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_77_iscube": "iscube <- function(a) {\n  a <- abs(a)\n  return (round(a ^ (1 / 3)) ^ 3 == a)\n\n}\ntest_humaneval <- function() {\ncandidate <- iscube\n    if(!identical(candidate(1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(2), FALSE)){quit('no', 1)}\n    if(!identical(candidate(-1), TRUE)){quit('no', 1)}\n    if(!identical(candidate(64), TRUE)){quit('no', 1)}\n    if(!identical(candidate(180), FALSE)){quit('no', 1)}\n    if(!identical(candidate(1000), TRUE)){quit('no', 1)}\n    if(!identical(candidate(0), TRUE)){quit('no', 1)}\n    if(!identical(candidate(1729), FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_16_count_distinct_characters": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ncount_distinct_characters <- function(string) {\n    length(unique(tolower(strsplit(string, \"\")[[1]])))\n\n}\ntest_humaneval <- function() {\ncandidate <- count_distinct_characters\n    if(!(candidate('') == 0)){quit('no', 1)}\n    if(!(candidate('abcde') == 5)){quit('no', 1)}\n    if(!(candidate('abcdecadeCADE') == 5)){quit('no', 1)}\n    if(!(candidate('aaaaAAAAaaaa') == 1)){quit('no', 1)}\n    if(!(candidate('Jerry jERRY JeRRRY') == 5)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_74_total_match": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ntotal_match <- function(lst1, lst2) {\n    l1 <- sum(nchar(lst1))\n    l2 <- sum(nchar(lst2))\n    if (l1 <= l2) {\n        return(lst1)\n    } else {\n        return(lst2)\n    }\n\n}\ntest_humaneval <- function() {\n    candidate <- total_match\n    stopifnot(isTRUE(all.equal(candidate(c(), c()), c())))\n    stopifnot(isTRUE(all.equal(candidate(c('hi', 'admin'), c('hi', 'hi')), c('hi', 'hi'))))\n    stopifnot(isTRUE(all.equal(candidate(c('hi', 'admin'), c('hi', 'hi', 'admin', 'project')), c('hi', 'admin'))))\n    stopifnot(isTRUE(all.equal(candidate(c('4'), c('1', '2', '3', '4', '5')), c('4'))))\n    stopifnot(isTRUE(all.equal(candidate(c('hi', 'admin'), c('hI', 'Hi')), c('hI', 'Hi'))))\n    stopifnot(isTRUE(all.equal(candidate(c('hi', 'admin'), c('hI', 'hi', 'hi')), c('hI', 'hi', 'hi'))))\n    stopifnot(isTRUE(all.equal(candidate(c('hi', 'admin'), c('hI', 'hi', 'hii')), c('hi', 'admin'))))\n    stopifnot(isTRUE(all.equal(candidate(c(), c('this')), c())))\n    stopifnot(isTRUE(all.equal(candidate(c('this'), c()), c())))\n}\ntest_humaneval()",
  "HumanEval_124_valid_date": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nvalid_date <- function(date) {\n  tryCatch({\n    date <- stri_trim_both(date)\n    parts <- str_split(date, \"-\")[[1]]\n    month <- as.integer(parts[1])\n    day <- as.integer(parts[2])\n    year <- as.integer(parts[3])\n    if (month < 1 || month > 12) {\n      return(FALSE)\n    }\n    if (month %in% c(1,3,5,7,8,10,12) && (day < 1 || day > 31)) {\n      return(FALSE)\n    }\n    if (month %in% c(4,6,9,11) && (day < 1 || day > 30)) {\n      return(FALSE)\n    }\n    if (month == 2 && (day < 1 || day > 29)) {\n      return(FALSE)\n    }\n    return(TRUE)\n  }, error = function(e) {\n    return(FALSE)\n  })\n\n}\ntest_humaneval <- function() {\ncandidate <- valid_date\n    if(!(candidate('03-11-2000') == TRUE)){quit('no', 1)}\n    if(!(candidate('15-01-2012') == FALSE)){quit('no', 1)}\n    if(!(candidate('04-0-2040') == FALSE)){quit('no', 1)}\n    if(!(candidate('06-04-2020') == TRUE)){quit('no', 1)}\n    if(!(candidate('01-01-2007') == TRUE)){quit('no', 1)}\n    if(!(candidate('03-32-2011') == FALSE)){quit('no', 1)}\n    if(!(candidate('') == FALSE)){quit('no', 1)}\n    if(!(candidate('04-31-3000') == FALSE)){quit('no', 1)}\n    if(!(candidate('06-06-2005') == TRUE)){quit('no', 1)}\n    if(!(candidate('21-31-2000') == FALSE)){quit('no', 1)}\n    if(!(candidate('04-12-2003') == TRUE)){quit('no', 1)}\n    if(!(candidate('04122003') == FALSE)){quit('no', 1)}\n    if(!(candidate('20030412') == FALSE)){quit('no', 1)}\n    if(!(candidate('2003-04') == FALSE)){quit('no', 1)}\n    if(!(candidate('2003-04-12') == FALSE)){quit('no', 1)}\n    if(!(candidate('04-2003') == FALSE)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_119_match_parens": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nmatch_parens <- function(lst) {\n  check <- function(s) {\n    val <- 0\n    for (i in 1:nchar(s)) {\n      if (substr(s, i, i) == '(') {\n        val <- val + 1\n      } else {\n        val <- val - 1\n      }\n      if (val < 0) {\n        return(FALSE)\n      }\n    }\n    if (val == 0) {\n      return(TRUE)\n    } else {\n      return(FALSE)\n    }\n  }\n  S1 <- paste(lst[1], lst[2], sep = \"\")\n  S2 <- paste(lst[2], lst[1], sep = \"\")\n  if (check(S1) | check(S2)) {\n    return('Yes')\n  } else {\n    return('No')\n  }\n\n}\ntest_humaneval <- function() {\ncandidate <- match_parens\n    if(!(candidate(c('()(', ')')) == 'Yes')){quit('no', 1)}\n    if(!(candidate(c(')', ')')) == 'No')){quit('no', 1)}\n    if(!(candidate(c('(()(())', '())())')) == 'No')){quit('no', 1)}\n    if(!(candidate(c(')())', '(()()(')) == 'Yes')){quit('no', 1)}\n    if(!(candidate(c('(())))', '(()())((')) == 'Yes')){quit('no', 1)}\n    if(!(candidate(c('()', '())')) == 'No')){quit('no', 1)}\n    if(!(candidate(c('(()(', '()))()')) == 'Yes')){quit('no', 1)}\n    if(!(candidate(c('((((', '((())')) == 'No')){quit('no', 1)}\n    if(!(candidate(c(')(()', '(()(')) == 'No')){quit('no', 1)}\n    if(!(candidate(c(')(', ')(')) == 'No')){quit('no', 1)}\n    if(!(candidate(c('(', ')')) == 'Yes')){quit('no', 1)}\n    if(!(candidate(c(')', '(')) == 'Yes')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_64_vowels_count": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nvowels_count <- function(s) {\n    vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n    n_vowels <- sum(stri_detect_fixed(s, vowels))\n    if (str_sub(s, -1) %in% c(\"y\", \"Y\")) {\n        n_vowels <- n_vowels + 1\n    }\n    return(n_vowels)\n\n}\ntest_humaneval <- function() {\ncandidate <- vowels_count\n    if(!(candidate('abcde') == 2)){quit('no', 1)}\n    if(!(candidate('Alone') == 3)){quit('no', 1)}\n    if(!(candidate('key') == 2)){quit('no', 1)}\n    if(!(candidate('bye') == 1)){quit('no', 1)}\n    if(!(candidate('keY') == 2)){quit('no', 1)}\n    if(!(candidate('bYe') == 1)){quit('no', 1)}\n    if(!(candidate('ACEDY') == 3)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_132_is_nested": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nis_nested <- function(string) {\n    opening_bracket_index <- which(strsplit(string, \"\")[[1]] == \"[\")\n    closing_bracket_index <- which(strsplit(string, \"\")[[1]] == \"]\")\n    closing_bracket_index <- rev(closing_bracket_index)\n    cnt <- 0\n    i <- 1\n    l <- length(closing_bracket_index)\n    for (idx in opening_bracket_index) {\n        if (i <= l && idx < closing_bracket_index[i]) {\n            cnt <- cnt + 1\n            i <- i + 1\n        }\n    }\n    return(cnt >= 2)\n\n}\ntest_humaneval <- function() {\n    candidate <- is_nested\n    stopifnot(isTRUE(all.equal(candidate('[[]]'), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate('[]]]]]]][[[[[]'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('[][]'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('[]'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('[[[[]]]]'), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate('[]]]]]]]]]]'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('[][][[]]'), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate('[[]'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('[]]'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('[[]][['), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate('[[][]]'), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(''), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('[[[[[[[['), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(']]]]]]]]'), FALSE)))\n}\ntest_humaneval()",
  "HumanEval_11_string_xor": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nstring_xor <- function(a, b) {\n    return (paste(as.integer(as.logical(xor(as.integer(strsplit(a, \"\")[[1]]), as.integer(strsplit(b, \"\")[[1]])))), collapse = \"\"))\n\n}\ntest_humaneval <- function() {\n    candidate <- string_xor\n    stopifnot(isTRUE(all.equal(candidate('111000', '101010'), '010010')))\n    stopifnot(isTRUE(all.equal(candidate('1', '1'), '0')))\n    stopifnot(isTRUE(all.equal(candidate('0101', '0000'), '0101')))\n}\ntest_humaneval()",
  "HumanEval_85_add": "add <- function(lst) {\n  sum(lst[seq(2, length(lst), 2)][lst[seq(2, length(lst), 2)] %% 2 == 0])\n\n}\ntest_humaneval <- function() {\ncandidate <- add\n    if(!identical(candidate(c(4, 88)), 88)){quit('no', 1)}\n    if(!identical(candidate(c(4, 5, 6, 7, 2, 122)), 122)){quit('no', 1)}\n    if(!identical(candidate(c(4, 0, 6, 7)), 0)){quit('no', 1)}\n    if(!identical(candidate(c(4, 4, 6, 8)), 12)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_159_eat": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\neat <- function(number, need, remaining) {\n    if(need <= remaining){\n        return(c(number + need , remaining-need))\n    } else {\n        return(c(number + remaining , 0))\n    }\n\n}\ntest_humaneval <- function() {\ncandidate <- eat\n    if(!identical(candidate(5, 6, 10), c(11, 4))){quit('no', 1)}\n    if(!identical(candidate(4, 8, 9), c(12, 1))){quit('no', 1)}\n    if(!identical(candidate(1, 10, 10), c(11, 0))){quit('no', 1)}\n    if(!identical(candidate(2, 11, 5), c(7, 0))){quit('no', 1)}\n    if(!identical(candidate(4, 5, 7), c(9, 2))){quit('no', 1)}\n    if(!identical(candidate(4, 5, 1), c(5, 0))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_84_solve": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsolve <- function(N) {\n  return(intToBin(sum(as.integer(strsplit(as.character(N), \"\")[[1]]))))\n\n}\ntest_humaneval <- function() {\ncandidate <- solve\n    if(!(candidate(1000) == '1')){quit('no', 1)}\n    if(!(candidate(150) == '110')){quit('no', 1)}\n    if(!(candidate(147) == '1100')){quit('no', 1)}\n    if(!(candidate(333) == '1001')){quit('no', 1)}\n    if(!(candidate(963) == '10010')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_9_rolling_max": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nrolling_max <- function(numbers) {\n  running_max <- NULL\n  result <- c()\n  for (n in numbers) {\n    if (is.null(running_max)) {\n      running_max <- n\n    } else {\n      running_max <- max(running_max, n)\n    }\n    result <- c(result, running_max)\n  }\n  return(result)\n\n}\ntest_humaneval <- function() {\ncandidate <- rolling_max\n    if(!identical(candidate(c()), c())){quit('no', 1)}\n    if(!identical(candidate(c(1, 2, 3, 4)), c(1, 2, 3, 4))){quit('no', 1)}\n    if(!identical(candidate(c(4, 3, 2, 1)), c(4, 4, 4, 4))){quit('no', 1)}\n    if(!identical(candidate(c(3, 2, 3, 100, 3)), c(3, 3, 3, 100, 100))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_91_is_bored": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nis_bored <- function(S) {\n    sentences <- str_split(S, \"[.?!]\\\\s*\")[[1]]\n    sum(str_detect(sentences, \"^I\\\\s\"))\n\n}\ntest_humaneval <- function() {\ncandidate <- is_bored\n    if(!(candidate('Hello world') == 0)){quit('no', 1)}\n    if(!(candidate('Is the sky blue?') == 0)){quit('no', 1)}\n    if(!(candidate('I love It !') == 1)){quit('no', 1)}\n    if(!(candidate('bIt') == 0)){quit('no', 1)}\n    if(!(candidate('I feel good today. I will be productive. will kill It') == 2)){quit('no', 1)}\n    if(!(candidate('You and I are going for a walk') == 0)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_117_select_words": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nselect_words <- function(s, n) {\n    result <- c()\n    for (word in strsplit(s, \" \")[[1]]) {\n        n_consonants <- sum(str_count(tolower(word), \"[^aeiou]\"))\n        if (n_consonants == n) {\n            result <- c(result, word)\n        }\n    }\n    return(result)\n\n}\ntest_humaneval <- function() {\n    candidate <- select_words\n    stopifnot(isTRUE(all.equal(candidate('Mary had a little lamb', 4), c('little'))))\n    stopifnot(isTRUE(all.equal(candidate('Mary had a little lamb', 3), c('Mary', 'lamb'))))\n    stopifnot(isTRUE(all.equal(candidate('simple white space', 2), c())))\n    stopifnot(isTRUE(all.equal(candidate('Hello world', 4), c('world'))))\n    stopifnot(isTRUE(all.equal(candidate('Uncle sam', 3), c('Uncle'))))\n    stopifnot(isTRUE(all.equal(candidate('', 4), c())))\n    stopifnot(isTRUE(all.equal(candidate('a b c d e f', 1), c('b', 'c', 'd', 'f'))))\n}\ntest_humaneval()",
  "HumanEval_100_make_a_pile": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nmake_a_pile <- function(n) {\n  return (n + 2*(0:(n-1)))\n\n}\ntest_humaneval <- function() {\n    candidate <- make_a_pile\n    stopifnot(isTRUE(all.equal(candidate(3), c(3, 5, 7))))\n    stopifnot(isTRUE(all.equal(candidate(4), c(4, 6, 8, 10))))\n    stopifnot(isTRUE(all.equal(candidate(5), c(5, 7, 9, 11, 13))))\n    stopifnot(isTRUE(all.equal(candidate(6), c(6, 8, 10, 12, 14, 16))))\n    stopifnot(isTRUE(all.equal(candidate(8), c(8, 10, 12, 14, 16, 18, 20, 22))))\n}\ntest_humaneval()",
  "HumanEval_156_int_to_mini_roman": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nint_to_mini_roman <- function(number) {\n  num <- c(1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000)\n  sym <- c(\"I\", \"IV\", \"V\", \"IX\", \"X\", \"XL\", \"L\", \"XC\", \"C\", \"CD\", \"D\", \"CM\", \"M\")\n  i <- 13\n  res <- \"\"\n  while (number > 0) {\n    div <- floor(number / num[i])\n    number <- number %% num[i]\n    while (div > 0) {\n      res <- paste0(res, sym[i])\n      div <- div - 1\n    }\n    i <- i - 1\n  }\n  return(tolower(res))\n\n}\ntest_humaneval <- function() {\ncandidate <- int_to_mini_roman\n    if(!(candidate(19) == 'xix')){quit('no', 1)}\n    if(!(candidate(152) == 'clii')){quit('no', 1)}\n    if(!(candidate(251) == 'ccli')){quit('no', 1)}\n    if(!(candidate(426) == 'cdxxvi')){quit('no', 1)}\n    if(!(candidate(500) == 'd')){quit('no', 1)}\n    if(!(candidate(1) == 'i')){quit('no', 1)}\n    if(!(candidate(4) == 'iv')){quit('no', 1)}\n    if(!(candidate(43) == 'xliii')){quit('no', 1)}\n    if(!(candidate(90) == 'xc')){quit('no', 1)}\n    if(!(candidate(94) == 'xciv')){quit('no', 1)}\n    if(!(candidate(532) == 'dxxxii')){quit('no', 1)}\n    if(!(candidate(900) == 'cm')){quit('no', 1)}\n    if(!(candidate(994) == 'cmxciv')){quit('no', 1)}\n    if(!(candidate(1000) == 'm')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_125_split_words": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsplit_words <- function(txt) {\n  if (grepl(\" \", txt)) {\n    return(strsplit(txt, \" \")[[1]])\n  } else if (grepl(\",\", txt)) {\n    return(strsplit(gsub(\",\", \" \", txt), \" \")[[1]])\n  } else {\n    return(length(Filter(function(x) x %in% letters && as.numeric(charToRaw(x)) %% 2 == 0, unlist(strsplit(txt, \"\")))))\n  }\n\n}\ntest_humaneval <- function() {\ncandidate <- split_words\n    if(!identical(candidate('Hello world!'), c('Hello', 'world!'))){quit('no', 1)}\n    if(!identical(candidate('Hello,world!'), c('Hello', 'world!'))){quit('no', 1)}\n    if(!identical(candidate('Hello world,!'), c('Hello', 'world,!'))){quit('no', 1)}\n    if(!identical(candidate('Hello,Hello,world !'), c('Hello,Hello,world', '!'))){quit('no', 1)}\n    if(!(candidate('abcdef') == 3)){quit('no', 1)}\n    if(!(candidate('aaabb') == 2)){quit('no', 1)}\n    if(!(candidate('aaaBb') == 1)){quit('no', 1)}\n    if(!(candidate('') == 0)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_105_by_length": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nby_length <- function(arr) {\n  dic <- c(\"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\")\n  sorted_arr <- sort(arr, decreasing = TRUE)\n  new_arr <- c()\n  for (var in sorted_arr) {\n    if (var %in% 1:9) {\n      new_arr <- c(new_arr, dic[var])\n    }\n  }\n  return (new_arr)\n\n}\ntest_humaneval <- function() {\n    candidate <- by_length\n    stopifnot(isTRUE(all.equal(candidate(c(2, 1, 1, 4, 5, 8, 2, 3)), c('Eight', 'Five', 'Four', 'Three', 'Two', 'Two', 'One', 'One'))))\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n    stopifnot(isTRUE(all.equal(candidate(c(1, -1, 55)), c('One'))))\n    stopifnot(isTRUE(all.equal(candidate(c(1, -1, 3, 2)), c('Three', 'Two', 'One'))))\n    stopifnot(isTRUE(all.equal(candidate(c(9, 4, 8)), c('Nine', 'Eight', 'Four'))))\n}\ntest_humaneval()",
  "HumanEval_94_skjkasdkd": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nskjkasdkd <- function(lst) {\n  isPrime <- function(n) {\n    for (i in 2:(sqrt(n))) {\n      if (n %% i == 0) {\n        return (FALSE)\n      }\n    }\n    return (TRUE)\n  }\n  maxx <- 0\n  i <- 1\n  while (i <= length(lst)) {\n    if (lst[i] > maxx && isPrime(lst[i])) {\n      maxx <- lst[i]\n    }\n    i <- i + 1\n  }\n  result <- sum(as.numeric(strsplit(as.character(maxx), \"\")[[1]]))\n  return (result)\n\n}\ntest_humaneval <- function() {\n    candidate <- skjkasdkd\n    stopifnot(isTRUE(all.equal(candidate(c(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)), 10)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)), 25)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)), 13)))\n    stopifnot(isTRUE(all.equal(candidate(c(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)), 11)))\n    stopifnot(isTRUE(all.equal(candidate(c(0, 81, 12, 3, 1, 21)), 3)))\n    stopifnot(isTRUE(all.equal(candidate(c(0, 8, 1, 2, 1, 7)), 7)))\n    stopifnot(isTRUE(all.equal(candidate(c(8191)), 19)))\n    stopifnot(isTRUE(all.equal(candidate(c(8191, 123456, 127, 7)), 19)))\n    stopifnot(isTRUE(all.equal(candidate(c(127, 97, 8192)), 10)))\n}\ntest_humaneval()",
  "HumanEval_51_remove_vowels": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nremove_vowels <- function(text) {\n  return(paste0(str_extract_all(text, \"[^aeiouAEIOU]\")[[1]], collapse = \"\"))\n\n}\ntest_humaneval <- function() {\ncandidate <- remove_vowels\n    if(!(candidate('') == '')){quit('no', 1)}\n    if(!(candidate('abcdef\\nghijklm') == 'bcdf\\nghjklm')){quit('no', 1)}\n    if(!(candidate('fedcba') == 'fdcb')){quit('no', 1)}\n    if(!(candidate('eeeee') == '')){quit('no', 1)}\n    if(!(candidate('acBAA') == 'cB')){quit('no', 1)}\n    if(!(candidate('EcBOO') == 'cB')){quit('no', 1)}\n    if(!(candidate('ybcd') == 'ybcd')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_4_mean_absolute_deviation": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nmean_absolute_deviation <- function(numbers) {\n    mean <- mean(numbers)\n    return (mean(abs(numbers - mean)))\n\n}\ntest_humaneval <- function() {\n    candidate <- mean_absolute_deviation\n    stopifnot(isTRUE(all.equal(candidate(c(1.0, 2.0)), 0.5)))\n    stopifnot(isTRUE(all.equal(candidate(c(1.0, 2.0, 3.0, 4.0)), 1.0)))\n    stopifnot(isTRUE(all.equal(candidate(c(1.0, 2.0, 3.0, 4.0, 5.0)), 1.2)))\n}\ntest_humaneval()",
  "HumanEval_27_flip_case": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nflip_case <- function(string) {\n  return(chartr(\"A-Za-z\", \"a-zA-Z\", string))\n\n}\ntest_humaneval <- function() {\ncandidate <- flip_case\n    if(!(candidate('') == '')){quit('no', 1)}\n    if(!(candidate('Hello!') == 'hELLO!')){quit('no', 1)}\n    if(!(candidate('These violent delights have violent ends') == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_114_minSubArraySum": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nminSubArraySum <- function(nums) {\n  max_sum <- 0\n  s <- 0\n  for (num in nums) {\n    s <- s - num\n    if (s < 0) {\n      s <- 0\n    }\n    max_sum <- max(s, max_sum)\n  }\n  if (max_sum == 0) {\n    max_sum <- max(-nums)\n  }\n  min_sum <- -max_sum\n  return(min_sum)\n\n}\ntest_humaneval <- function() {\ncandidate <- minSubArraySum\n    if(!(candidate(c(2, 3, 4, 1, 2, 4)) == 1)){quit('no', 1)}\n    if(!(candidate(c(-1, -2, -3)) == -6)){quit('no', 1)}\n    if(!(candidate(c(-1, -2, -3, 2, -10)) == -14)){quit('no', 1)}\n    if(!(candidate(c(-9999999999999999)) == -9999999999999999)){quit('no', 1)}\n    if(!(candidate(c(0, 10, 20, 1000000)) == 0)){quit('no', 1)}\n    if(!(candidate(c(-1, -2, -3, 10, -5)) == -6)){quit('no', 1)}\n    if(!(candidate(c(100, -1, -2, -3, 10, -5)) == -6)){quit('no', 1)}\n    if(!(candidate(c(10, 11, 13, 8, 3, 4)) == 3)){quit('no', 1)}\n    if(!(candidate(c(100, -33, 32, -1, 0, -2)) == -33)){quit('no', 1)}\n    if(!(candidate(c(-10)) == -10)){quit('no', 1)}\n    if(!(candidate(c(7)) == 7)){quit('no', 1)}\n    if(!(candidate(c(1, -1)) == -1)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_149_sorted_list_sum": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsorted_list_sum <- function(lst) {\n  lst <- sort(lst)\n  new_lst <- c()\n  for (i in lst) {\n    if (nchar(i) %% 2 == 0) {\n      new_lst <- c(new_lst, i)\n    }\n  }\n  return (new_lst[order(nchar(new_lst))])\n\n}\ntest_humaneval <- function() {\ncandidate <- sorted_list_sum\n    if(!identical(candidate(c('aa', 'a', 'aaa')), c('aa'))){quit('no', 1)}\n    if(!identical(candidate(c('school', 'AI', 'asdf', 'b')), c('AI', 'asdf', 'school'))){quit('no', 1)}\n    if(!identical(candidate(c('d', 'b', 'c', 'a')), c())){quit('no', 1)}\n    if(!identical(candidate(c('d', 'dcba', 'abcd', 'a')), c('abcd', 'dcba'))){quit('no', 1)}\n    if(!identical(candidate(c('AI', 'ai', 'au')), c('AI', 'ai', 'au'))){quit('no', 1)}\n    if(!identical(candidate(c('a', 'b', 'b', 'c', 'c', 'a')), c())){quit('no', 1)}\n    if(!identical(candidate(c('aaaa', 'bbbb', 'dd', 'cc')), c('cc', 'dd', 'aaaa', 'bbbb'))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_106_f": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nf <- function(n) {\n    ret <- c()\n    for (i in 1:n) {\n        if (i %% 2 == 0) {\n            x <- prod(1:i)\n            ret <- c(ret, x)\n        } else {\n            x <- sum(1:i)\n            ret <- c(ret, x)\n        }\n    }\n    return (ret)\n\n}\ntest_humaneval <- function() {\n    candidate <- f\n    stopifnot(isTRUE(all.equal(candidate(5), c(1, 2, 6, 24, 15))))\n    stopifnot(isTRUE(all.equal(candidate(7), c(1, 2, 6, 24, 15, 720, 28))))\n    stopifnot(isTRUE(all.equal(candidate(1), c(1))))\n    stopifnot(isTRUE(all.equal(candidate(3), c(1, 2, 6))))\n}\ntest_humaneval()",
  "HumanEval_123_get_odd_collatz": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nget_odd_collatz <- function(n) {\n  if (n %% 2 == 0) {\n    odd_collatz <- c()\n  } else {\n    odd_collatz <- c(n)\n  }\n  while (n > 1) {\n    if (n %% 2 == 0) {\n      n <- n/2\n    } else {\n      n <- n*3 + 1\n    }\n    if (n %% 2 == 1) {\n      odd_collatz <- c(odd_collatz, n)\n    }\n  }\n  return (sort(odd_collatz))\n\n}\ntest_humaneval <- function() {\n    candidate <- get_odd_collatz\n    stopifnot(isTRUE(all.equal(candidate(14), c(1, 5, 7, 11, 13, 17))))\n    stopifnot(isTRUE(all.equal(candidate(5), c(1, 5))))\n    stopifnot(isTRUE(all.equal(candidate(12), c(1, 3, 5))))\n    stopifnot(isTRUE(all.equal(candidate(1), c(1))))\n}\ntest_humaneval()",
  "HumanEval_86_anti_shuffle": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nanti_shuffle <- function(s) {\n  words <- str_split(s, \" \")[[1]]\n  sorted_words <- lapply(words, function(x) paste(sort(strsplit(x, \"\")[[1]]), collapse = \"\"))\n  return(paste(sorted_words, collapse = \" \"))\n\n}\ntest_humaneval <- function() {\ncandidate <- anti_shuffle\n    if(!(candidate('Hi') == 'Hi')){quit('no', 1)}\n    if(!(candidate('hello') == 'ehllo')){quit('no', 1)}\n    if(!(candidate('number') == 'bemnru')){quit('no', 1)}\n    if(!(candidate('abcd') == 'abcd')){quit('no', 1)}\n    if(!(candidate('Hello World!!!') == 'Hello !!!Wdlor')){quit('no', 1)}\n    if(!(candidate('') == '')){quit('no', 1)}\n    if(!(candidate('Hi. My name is Mister Robot. How are you?') == '.Hi My aemn is Meirst .Rboot How aer ?ouy')){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_33_sort_third": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsort_third <- function(l) {\n    l[seq(1, length(l), 3)] <- sort(l[seq(1, length(l), 3)])\n    return(l)\n\n}\ntest_humaneval <- function() {\n    candidate <- sort_third\n    stopifnot(isTRUE(all.equal(candidate(c(5, 6, 3, 4, 8, 9, 2)), c(2, 6, 3, 4, 8, 9, 5))))\n    stopifnot(isTRUE(all.equal(candidate(c(5, 8, 3, 4, 6, 9, 2)), c(2, 8, 3, 4, 6, 9, 5))))\n    stopifnot(isTRUE(all.equal(candidate(c(5, 6, 9, 4, 8, 3, 2)), c(2, 6, 9, 4, 8, 3, 5))))\n    stopifnot(isTRUE(all.equal(candidate(c(5, 6, 3, 4, 8, 9, 2, 1)), c(2, 6, 3, 4, 8, 9, 5, 1))))\n}\ntest_humaneval()",
  "HumanEval_66_digitSum": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ndigitSum <- function(s) {\n  if (s == \"\") {\n    return(0)\n  }\n  sum <- 0\n  for (char in strsplit(s, \"\")[[1]]) {\n    if (char %in% LETTERS) {\n      sum <- sum + utf8ToInt(char)\n    }\n  }\n  return(sum)\n\n}\ntest_humaneval <- function() {\ncandidate <- digitSum\n    if(!(candidate('') == 0)){quit('no', 1)}\n    if(!(candidate('abAB') == 131)){quit('no', 1)}\n    if(!(candidate('abcCd') == 67)){quit('no', 1)}\n    if(!(candidate('helloE') == 69)){quit('no', 1)}\n    if(!(candidate('woArBld') == 131)){quit('no', 1)}\n    if(!(candidate('aAaaaXa') == 153)){quit('no', 1)}\n    if(!(candidate(' How are yOu?') == 151)){quit('no', 1)}\n    if(!(candidate('You arE Very Smart') == 327)){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_1_separate_paren_groups": "separate_paren_groups <- function(paren_string) {\n    result <- list()\n    current_string <- c()\n    current_depth <- 0\n\n    for (c in strsplit(paren_string, \"\")[[1]]) {\n        if (c == \"(\") {\n            current_depth <- current_depth + 1\n            current_string <- c(current_string, c)\n        } else if (c == \")\") {\n            current_depth <- current_depth - 1\n            current_string <- c(current_string, c)\n\n            if (current_depth == 0) {\n                result <- c(result, paste(current_string, collapse = \"\"))\n                current_string <- c()\n            }\n        }\n    }\n\n    return(result)\n\n}\ntest_humaneval <- function() {\ncandidate <- separate_paren_groups\n    if(!identical(candidate('(()()) ((())) () ((())()())'), list('(()())', '((()))', '()', '((())()())'))){quit('no', 1)}\n    if(!identical(candidate('() (()) ((())) (((())))'), list('()', '(())', '((()))', '(((())))'))){quit('no', 1)}\n    if(!identical(candidate('(()(())((())))'), list('(()(())((())))'))){quit('no', 1)}\n    if(!identical(candidate('( ) (( )) (( )( ))'), list('()', '(())', '(()())'))){quit('no', 1)}\n}\ntest_humaneval()",
  "HumanEval_73_smallest_change": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsmallest_change <- function(arr) {\n  ans <- 0\n  for (i in 1:(length(arr) / 2)) {\n    if (arr[i] != arr[length(arr) - i + 1]) {\n      ans <- ans + 1\n    }\n  }\n  return (ans)\n\n}\ntest_humaneval <- function() {\n    candidate <- smallest_change\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 5, 4, 7, 9, 6)), 4)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4, 3, 2, 2)), 1)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 4, 2)), 1)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 4, 4, 2)), 1)))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 2, 1)), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(3, 1, 1, 3)), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(1)), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(0, 1)), 1)))\n}\ntest_humaneval()",
  "HumanEval_10_make_palindrome": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nmake_palindrome <- function(string) {\n  if (nchar(string) == 0) {\n    return ('')\n  }\n  beginning_of_suffix <- 0\n  while (substring(string, beginning_of_suffix + 1) != stri_reverse(substring(string, beginning_of_suffix + 1))) {\n    beginning_of_suffix <- beginning_of_suffix + 1\n  }\n  return (paste0(string, substring(string, 1, beginning_of_suffix) %>% stri_reverse()))\n\n}\ntest_humaneval <- function() {\n    candidate <- make_palindrome\n    stopifnot(isTRUE(all.equal(candidate(''), '')))\n    stopifnot(isTRUE(all.equal(candidate('x'), 'x')))\n    stopifnot(isTRUE(all.equal(candidate('xyz'), 'xyzyx')))\n    stopifnot(isTRUE(all.equal(candidate('xyx'), 'xyx')))\n    stopifnot(isTRUE(all.equal(candidate('jerry'), 'jerryrrej')))\n}\ntest_humaneval()",
  "HumanEval_26_remove_duplicates": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nremove_duplicates <- function(numbers) {\n  c <- table(numbers)\n  return (numbers[c[numbers] <= 1])\n\n}\ntest_humaneval <- function() {\n    candidate <- remove_duplicates\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 4)), c(1, 2, 3, 4))))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 2, 4, 3, 5)), c(1, 4, 5))))\n}\ntest_humaneval()",
  "HumanEval_161_solve": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsolve <- function(s) {\n  flg <- 0\n  idx <- 1\n  new_str <- strsplit(s, \"\")[[1]]\n  for (i in new_str) {\n    if (grepl(\"[[:alpha:]]\", i)) {\n      new_str[idx] <- ifelse(grepl(\"[[:lower:]]\", i), toupper(i), tolower(i))\n      flg <- 1\n    }\n    idx <- idx + 1\n  }\n  s <- paste(new_str, collapse=\"\")\n  if (flg == 0) {\n    return (paste(rev(strsplit(s, \"\")[[1]]), collapse=\"\"))\n  }\n  return (s)\n\n}\ntest_humaneval <- function() {\n    candidate <- solve\n    stopifnot(isTRUE(all.equal(candidate('AsDf'), 'aSdF')))\n    stopifnot(isTRUE(all.equal(candidate('1234'), '4321')))\n    stopifnot(isTRUE(all.equal(candidate('ab'), 'AB')))\n    stopifnot(isTRUE(all.equal(candidate('#a@C'), '#A@c')))\n    stopifnot(isTRUE(all.equal(candidate('#AsdfW^45'), '#aSDFw^45')))\n    stopifnot(isTRUE(all.equal(candidate('#6@2'), '2@6#')))\n    stopifnot(isTRUE(all.equal(candidate('#$a^D'), '#$A^d')))\n    stopifnot(isTRUE(all.equal(candidate('#ccc'), '#CCC')))\n}\ntest_humaneval()",
  "HumanEval_111_histogram": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nhistogram <- function(test) {\n  dict1 <- list()\n  list1 <- strsplit(test, \" \")[[1]]\n  t <- 0\n  for (i in list1) {\n    if (sum(list1 == i) > t && i != \"\") {\n      t <- sum(list1 == i)\n    }\n  }\n  if (t > 0) {\n    for (i in list1) {\n      if (sum(list1 == i) == t) {\n        dict1[i] <- t\n      }\n    }\n  }\n  return (dict1)\n\n}\ntest_humaneval <- function() {\n    candidate <- histogram\n    stopifnot(isTRUE(all.equal(candidate('a b b a'), list('a' = 2, 'b' = 2))))\n    stopifnot(isTRUE(all.equal(candidate('a b c a b'), list('a' = 2, 'b' = 2))))\n    stopifnot(isTRUE(all.equal(candidate('a b c d g'), list('a' = 1, 'b' = 1, 'c' = 1, 'd' = 1, 'g' = 1))))\n    stopifnot(isTRUE(all.equal(candidate('r t g'), list('r' = 1, 't' = 1, 'g' = 1))))\n    stopifnot(isTRUE(all.equal(candidate('b b b b a'), list('b' = 4))))\n    stopifnot(isTRUE(all.equal(candidate('r t g'), list('r' = 1, 't' = 1, 'g' = 1))))\n    stopifnot(isTRUE(all.equal(candidate(''), list())))\n    stopifnot(isTRUE(all.equal(candidate('a'), list('a' = 1))))\n}\ntest_humaneval()",
  "HumanEval_95_check_dict_case": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ncheck_dict_case <- function(dict) {\n  if (length(names(dict)) == 0) {\n    return (FALSE)\n  } else {\n    state <- \"start\"\n    for (key in names(dict)) {\n      if (is.character(key) == FALSE) {\n        state <- \"mixed\"\n        break\n      }\n      if (state == \"start\") {\n        if (str_detect(key, \"^[[:upper:]]+$\")) {\n          state <- \"upper\"\n        } else if (str_detect(key, \"^[[:lower:]]+$\")) {\n          state <- \"lower\"\n        } else {\n          break\n        }\n      } else if ((state == \"upper\" && !str_detect(key, \"^[[:upper:]]+$\")) || (state == \"lower\" && !str_detect(key, \"^[[:lower:]]+$\"))) {\n        state <- \"mixed\"\n        break\n      } else {\n        next\n      }\n    }\n    return (state == \"upper\" || state == \"lower\")\n  }\n\n}\ntest_humaneval <- function() {\n    candidate <- check_dict_case\n    stopifnot(isTRUE(all.equal(candidate(list('p' = 'pineapple', 'b' = 'banana')), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(list('p' = 'pineapple', 'A' = 'banana', 'B' = 'banana')), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(list('p' = 'pineapple', '5' = 'banana', 'a' = 'apple')), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(list('Name' = 'John', 'Age' = '36', 'City' = 'Houston')), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate(list('STATE' = 'NC', 'ZIP' = '12345')), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(list('fruit' = 'Orange', 'taste' = 'Sweet')), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate(list()), FALSE)))\n}\ntest_humaneval()",
  "HumanEval_17_parse_music": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nparse_music <- function(music_string) {\n  note_map <- list(o = 4, `o|` = 2, `.|` = 1)\n  return (unlist(lapply(strsplit(music_string, \" \")[[1]], function(x) note_map[[x]])))\n\n}\ntest_humaneval <- function() {\n    candidate <- parse_music\n    stopifnot(isTRUE(all.equal(candidate(''), c())))\n    stopifnot(isTRUE(all.equal(candidate('o o o o'), c(4, 4, 4, 4))))\n    stopifnot(isTRUE(all.equal(candidate('.| .| .| .|'), c(1, 1, 1, 1))))\n    stopifnot(isTRUE(all.equal(candidate('o| o| .| .| o o o o'), c(2, 2, 1, 1, 4, 4, 4, 4))))\n    stopifnot(isTRUE(all.equal(candidate('o| .| o| .| o o| o o|'), c(2, 1, 2, 1, 4, 2, 4, 2))))\n}\ntest_humaneval()",
  "HumanEval_54_same_chars": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsame_chars <- function(s0, s1) {\n  return (setequal(strsplit(s0, \"\")[[1]], strsplit(s1, \"\")[[1]]))\n\n}\ntest_humaneval <- function() {\n    candidate <- same_chars\n    stopifnot(isTRUE(all.equal(candidate('eabcdzzzz', 'dddzzzzzzzddeddabc'), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate('abcd', 'dddddddabc'), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate('dddddddabc', 'abcd'), TRUE)))\n    stopifnot(isTRUE(all.equal(candidate('eabcd', 'dddddddabc'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('abcd', 'dddddddabcf'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('eabcdzzzz', 'dddzzzzzzzddddabc'), FALSE)))\n    stopifnot(isTRUE(all.equal(candidate('aabb', 'aaccc'), FALSE)))\n}\ntest_humaneval()",
  "HumanEval_113_odd_count": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nodd_count <- function(lst) {\n  res <- c()\n  for (arr in lst) {\n    n <- sum(as.numeric(strsplit(arr, \"\")[[1]]) %% 2 == 1)\n    res <- c(res, paste0(\"the number of odd elements \", n, \"n the str\", n, \"ng \", n, \" of the \", n, \"nput.\"))\n  }\n  return (res)\n\n}\ntest_humaneval <- function() {\n    candidate <- odd_count\n    stopifnot(isTRUE(all.equal(candidate(c('1234567')), c('the number of odd elements 4n the str4ng 4 of the 4nput.'))))\n    stopifnot(isTRUE(all.equal(candidate(c('3', '11111111')), c('the number of odd elements 1n the str1ng 1 of the 1nput.', 'the number of odd elements 8n the str8ng 8 of the 8nput.'))))\n    stopifnot(isTRUE(all.equal(candidate(c('271', '137', '314')), c('the number of odd elements 2n the str2ng 2 of the 2nput.', 'the number of odd elements 3n the str3ng 3 of the 3nput.', 'the number of odd elements 2n the str2ng 2 of the 2nput.'))))\n}\ntest_humaneval()",
  "HumanEval_67_fruit_distribution": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nfruit_distribution <- function(s, n) {\n    lis <- c()\n    for (i in strsplit(s, \" \")[[1]]) {\n        if (grepl(\"[0-9]\", i)) {\n            lis <- c(lis, as.integer(i))\n        }\n    }\n    return(n - sum(lis))\n\n}\ntest_humaneval <- function() {\n    candidate <- fruit_distribution\n    stopifnot(isTRUE(all.equal(candidate('5 apples and 6 oranges', 19), 8)))\n    stopifnot(isTRUE(all.equal(candidate('5 apples and 6 oranges', 21), 10)))\n    stopifnot(isTRUE(all.equal(candidate('0 apples and 1 oranges', 3), 2)))\n    stopifnot(isTRUE(all.equal(candidate('1 apples and 0 oranges', 3), 2)))\n    stopifnot(isTRUE(all.equal(candidate('2 apples and 3 oranges', 100), 95)))\n    stopifnot(isTRUE(all.equal(candidate('2 apples and 3 oranges', 5), 0)))\n    stopifnot(isTRUE(all.equal(candidate('1 apples and 100 oranges', 120), 19)))\n}\ntest_humaneval()",
  "HumanEval_151_double_the_difference": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ndouble_the_difference <- function(lst) {\n    return(sum(lst[lst > 0 & lst %% 2 != 0 & !grepl(\"\\\\.\", lst)]^2))\n\n}\ntest_humaneval <- function() {\n    candidate <- double_the_difference\n    stopifnot(isTRUE(all.equal(candidate(c()), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(5.0, 4.0)), 25)))\n    stopifnot(isTRUE(all.equal(candidate(c(0.1, 0.2, 0.3)), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(-10.0, -20.0, -30.0)), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(-1.0, -2.0, 8.0)), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(0.2, 3.0, 5.0)), 34)))\n    stopifnot(isTRUE(all.equal(candidate(c(-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)), 165)))\n}\ntest_humaneval()",
  "HumanEval_58_common": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ncommon <- function(l1, l2) {\n    ret <- unique(intersect(l1, l2))\n    return (sort(ret))\n\n}\ntest_humaneval <- function() {\n    candidate <- common\n    stopifnot(isTRUE(all.equal(candidate(c(1, 4, 3, 34, 653, 2, 5), c(5, 7, 1, 5, 9, 653, 121)), c(1, 5, 653))))\n    stopifnot(isTRUE(all.equal(candidate(c(5, 3, 2, 8), c(3, 2)), c(2, 3))))\n    stopifnot(isTRUE(all.equal(candidate(c(4, 3, 2, 8), c(3, 2, 4)), c(2, 3, 4))))\n    stopifnot(isTRUE(all.equal(candidate(c(4, 3, 2, 8), c()), c())))\n}\ntest_humaneval()",
  "HumanEval_24_largest_divisor": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nlargest_divisor <- function(n) {\n    for (i in rev(seq(n-1))) {\n        if (n %% i == 0) {\n            return (i)\n        }\n    }\n\n}\ntest_humaneval <- function() {\n    candidate <- largest_divisor\n    stopifnot(isTRUE(all.equal(candidate(3), 1)))\n    stopifnot(isTRUE(all.equal(candidate(7), 1)))\n    stopifnot(isTRUE(all.equal(candidate(10), 5)))\n    stopifnot(isTRUE(all.equal(candidate(100), 50)))\n    stopifnot(isTRUE(all.equal(candidate(49), 7)))\n}\ntest_humaneval()",
  "HumanEval_118_get_closest_vowel": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nget_closest_vowel <- function(word) {\n    if (nchar(word) < 3) {\n        return (\"\")\n    }\n    vowels <- c(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", 'O', 'U', 'I')\n    for (i in (nchar(word)-1):2) {\n        if (substr(word, i, i) %in% vowels) {\n            if (!(substr(word, i-1, i-1) %in% vowels) && !(substr(word, i+1, i+1) %in% vowels)) {\n                return (substr(word, i, i))\n            }\n        }\n    }\n    return (\"\")\n\n}\ntest_humaneval <- function() {\n    candidate <- get_closest_vowel\n    stopifnot(isTRUE(all.equal(candidate('yogurt'), 'u')))\n    stopifnot(isTRUE(all.equal(candidate('full'), 'u')))\n    stopifnot(isTRUE(all.equal(candidate('easy'), '')))\n    stopifnot(isTRUE(all.equal(candidate('eAsy'), '')))\n    stopifnot(isTRUE(all.equal(candidate('ali'), '')))\n    stopifnot(isTRUE(all.equal(candidate('bad'), 'a')))\n    stopifnot(isTRUE(all.equal(candidate('most'), 'o')))\n    stopifnot(isTRUE(all.equal(candidate('ab'), '')))\n    stopifnot(isTRUE(all.equal(candidate('ba'), '')))\n    stopifnot(isTRUE(all.equal(candidate('quick'), '')))\n    stopifnot(isTRUE(all.equal(candidate('anime'), 'i')))\n    stopifnot(isTRUE(all.equal(candidate('Asia'), '')))\n    stopifnot(isTRUE(all.equal(candidate('Above'), 'o')))\n}\ntest_humaneval()",
  "HumanEval_68_pluck": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\npluck <- function(arr) {\n    if (length(arr) == 0) {\n        return (c())\n    } else {\n        evens <- arr[arr %% 2 == 0]\n        if (length(evens) == 0) {\n            return (c())\n        } else {\n            return (c(min(evens), which(arr == min(evens))[1]-1))\n        }\n    }\n\n}\ntest_humaneval <- function() {\n    candidate <- pluck\n    stopifnot(isTRUE(all.equal(candidate(c(4, 2, 3)), c(2, 1))))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3)), c(2, 1))))\n    stopifnot(isTRUE(all.equal(candidate(c()), c())))\n    stopifnot(isTRUE(all.equal(candidate(c(5, 0, 3, 0, 4, 2)), c(0, 1))))\n    stopifnot(isTRUE(all.equal(candidate(c(1, 2, 3, 0, 5, 3)), c(0, 3))))\n    stopifnot(isTRUE(all.equal(candidate(c(5, 4, 8, 4, 8)), c(4, 1))))\n    stopifnot(isTRUE(all.equal(candidate(c(7, 6, 7, 1)), c(6, 1))))\n    stopifnot(isTRUE(all.equal(candidate(c(7, 9, 7, 1)), c())))\n}\ntest_humaneval()",
  "HumanEval_162_string_to_md5": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nstring_to_md5 <- function(text) {\n    if (text == \"\") {\n        return (NULL)\n    } else {\n        return (digest::digest(text, algo = \"md5\", serialize = FALSE))\n    }\n\n}\ntest_humaneval <- function() {\n    candidate <- string_to_md5\n    stopifnot(isTRUE(all.equal(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')))\n    stopifnot(isTRUE(all.equal(candidate(''), NULL)))\n    stopifnot(isTRUE(all.equal(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')))\n    stopifnot(isTRUE(all.equal(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')))\n}\ntest_humaneval()",
  "HumanEval_89_encrypt": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nencrypt <- function(s) {\n    d <- 'abcdefghijklmnopqrstuvwxyz'\n    out <- ''\n    for (c in strsplit(s, \"\")[[1]]) {\n        if (c %in% strsplit(d, \"\")[[1]]) {\n            out <- paste(out, substr(d, (which(strsplit(d, \"\")[[1]] == c) + 4) %% 26, (which(strsplit(d, \"\")[[1]] == c) + 4) %% 26), sep = \"\")\n        } else {\n            out <- paste(out, c, sep = \"\")\n        }\n    }\n    return(out)\n\n}\ntest_humaneval <- function() {\n    candidate <- encrypt\n    stopifnot(isTRUE(all.equal(candidate('hi'), 'lm')))\n    stopifnot(isTRUE(all.equal(candidate('asdfghjkl'), 'ewhjklnop')))\n    stopifnot(isTRUE(all.equal(candidate('gf'), 'kj')))\n    stopifnot(isTRUE(all.equal(candidate('et'), 'ix')))\n    stopifnot(isTRUE(all.equal(candidate('faewfawefaewg'), 'jeiajeaijeiak')))\n    stopifnot(isTRUE(all.equal(candidate('hellomyfriend'), 'lippsqcjvmirh')))\n    stopifnot(isTRUE(all.equal(candidate('dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh'), 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl')))\n    stopifnot(isTRUE(all.equal(candidate('a'), 'e')))\n}\ntest_humaneval()",
  "HumanEval_19_sort_numbers": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsort_numbers <- function(numbers) {\n    value_map <- c(\"zero\" = 0, \"one\" = 1, \"two\" = 2, \"three\" = 3, \"four\" = 4, \"five\" = 5, \"six\" = 6, \"seven\" = 7, \"eight\" = 8, \"nine\" = 9)\n    words <- unlist(strsplit(numbers, \" \"))\n    words <- words[words != \"\"]\n    words <- words[order(sapply(words, function(x) value_map[x]))]\n    return(paste(words, collapse = \" \"))\n\n}\ntest_humaneval <- function() {\n    candidate <- sort_numbers\n    stopifnot(isTRUE(all.equal(candidate(''), '')))\n    stopifnot(isTRUE(all.equal(candidate('three'), 'three')))\n    stopifnot(isTRUE(all.equal(candidate('three five nine'), 'three five nine')))\n    stopifnot(isTRUE(all.equal(candidate('five zero four seven nine eight'), 'zero four five seven eight nine')))\n    stopifnot(isTRUE(all.equal(candidate('six five four three two one zero'), 'zero one two three four five six')))\n}\ntest_humaneval()",
  "HumanEval_121_solution": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\nsolution <- function(lst) {\n  # Use the `sum()` function to sum the elements of a vector.\n  sum(lst[seq_along(lst) %% 2 == 1 & lst %% 2 == 1])\n\n}\ntest_humaneval <- function() {\n    candidate <- solution\n    stopifnot(isTRUE(all.equal(candidate(c(5, 8, 7, 1)), 12)))\n    stopifnot(isTRUE(all.equal(candidate(c(3, 3, 3, 3, 3)), 9)))\n    stopifnot(isTRUE(all.equal(candidate(c(30, 13, 24, 321)), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(5, 9)), 5)))\n    stopifnot(isTRUE(all.equal(candidate(c(2, 4, 8)), 0)))\n    stopifnot(isTRUE(all.equal(candidate(c(30, 13, 23, 32)), 23)))\n    stopifnot(isTRUE(all.equal(candidate(c(3, 13, 2, 9)), 3)))\n}\ntest_humaneval()",
  "HumanEval_79_decimal_to_binary": "library(sets)\nlibrary(stringi)\nsuppressPackageStartupMessages(library(R.utils))\nsuppressPackageStartupMessages(library(stringr))\nsuppressPackageStartupMessages(library(hash))\ndecimal_to_binary <- function(decimal) {\n    return(paste0(\"db\", as.character(intToBin(decimal)), \"db\"))\n\n}\ntest_humaneval <- function() {\ncandidate <- decimal_to_binary\n    if(!(candidate(0) == 'db0db')){quit('no', 1)}\n    if(!(candidate(32) == 'db100000db')){quit('no', 1)}\n    if(!(candidate(103) == 'db1100111db')){quit('no', 1)}\n    if(!(candidate(15) == 'db1111db')){quit('no', 1)}\n}\ntest_humaneval()"
}
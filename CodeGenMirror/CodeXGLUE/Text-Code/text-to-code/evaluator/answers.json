{"code": "int function ( ) { _total = extractList ( ) . size ( ) ; return _total ; }", "nl": "actually walks the bag to make sure the count is correct and resets the running total concode_field_sep Object _current concode_elem_sep int _total concode_elem_sep DefaultMapBag _parent concode_elem_sep Map _map concode_elem_sep int _mods concode_elem_sep Iterator _support concode_field_sep boolean add concode_elem_sep boolean add concode_elem_sep Object next concode_elem_sep boolean containsAll concode_elem_sep boolean containsAll concode_elem_sep void clear concode_elem_sep boolean isEmpty concode_elem_sep boolean hasNext concode_elem_sep void remove concode_elem_sep boolean remove concode_elem_sep boolean remove concode_elem_sep Map getMap concode_elem_sep int modCount concode_elem_sep boolean contains concode_elem_sep Iterator iterator concode_elem_sep boolean removeAll concode_elem_sep int size concode_elem_sep boolean addAll concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep Object[] toArray concode_elem_sep Object[] toArray concode_elem_sep Set uniqueSet concode_elem_sep void setMap concode_elem_sep String toString concode_elem_sep int getCount concode_elem_sep List extractList concode_elem_sep boolean retainAll concode_elem_sep boolean retainAll"}
{"code": "void function ( boolean arg0 ) { fStatementsRecovery = arg0 ; }", "nl": "controls whether the compiler should perform statements recovery . to be effective , this method must be called before any of #getroot , #getastrewrite , #getimportremover . this method has no effect if the target object has been created with #compilationunitrewrite icompilationunit , compilationunit . defaults to true do perform statements recovery . concode_field_sep ImportRewrite fImportRewrite concode_elem_sep ImportRemover fImportRemover concode_elem_sep WorkingCopyOwner fOwner concode_elem_sep ASTRewrite fRewrite concode_elem_sep boolean fStatementsRecovery concode_elem_sep List<TextEditGroup> fTextEditGroups concode_elem_sep ICompilationUnit fCu concode_elem_sep IDocument fRememberContent concode_elem_sep CompilationUnit fRoot concode_elem_sep boolean fResolveBindings concode_elem_sep boolean fBindingsRecovery concode_field_sep void clearASTRewrite concode_elem_sep ASTRewrite getASTRewrite concode_elem_sep void rememberContent concode_elem_sep AST getAST concode_elem_sep void setBindingRecovery concode_elem_sep ImportRemover getImportRemover concode_elem_sep CompilationUnitChange createChange concode_elem_sep org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitChange createChange concode_elem_sep CompilationUnitChange createChange concode_elem_sep CompilationUnitChange createChange concode_elem_sep void clearASTAndImportRewrites concode_elem_sep CompilationUnitChange attachChange concode_elem_sep CategorizedTextEditGroup createCategorizedGroupDescription concode_elem_sep TextEditGroup createGroupDescription concode_elem_sep void setResolveBindings concode_elem_sep ImportRewrite getImportRewrite concode_elem_sep ICompilationUnit getCu concode_elem_sep void clearImportRewrites concode_elem_sep void clearGroupDescriptionEdits concode_elem_sep CompilationUnit getRoot concode_elem_sep boolean isEmptyEdit"}
{"code": "boolean function ( ) { return false ; }", "nl": "override and return true for database updates that produce changed class metadata concode_field_sep String _db4oVersion concode_elem_sep byte _db4oHeaderVersion concode_field_sep String fileName concode_elem_sep String fileName concode_elem_sep String getTempPath concode_elem_sep void runDefrag concode_elem_sep void checkDatabaseFile concode_elem_sep void update concode_elem_sep int db4oMajorVersion concode_elem_sep void checkUpdatedDatabaseFile concode_elem_sep void investigateFileHeaderVersion concode_elem_sep boolean isApplicableForDb4oVersion concode_elem_sep void withDatabase concode_elem_sep void deconfigure concode_elem_sep void setUp concode_elem_sep String fileNamePrefix concode_elem_sep void assertObjectDeletion concode_elem_sep void assertObjectsAreReadable concode_elem_sep String databasePath concode_elem_sep void configureForStore concode_elem_sep void test concode_elem_sep void test concode_elem_sep void deconfigureForStore concode_elem_sep void configure concode_elem_sep void store concode_elem_sep void deconfigureForTest concode_elem_sep void tearDown concode_elem_sep void configureForTest concode_elem_sep void storeObject concode_elem_sep void createDatabase concode_elem_sep void createDatabase concode_elem_sep void assertObjectsAreUpdated concode_elem_sep void updateDatabaseFile concode_elem_sep String oldVersionFileName concode_elem_sep void createDatabaseFor concode_elem_sep byte db4oHeaderVersion concode_elem_sep int db4oMinorVersion concode_elem_sep String[] versionNames concode_elem_sep void runDeletionTests"}
{"code": "String function ( String arg0 ) { return ZKUtil . joinZNode ( getIdentitiesZNode ( ) , arg0 ) ; }", "nl": "get identity znode . concode_field_sep String ENCRYPTION_KEY_NO_ZNODE_NAME concode_elem_sep String KEY_VERSION_ZNODE_NAME concode_elem_sep String PRINCIPAL_NAME_ZNODE_NAME concode_elem_sep String baseZNode concode_elem_sep String CREATED_TIME_ZNODE_NAME concode_elem_sep String KDC_FLAGS_ZNODE_NAME concode_elem_sep String DISABLED_ZNODE_NAME concode_elem_sep String KEYS_ZNODE_NAME concode_elem_sep String IDENTITIES_ZNODE_NAME concode_elem_sep String KEY_ZNODE_NAME concode_elem_sep String EXPIRE_TIME_ZNODE_NAME concode_elem_sep String KEY_TYPE_ZNODE_NAME concode_elem_sep String LOCKED_ZNODE_NAME concode_field_sep String getEncryptionKeyTypeZNode concode_elem_sep String getBaseZNode concode_elem_sep String getDisabledZNode concode_elem_sep String getKeyTypeZNode concode_elem_sep String getEncryptionKeyNoZNode concode_elem_sep String getEncryptionKeyZNode concode_elem_sep String getLockedZNode concode_elem_sep String getCreatedTimeZNode concode_elem_sep String getExpireTimeZNode concode_elem_sep String getKeyVersionZNode concode_elem_sep String getKeysZNode concode_elem_sep String getIdentitiesZNode concode_elem_sep List<String> getIdentityNames concode_elem_sep String getPrincipalNameZnode concode_elem_sep String getKdcFlagsZNode"}
{"code": "int function ( GenVector < C > arg0 ) { if ( ! modul . equals ( arg0 . modul ) ) { return - 1 ; } List < C > loc0 = arg0 . val ; int loc1 = 0 ; for ( C loc2 : val ) { int loc3 = loc2 . compareTo ( loc0 . get ( loc1 ++ ) ) ; if ( loc3 != 0 ) { return loc3 ; } } return 0 ; }", "nl": "compareto , lexicogaphical comparison . concode_field_sep List<C> val concode_elem_sep Logger logger concode_elem_sep GenVectorModul<C> modul concode_field_sep int signum concode_elem_sep GenVector<C> leftLinearCombination concode_elem_sep GenVector<C> rightScalarProduct concode_elem_sep GenVector<C> subtract concode_elem_sep GenVector<C> scalarMultiply concode_elem_sep GenVector<C> sum concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> linearCombination concode_elem_sep GenVector<C> leftScalarMultiply concode_elem_sep C scalarProduct concode_elem_sep GenVector<C> scalarProduct concode_elem_sep GenVector<C> abs concode_elem_sep int hashCode concode_elem_sep GenVector<C> negate concode_elem_sep boolean equals concode_elem_sep GenVector<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString"}
{"code": "void function ( int arg0 , int arg1 ) { fTagPosition = new Region ( arg0 , arg1 ) ; }", "nl": "sets the tag position if one is associated with the nls element . concode_field_sep Region fTagPosition concode_elem_sep String TAG_POSTFIX concode_elem_sep AccessorClassReference fAccessorClassReference concode_elem_sep boolean fIsEclipseNLS concode_elem_sep int TAG_PREFIX_LENGTH concode_elem_sep String TAG_PREFIX concode_elem_sep int fIndex concode_elem_sep int TAG_POSTFIX_LENGTH concode_elem_sep String fValue concode_elem_sep Region fPosition concode_field_sep String getValue concode_elem_sep Region getPosition concode_elem_sep boolean isEclipseNLS concode_elem_sep boolean hasTag concode_elem_sep void setAccessorClassReference concode_elem_sep AccessorClassReference getAccessorClassReference concode_elem_sep void setValue concode_elem_sep String createTagText concode_elem_sep String getTagText concode_elem_sep String toString concode_elem_sep Region getTagPosition"}
{"code": "double function ( UnivariateRealFunction arg0 , double arg1 , double arg2 ) { setup ( arg0 ) ; return factory . newDefaultSolver ( arg0 ) . solve ( arg1 , arg2 ) ; }", "nl": "convenience method to find a zero of a univariate real function . a default solver is used . concode_field_sep UnivariateRealSolverFactory factory concode_field_sep double[] bracket concode_elem_sep double[] bracket concode_elem_sep double midpoint concode_elem_sep void setup"}
{"code": "boolean function ( ) { return Platform . isWindows ( ) || Platform . isOSX ( ) || Platform . JAVA_VERSION < Platform . JAVA_1_3 ; }", "nl": "do we get multiple clicks even when the individual clicks are on different frames ? concode_field_sep boolean gotBug1Event concode_elem_sep java.util.ArrayList bugList concode_field_sep boolean fileDialogRequiresDismiss concode_elem_sep boolean hasHierarchyEventGenerationBug concode_elem_sep boolean hasKeyStrokeGenerationBug concode_elem_sep String[] bugCheck concode_elem_sep boolean hasRobotMotionBug concode_elem_sep boolean reportsIncorrectLockingKeyState concode_elem_sep boolean fileDialogMisreportsBounds concode_elem_sep boolean needsRobotVerification concode_elem_sep boolean hasMenuDisableBug concode_elem_sep boolean hasInputMethodInsteadOfKeyTyped concode_elem_sep boolean hasMissingWindowMouseMotion concode_elem_sep boolean hasEscapeGenerationBug concode_elem_sep boolean showAWTPopupMenuBlocks concode_elem_sep boolean hasChoiceLockupBug concode_elem_sep boolean hasRobotButtonsSwapped concode_elem_sep boolean hasKeyInputDelay concode_elem_sep boolean hasFrameDeiconifyBug concode_elem_sep boolean dragDropRequiresNativeEvents concode_elem_sep boolean hasTextComponentSelectionDelay concode_elem_sep boolean fileDialogRequiresVisibleFrame"}
{"code": "Integer function ( ) { return null == intervalQualifier ? null : intervalQualifier . getFractionalSecondPrecisionPreservingDefault ( ) ; }", "nl": "gets the fractional second precision of the type qualifier of the interval data type descriptor of this field iff interval type . gets the interval type descriptor 's fractional second precision iff interval type . concode_field_sep SqlIntervalQualifier intervalQualifier concode_elem_sep Integer precision concode_elem_sep Boolean isNullable concode_elem_sep String name concode_elem_sep Integer scale concode_elem_sep List<String> workspaceSchemaPath concode_elem_sep List<FieldType> fields concode_elem_sep SqlTypeName type concode_elem_sep String sql concode_field_sep String getName concode_elem_sep String getName concode_elem_sep boolean isDynamic concode_elem_sep List<String> getWorkspaceSchemaPath concode_elem_sep SqlIntervalQualifier getIntervalQualifier concode_elem_sep boolean hasStar concode_elem_sep TimeUnit getEndUnit concode_elem_sep RelDataType getRowType concode_elem_sep Integer getPrecision concode_elem_sep void setSql concode_elem_sep String getSql concode_elem_sep TimeUnit getStartUnit concode_elem_sep List<FieldType> getFields concode_elem_sep Integer getScale concode_elem_sep SqlTypeName getType concode_elem_sep Boolean getIsNullable"}
{"code": "byte [ ] function ( Drawable arg0 ) { return bitmapToByte ( drawableToBitmap ( arg0 ) ) ; }", "nl": "convert drawable to byte array concode_field_sep PlaceHolder placeHolder concode_field_sep Drawable bitmapToDrawable concode_elem_sep void closeInputStream concode_elem_sep Bitmap drawableToBitmap concode_elem_sep Bitmap byteToBitmap concode_elem_sep Bitmap getBitmapFromUrl concode_elem_sep Bitmap getBitmapFromUrl concode_elem_sep Bitmap scaleImage concode_elem_sep byte[] bitmapToByte concode_elem_sep Bitmap scaleImageTo concode_elem_sep Drawable byteToDrawable concode_elem_sep Drawable getDrawableFromUrl concode_elem_sep Drawable getDrawableFromUrl concode_elem_sep InputStream getInputStreamFromUrl concode_elem_sep InputStream getInputStreamFromUrl"}
{"code": "void function ( ) { migrationDone = false ; }", "nl": "resets migration flag . should only be used in tests . concode_field_sep String APP_PREFS_NAME concode_elem_sep String PROFILE_PREFS_NAME_PREFIX concode_elem_sep String[] PROFILE_MIGRATIONS_0_TO_1 concode_elem_sep EnumSet<Flags> disableMigrations concode_elem_sep boolean migrationDone concode_elem_sep int PREFS_VERSION concode_elem_sep String LOGTAG concode_elem_sep String PREFS_VERSION_KEY concode_field_sep int getVersion concode_elem_sep void migrateIfNecessary concode_elem_sep SharedPreferences forApp concode_elem_sep SharedPreferences forApp concode_elem_sep Editor migrateFromPreferenceManager concode_elem_sep void performMigration concode_elem_sep SharedPreferences forProfile concode_elem_sep SharedPreferences forProfile concode_elem_sep SharedPreferences forProfileName concode_elem_sep SharedPreferences forProfileName concode_elem_sep void putEntry"}
{"code": "void function ( ) { }", "nl": "comment f1z concode_field_sep int I1z concode_elem_sep int I2z concode_elem_sep int I1 concode_elem_sep int I3 concode_elem_sep int I2 concode_elem_sep int I4 concode_field_sep void fz concode_elem_sep void f concode_elem_sep void f11 concode_elem_sep void f1 concode_elem_sep void f2"}
{"code": "Dialog function ( RefactoringStatus arg0 , Shell arg1 , String arg2 , boolean arg3 ) { return new RefactoringStatusDialog ( arg0 , arg1 , arg2 , arg3 ) ; }", "nl": "creates a dialog to present a refactoringstatus to the user . thefollowing values are returned from the dialogs open method : org.eclipse.jface.dialogs.idialogconstants #ok_id idialogconstants #ok_id : if the user has pressed the continue button . org.eclipse.jface.dialogs.idialogconstants #cancel_id idialogconstants #cancel_id : if the user has pressed the cancel button . org.eclipse.jface.dialogs.idialogconstants #back_id idialogconstants #back_id : if the user has pressed the back button . concode_field_sep PlaceHolder placeHolder concode_field_sep Dialog createRefactoringWizardDialog concode_elem_sep Composite createRefactoringHistoryControl concode_elem_sep Composite createSortableRefactoringHistoryControl concode_elem_sep PerformChangeOperation createUIAwareChangeOperation concode_elem_sep Dialog createLightWeightStatusDialog"}
{"code": "BaseColor function ( ) { return strokeColor ; }", "nl": "gets the current stroke color concode_field_sep boolean knockout concode_elem_sep LineDashPattern lineDashPattern concode_elem_sep BaseColor fillColor concode_elem_sep float wordSpacing concode_elem_sep float leading concode_elem_sep BaseColor strokeColor concode_elem_sep int lineJoinStyle concode_elem_sep float miterLimit concode_elem_sep int lineCapStyle concode_elem_sep float lineWidth concode_elem_sep int renderMode concode_elem_sep PdfName colorSpaceFill concode_elem_sep PdfName colorSpaceStroke concode_elem_sep float fontSize concode_elem_sep float rise concode_elem_sep Matrix ctm concode_elem_sep float horizontalScaling concode_elem_sep float characterSpacing concode_elem_sep CMapAwareDocumentFont font concode_field_sep float getFontSize concode_elem_sep int getRenderMode concode_elem_sep void setLineDashPattern concode_elem_sep int getLineJoinStyle concode_elem_sep PdfName getColorSpaceStroke concode_elem_sep float getCharacterSpacing concode_elem_sep void setLineWidth concode_elem_sep Matrix getCtm concode_elem_sep void setLineCapStyle concode_elem_sep PdfName getColorSpaceFill concode_elem_sep float getMiterLimit concode_elem_sep float getLineWidth concode_elem_sep float getWordSpacing concode_elem_sep boolean isKnockout concode_elem_sep BaseColor getFillColor concode_elem_sep CMapAwareDocumentFont getFont concode_elem_sep void setMiterLimit concode_elem_sep float getRise concode_elem_sep int getLineCapStyle concode_elem_sep float getLeading concode_elem_sep LineDashPattern getLineDashPattern concode_elem_sep float getHorizontalScaling concode_elem_sep void setLineJoinStyle"}
{"code": "void function ( ) { SecurityConfiguration . getApplicationPolicy ( \"srini_string\" ) ; }", "nl": "test method for org.jboss.security.config.securityconfiguration #getapplicationpolicy java.lang.string . concode_field_sep PlaceHolder placeHolder concode_field_sep void testGetCipherAlgorithm concode_elem_sep void testSetIterationCount concode_elem_sep void testGetKeyStoreURL concode_elem_sep void testGetSalt concode_elem_sep void testGetTrustStoreType concode_elem_sep void testGetKeyStoreType concode_elem_sep void testSetTrustStoreURL concode_elem_sep void testSetKeyStoreURL concode_elem_sep void testSetSalt concode_elem_sep void testLoadPassword concode_elem_sep void testSetCipherSpec concode_elem_sep void testGetExternalPasswordCacheInstance concode_elem_sep void testSetKeyStoreType concode_elem_sep void testIsDeepCopySubjectMode concode_elem_sep void testGetKeyStorePass concode_elem_sep WebArchive deployment concode_elem_sep void testSetTrustStorePass concode_elem_sep void testGetTrustStorePass concode_elem_sep void testSetCipherAlgorithm concode_elem_sep void testSetTrustStoreType concode_elem_sep void testGetTrustStoreURL concode_elem_sep void testSetDeepCopySubjectMode concode_elem_sep void testGetCipherSpec concode_elem_sep void testAddApplicationPolicy concode_elem_sep void testSetKeyStorePass concode_elem_sep void testRemoveApplicationPolicy concode_elem_sep void testSetCipherKey concode_elem_sep void testGetIterationCount concode_elem_sep void testGetCipherKey"}
{"code": "Transformer [ ] function ( Transformer [ ] arg0 ) { if ( arg0 == null ) { return null ; } return ( Transformer [ ] ) arg0 . clone ( ) ; }", "nl": "copy method concode_field_sep PlaceHolder placeHolder concode_field_sep void validateMin2 concode_elem_sep void validate concode_elem_sep Predicate[] validate concode_elem_sep void validate concode_elem_sep void validate"}
{"code": "int function ( ) { return this . getMarcador ( ) ; }", "nl": "abre el libro y retorna el marcador con la pagina actual concode_field_sep String dimensiones concode_elem_sep int numeroPaginas concode_elem_sep String titulo concode_elem_sep String colorPortada concode_elem_sep String autor concode_elem_sep int marcador concode_field_sep void setColorPortada concode_elem_sep void setDimensiones concode_elem_sep String getColorPortada concode_elem_sep String getAutor concode_elem_sep void setTitulo concode_elem_sep int cerrar concode_elem_sep String getTitulo concode_elem_sep void setNumeroPaginas concode_elem_sep int getNumeroPaginas concode_elem_sep int leer concode_elem_sep String getDimensiones concode_elem_sep void setMarcador concode_elem_sep int escribir concode_elem_sep void setAutor concode_elem_sep Libro clone concode_elem_sep String toString concode_elem_sep int getMarcador"}
{"code": "IJavaElement function ( JavaEditor arg0 , boolean arg1 ) { ITypeRoot loc0 = getInput ( arg0 , arg1 ) ; if ( loc0 != null ) return getElementAtOffset ( loc0 , ( ITextSelection ) arg0 . getSelectionProvider ( ) . getSelection ( ) ) ; return null ; }", "nl": "returns the element surrounding the selection of the given editor . concode_field_sep IJavaElement[] EMPTY_RESULT concode_field_sep IJavaElement selectJavaElement concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] codeResolve concode_elem_sep IJavaElement[] performForkedCodeResolve concode_elem_sep boolean canOperateOn concode_elem_sep IStructuredSelection getStructuredSelection concode_elem_sep IClassFile getInputAsClassFile concode_elem_sep IJavaElement[] codeResolveForked concode_elem_sep ITypeRoot getInput concode_elem_sep ITypeRoot getInput concode_elem_sep IType getTypeAtOffset concode_elem_sep IJavaElement[] codeResolveOrInputForked concode_elem_sep ICompilationUnit getInputAsCompilationUnit concode_elem_sep IJavaElement[] getElements concode_elem_sep IJavaElement resolveEnclosingElement concode_elem_sep IJavaElement resolveEnclosingElement"}
{"code": "LoadPlan function ( LoadPlanBuildingAssociationVisitationStrategy arg0 , EntityPersister arg1 ) { MetamodelGraphWalker . visitEntity ( arg0 , arg1 ) ; return arg0 . buildLoadPlan ( ) ; }", "nl": "coordinates building a loadplan that defines just a single root entity return may have fetches . typically this includes building load plans for entity loading or cascade loading . concode_field_sep PlaceHolder placeHolder concode_field_sep LoadPlan buildRootCollectionLoadPlan"}
{"code": "HG function ( HG arg0 ) { MathVector loc0 = new MathVector ( ) ; loc0 . subtraction ( pos , arg0 . pos0 ) ; double loc1 = loc0 . dotProduct ( ) + ( EPS * EPS ) ; double loc2 = Math . sqrt ( loc1 ) ; double loc3 = mass / loc2 ; arg0 . phi0 -= loc3 ; double loc4 = loc3 / loc1 ; loc0 . multScalar ( loc4 ) ; arg0 . acc0 . addition ( loc0 ) ; return arg0 ; }", "nl": "compute a single body-body or body-cell interaction concode_field_sep MathVector acc0 concode_elem_sep MathVector pos concode_elem_sep double mass concode_elem_sep int IMAX concode_elem_sep MathVector pos0 concode_elem_sep double phi0 concode_elem_sep double EPS concode_elem_sep Body pskip concode_field_sep Node loadTree concode_elem_sep int oldSubindex concode_elem_sep String toString concode_elem_sep double hackcofm concode_elem_sep HG walkSubTree"}
{"code": "void function ( String arg0 ) { this . catalogName = arg0 ; }", "nl": "set the name of the catalog to be searched , ornull to search the default catalog . concode_field_sep String name concode_elem_sep String catalogName concode_elem_sep boolean optional concode_elem_sep String nameKey concode_field_sep void setName concode_elem_sep String getNameKey concode_elem_sep String getName concode_elem_sep void setNameKey concode_elem_sep String getCatalogName concode_elem_sep boolean postprocess concode_elem_sep Command getCommand concode_elem_sep boolean isOptional concode_elem_sep boolean execute concode_elem_sep void setOptional"}
{"code": "ColumnValues < T > function ( int arg0 ) { return new ColumnValues < T > ( columns [ arg0 ] ) ; }", "nl": "return an iterator over values in a column . concode_field_sep ColumnFileMetaData metaData concode_elem_sep Map<String,ColumnDescriptor> columnsByName concode_elem_sep Input file concode_elem_sep ColumnDescriptor[] columns concode_elem_sep long rowCount concode_elem_sep int columnCount concode_field_sep ColumnMetaData[] getColumnMetaData concode_elem_sep ColumnMetaData getColumnMetaData concode_elem_sep ColumnMetaData getColumnMetaData concode_elem_sep long getRowCount concode_elem_sep List<ColumnMetaData> getRoots concode_elem_sep void readColumnMetaData concode_elem_sep void readColumnStarts concode_elem_sep ColumnDescriptor<T> getColumn concode_elem_sep long getColumnCount concode_elem_sep ColumnFileMetaData getMetaData concode_elem_sep void readHeader concode_elem_sep void readMagic concode_elem_sep void close"}
{"code": "void function ( State arg0 ) { setSyncResultSoftError ( ) ; latch . offer ( Result . Error ) ; }", "nl": "when the login machine terminates , we might not be in the married state , and therefore we ca n't sync . this method messages as much to the user . to avoid stopping us syncing altogether , we set a soft error rather than a hard error . in future , we would like to set a hard error if we are in , for example , the separated state , and then have some user initiated activity mark the android account as ready to sync again . this is tricky , though , so we play it safe for now . concode_field_sep BlockingQueue<Result> latch concode_elem_sep SyncResult syncResult concode_field_sep void setSyncResultSuccess concode_elem_sep void postponeSync concode_elem_sep void setSyncResultSoftError concode_elem_sep void handleError concode_elem_sep void handleSuccess concode_elem_sep void rejectSync concode_elem_sep void setSyncResultHardError"}
{"code": "IMember function ( IMember arg0 ) { final LinkedList < IMember > loc0 = new LinkedList < > ( ) ; addElements ( arg0 , loc0 ) ; final IMember [ ] loc1 = convertElements ( loc0 . toArray ( new IMember [ 0 ] ) ) ; return loc1 [ loc1 . length - 1 ] ; }", "nl": "converts the handle . handle need not exist , but must be a source reference . concode_field_sep IType fOldType concode_elem_sep IType fNewType concode_elem_sep Map<IJavaElement,String> fRefactoredSimilarElements concode_field_sep IMember resolveTypeInMember concode_elem_sep String resolveTypeName concode_elem_sep IMember[] convertElements concode_elem_sep void addElements concode_elem_sep String[] resolveParameterTypes concode_elem_sep String resolveElementName concode_elem_sep String replaceAll"}
{"code": "Rational function ( int arg0 ) { VideoTrack loc0 = tracks . get ( arg0 ) ; return new Rational ( loc0 . count , 30 ) ; }", "nl": "returns the sampleduration of the track in seconds . concode_field_sep Buffer outputBuffer concode_elem_sep Codec codec concode_elem_sep Buffer inputBuffer concode_elem_sep ArrayList<VideoTrack> tracks concode_elem_sep String nameFormat concode_elem_sep Format videoFormat concode_elem_sep int count concode_elem_sep int width concode_elem_sep Format fileFormat concode_elem_sep File dir concode_elem_sep int height concode_field_sep boolean isVFRSupported concode_elem_sep Format getFileFormat concode_elem_sep boolean isEmpty concode_elem_sep void writeSamples concode_elem_sep int getTrackCount concode_elem_sep int addTrack concode_elem_sep int addVideoTrack concode_elem_sep void writeSample concode_elem_sep boolean isDataLimitReached concode_elem_sep Format getFormat concode_elem_sep void createCodec concode_elem_sep void write concode_elem_sep void write concode_elem_sep void close"}
{"code": "void function ( ) { int loc0 = rand . nextInt ( size ) ; int loc1 = rand . nextInt ( size ) ; log . debug ( \"srini_string\" + Simulator . getCurrentTime ( ) + \"srini_string\" + loc0 + \"srini_string\" + loc1 ) ; keyPopularity . add ( loc1 , keyPopularity . remove ( loc0 ) ) ; getKeyForLookup ( ) ; }", "nl": "does a popularity reorder on this document set . concode_field_sep boolean configured concode_elem_sep Distribution reorderIntvlDist concode_elem_sep boolean useRanks concode_elem_sep double zipfExp concode_elem_sep long meanReorderIntvl concode_elem_sep RandomGenerator rand concode_elem_sep String name concode_elem_sep ZipfDistribution dist concode_elem_sep int startRank concode_elem_sep Logger log concode_elem_sep List<Integer> keyPopularity concode_elem_sep int size concode_field_sep void setName concode_elem_sep String getName concode_elem_sep int getKeyForPublish concode_elem_sep void checkConfigure concode_elem_sep void setMeanReorderIntvl concode_elem_sep void setZipfExp concode_elem_sep void configure concode_elem_sep int getSize concode_elem_sep boolean containsResourcesOf concode_elem_sep void setSize concode_elem_sep Distribution getReorderDistribution concode_elem_sep int getKeyForLookup concode_elem_sep void setBeginRank"}
{"code": "List function ( ) { return list ; }", "nl": "gets the child scripts that make up this block . this list is live so that it can be modified if requried concode_field_sep List list concode_field_sep void addScript concode_elem_sep Script compile concode_elem_sep void trimWhitespace concode_elem_sep String toString concode_elem_sep void run concode_elem_sep void removeScript"}
{"code": "boolean function ( @ NotNull ResourceEntity arg0 , @ NotNull ReleaseEntity arg1 ) { return arg0 . equals ( getResourceEntityForRelease ( arg0 . getResourceGroup ( ) , arg1 ) ) ; }", "nl": "analyzes if the given resource is the best matching for the given release . returns true if so , false otherwise . concode_field_sep ResourceReleaseComparator resourceReleaseComparator concode_field_sep List<ResourceEntity> getAllFutureReleases concode_elem_sep int compare concode_elem_sep boolean isBestMatchingPastReleaseTime concode_elem_sep Set<ResourceEntity> getResourceEntitiesByRelease concode_elem_sep Boolean isBestMatchingFutureReleaseTime concode_elem_sep Set<ConsumedResourceRelationEntity> getConsumedMasterRelationsForRelease concode_elem_sep Set<ProvidedResourceRelationEntity> getProvidedMasterRelationsForRelease concode_elem_sep Set<ResourceEntity> getConsumedRelatedResourcesByResourceType concode_elem_sep Set<ProvidedResourceRelationEntity> getProvidedSlaveRelationsForRelease concode_elem_sep ReleaseEntity findMostRelevantRelease concode_elem_sep ResourceEntity getResourceEntityForRelease concode_elem_sep ResourceEntity getResourceEntityForRelease concode_elem_sep ResourceEntity findMostRelevantResource"}
{"code": "URI function ( ) { return uri ; }", "nl": "get the docker rest uri . concode_field_sep String address concode_elem_sep int port concode_elem_sep String host concode_elem_sep String DEFAULT_HOST concode_elem_sep String DEFAULT_UNIX_ENDPOINT concode_elem_sep int DEFAULT_PORT concode_elem_sep URI uri concode_elem_sep String dockerCertPath concode_field_sep int defaultPort concode_elem_sep DockerHost fromEnv concode_elem_sep String address concode_elem_sep int port concode_elem_sep String host concode_elem_sep DockerHost from concode_elem_sep String toString concode_elem_sep String dockerCertPath"}
{"code": "Getcontentlanguage function ( ) { return getcontentlanguage ; }", "nl": "gets the value of the getcontentlanguage property . concode_field_sep Owner owner concode_elem_sep PrincipalURL principalURL concode_elem_sep Creationdate creationdate concode_elem_sep Getlastmodified getlastmodified concode_elem_sep Getcontentlanguage getcontentlanguage concode_elem_sep Getetag getetag concode_elem_sep Getcontentlength getcontentlength concode_elem_sep SupportedReportSet supportedReportSet concode_elem_sep Acl acl concode_elem_sep PrincipalCollectionSet principalCollectionSet concode_elem_sep Resourcetype resourcetype concode_elem_sep List<Element> any concode_elem_sep QuotaUsedBytes quotaUsedBytes concode_elem_sep Lockdiscovery lockdiscovery concode_elem_sep QuotaAvailableBytes quotaAvailableBytes concode_elem_sep Getcontenttype getcontenttype concode_elem_sep Displayname displayname concode_elem_sep Supportedlock supportedlock concode_elem_sep Group group concode_field_sep PrincipalCollectionSet getPrincipalCollectionSet concode_elem_sep Creationdate getCreationdate concode_elem_sep void setCreationdate concode_elem_sep void setQuotaAvailableBytes concode_elem_sep Getcontentlength getGetcontentlength concode_elem_sep Displayname getDisplayname concode_elem_sep void setGetcontenttype concode_elem_sep void setAcl concode_elem_sep Owner getOwner concode_elem_sep Getlastmodified getGetlastmodified concode_elem_sep Supportedlock getSupportedlock concode_elem_sep void setLockdiscovery concode_elem_sep void setOwner concode_elem_sep SupportedReportSet getSupportedReportSet concode_elem_sep void setSupportedReportSet concode_elem_sep void setSupportedlock concode_elem_sep void setPrincipalCollectionSet concode_elem_sep QuotaUsedBytes getQuotaUsedBytes concode_elem_sep Acl getAcl concode_elem_sep void setQuotaUsedBytes concode_elem_sep void setPrincipalURL concode_elem_sep PrincipalURL getPrincipalURL concode_elem_sep void setGetetag concode_elem_sep Resourcetype getResourcetype concode_elem_sep void setResourcetype concode_elem_sep Getetag getGetetag concode_elem_sep void setGroup concode_elem_sep Getcontenttype getGetcontenttype concode_elem_sep Group getGroup concode_elem_sep void setGetcontentlanguage concode_elem_sep Lockdiscovery getLockdiscovery concode_elem_sep void setGetlastmodified concode_elem_sep QuotaAvailableBytes getQuotaAvailableBytes concode_elem_sep void setDisplayname concode_elem_sep void setGetcontentlength concode_elem_sep List<Element> getAny"}
{"code": "boolean function ( ) { return coalescing ; }", "nl": "indicates whether or not the factory is configured to produce parsers which converts cdata nodes to text nodes and appends it to the adjacent if any text node . concode_field_sep boolean validating concode_elem_sep boolean namespaceAware concode_elem_sep boolean whitespace concode_elem_sep boolean expandEntityRef concode_elem_sep boolean coalescing concode_elem_sep boolean ignoreComments concode_field_sep void setCoalescing concode_elem_sep boolean isIgnoringElementContentWhitespace concode_elem_sep void setIgnoringElementContentWhitespace concode_elem_sep boolean isNamespaceAware concode_elem_sep void setNamespaceAware concode_elem_sep DocumentBuilderFactory newInstance concode_elem_sep boolean isValidating concode_elem_sep void setAttribute concode_elem_sep Object getAttribute concode_elem_sep boolean isExpandEntityReferences concode_elem_sep DocumentBuilder newDocumentBuilder concode_elem_sep void setValidating concode_elem_sep void setIgnoringComments concode_elem_sep void setExpandEntityReferences concode_elem_sep boolean isIgnoringComments"}
{"code": "int function ( ) { return this . leased ; }", "nl": "gets the number of persistent connections tracked by the connection manager currently being used to execute requests . the total number of connections in the pool is equal to available plus leased . concode_field_sep int leased concode_elem_sep int max concode_elem_sep int pending concode_elem_sep int available concode_field_sep int getMax concode_elem_sep String toString concode_elem_sep int getPending concode_elem_sep int getAvailable"}
{"code": "void function ( Object arg0 , Throwable arg1 ) { if ( is12 ) { getLogger ( ) . log ( FQCN , ( Priority ) Level . ERROR , arg0 , arg1 ) ; } else { getLogger ( ) . log ( FQCN , Level . ERROR , arg0 , arg1 ) ; } }", "nl": "log an error to the log4j logger with error priority . concode_field_sep String name concode_elem_sep boolean is12 concode_elem_sep Logger logger concode_elem_sep String FQCN concode_field_sep void warn concode_elem_sep void warn concode_elem_sep void trace concode_elem_sep void trace concode_elem_sep void debug concode_elem_sep void debug concode_elem_sep boolean isInfoEnabled concode_elem_sep boolean isErrorEnabled concode_elem_sep Logger getLogger concode_elem_sep boolean isTraceEnabled concode_elem_sep boolean isWarnEnabled concode_elem_sep boolean isDebugEnabled concode_elem_sep boolean isFatalEnabled concode_elem_sep void fatal concode_elem_sep void fatal concode_elem_sep void info concode_elem_sep void info"}
{"code": "Element function ( Node arg0 , String arg1 ) { NodeList loc0 = arg0 . getChildNodes ( ) ; for ( int loc1 = 0 ; loc1 < loc0 . getLength ( ) ; loc1 ++ ) { Node loc2 = loc0 . item ( loc1 ) ; if ( loc2 . getNodeType ( ) == Node . ELEMENT_NODE && arg1 . equals ( loc2 . getNodeName ( ) ) ) return ( Element ) loc2 ; } return null ; }", "nl": "returns the first child element of a node that matches the given tag name . concode_field_sep PlaceHolder placeHolder concode_field_sep List<Element> getAllChildElemsMatching"}
{"code": "String function ( ) { return fcLink ; }", "nl": "gets the value of the fclink property . concode_field_sep String fcLink concode_elem_sep String localPortID concode_elem_sep String displayName concode_elem_sep String fcKey concode_elem_sep ProvidedPortID id concode_elem_sep List<PropertyDeclaration> properties concode_elem_sep String resourceType concode_field_sep String getFcKey concode_elem_sep String getDisplayName concode_elem_sep List<PropertyDeclaration> getProperties concode_elem_sep void setFcKey concode_elem_sep String getResourceType concode_elem_sep void setFcLink concode_elem_sep String getLocalPortID concode_elem_sep void setResourceType concode_elem_sep void setId concode_elem_sep ProvidedPortID getId concode_elem_sep void setLocalPortID concode_elem_sep void setDisplayName"}
{"code": "boolean function ( ) { return ( type == DICTIONARY ) ; }", "nl": "checks if this pdfobject is of the type pdfdictionary . concode_field_sep int INDIRECT concode_elem_sep int STRING concode_elem_sep int DICTIONARY concode_elem_sep int NULL concode_elem_sep int NUMBER concode_elem_sep int type concode_elem_sep int NAME concode_elem_sep String NOTHING concode_elem_sep int BOOLEAN concode_elem_sep int ARRAY concode_elem_sep byte[] bytes concode_elem_sep String TEXT_UNICODE concode_elem_sep String TEXT_PDFDOCENCODING concode_elem_sep PRIndirectReference indRef concode_elem_sep int STREAM concode_field_sep void toPdf concode_elem_sep void setContent concode_elem_sep void setIndRef concode_elem_sep int length concode_elem_sep boolean isStream concode_elem_sep PRIndirectReference getIndRef concode_elem_sep int type concode_elem_sep byte[] getBytes concode_elem_sep boolean isBoolean concode_elem_sep boolean isName concode_elem_sep boolean isNumber concode_elem_sep boolean isNull concode_elem_sep boolean isString concode_elem_sep String toString concode_elem_sep boolean canBeInObjStm concode_elem_sep boolean isArray concode_elem_sep boolean isIndirect"}
{"code": "void function ( int arg0 ) { this . n = arg0 ; }", "nl": "set removed pair number . concode_field_sep boolean useCriterion4 concode_elem_sep ColorPolynomial<C> pi concode_elem_sep int i concode_elem_sep ColorPolynomial<C> pj concode_elem_sep int j concode_elem_sep boolean useCriterion3 concode_elem_sep int n concode_elem_sep boolean toZero concode_field_sep int getPairNumber concode_elem_sep int hashCode concode_elem_sep void setUseCriterion3 concode_elem_sep boolean equals concode_elem_sep boolean getUseCriterion3 concode_elem_sep void setZero concode_elem_sep boolean isZero concode_elem_sep void setUseCriterion4 concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep boolean getUseCriterion4"}
{"code": "List < GenSolvablePolynomial < C >> function ( int arg0 , List < GenSolvablePolynomial < C >> arg1 ) { return sbb . twosidedGB ( arg0 , arg1 ) ; }", "nl": "twosided groebner base using pairlist class . concode_field_sep SolvableGroebnerBase<C> sbb concode_elem_sep boolean debug concode_elem_sep Logger logger concode_field_sep List<GenSolvablePolynomial<C>> leftGB concode_elem_sep ModuleList<C> leftGB concode_elem_sep boolean isTwosidedGB concode_elem_sep boolean isTwosidedGB concode_elem_sep List<GenSolvablePolynomial<C>> rightGB concode_elem_sep ModuleList<C> rightGB concode_elem_sep boolean isLeftGB concode_elem_sep boolean isLeftGB concode_elem_sep boolean isRightGB concode_elem_sep boolean isRightGB"}
{"code": "void function ( boolean arg0 ) { fResolveBindings = arg0 ; }", "nl": "controls whether the compiler should provide binding information for the ast nodes it creates . to be effective , this method must be called before any of #getroot , #getastrewrite , #getimportremover . this method has no effect if the target object has been created with #compilationunitrewrite icompilationunit , compilationunit . defaults to true do resolve bindings . concode_field_sep ImportRewrite fImportRewrite concode_elem_sep ImportRemover fImportRemover concode_elem_sep WorkingCopyOwner fOwner concode_elem_sep ASTRewrite fRewrite concode_elem_sep boolean fStatementsRecovery concode_elem_sep List<TextEditGroup> fTextEditGroups concode_elem_sep ICompilationUnit fCu concode_elem_sep IDocument fRememberContent concode_elem_sep CompilationUnit fRoot concode_elem_sep boolean fResolveBindings concode_elem_sep boolean fBindingsRecovery concode_field_sep void clearASTRewrite concode_elem_sep ASTRewrite getASTRewrite concode_elem_sep void rememberContent concode_elem_sep AST getAST concode_elem_sep void setBindingRecovery concode_elem_sep void setStatementsRecovery concode_elem_sep ImportRemover getImportRemover concode_elem_sep CompilationUnitChange createChange concode_elem_sep org.eclipse.jdt.internal.corext.refactoring.changes.CompilationUnitChange createChange concode_elem_sep CompilationUnitChange createChange concode_elem_sep CompilationUnitChange createChange concode_elem_sep void clearASTAndImportRewrites concode_elem_sep CompilationUnitChange attachChange concode_elem_sep CategorizedTextEditGroup createCategorizedGroupDescription concode_elem_sep TextEditGroup createGroupDescription concode_elem_sep ImportRewrite getImportRewrite concode_elem_sep ICompilationUnit getCu concode_elem_sep void clearImportRewrites concode_elem_sep void clearGroupDescriptionEdits concode_elem_sep CompilationUnit getRoot concode_elem_sep boolean isEmptyEdit"}
{"code": "void function ( int arg0 ) { int [ ] loc0 = extractKeys ( arg0 ) ; for ( int loc1 = loc0 . length - 1 ; loc1 >= 0 ; -- loc1 ) doKeyUp ( loc0 [ loc1 ] ) ; }", "nl": "dispatch a keyup event . concode_field_sep Point pointT concode_elem_sep abbot.swt.Robot _robot concode_field_sep void robotKeyClick concode_elem_sep void doKeyDown concode_elem_sep void doKeyUp concode_elem_sep void mouseMove concode_elem_sep void mouseMove concode_elem_sep void mouseDown concode_elem_sep abbot.swt.Robot getAbbotRobot concode_elem_sep void mouseDoubleClick concode_elem_sep void pause concode_elem_sep boolean needsShift concode_elem_sep int[] extractKeys concode_elem_sep void mouseUp concode_elem_sep void keyClick concode_elem_sep void keyClick concode_elem_sep void keyDown concode_elem_sep void keyDown concode_elem_sep Event createClickEvent concode_elem_sep void enterText"}
{"code": "Local < C > function ( ) { return new Local < C > ( ring , num . abs ( ) , den , true ) ; }", "nl": "local absolute value . concode_field_sep Logger logger concode_elem_sep LocalRing<C> ring concode_elem_sep boolean debug concode_elem_sep C num concode_elem_sep int isunit concode_elem_sep C den concode_field_sep int signum concode_elem_sep boolean isONE concode_elem_sep Local<C> inverse concode_elem_sep boolean isUnit concode_elem_sep Local<C> subtract concode_elem_sep Local<C> gcd concode_elem_sep Local<C> sum concode_elem_sep int compareTo concode_elem_sep Local<C>[] egcd concode_elem_sep int hashCode concode_elem_sep Local<C> negate concode_elem_sep boolean equals concode_elem_sep Local<C> clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep Local<C> divide concode_elem_sep Local<C> multiply concode_elem_sep Local<C> remainder"}
{"code": "boolean function ( Object arg0 , Object arg1 ) { return arg0 == arg1 || ( arg0 == null ? arg1 == null : arg0 . equals ( arg1 ) ) ; }", "nl": "compare two object concode_field_sep PlaceHolder placeHolder concode_field_sep String nullStrToEmpty concode_elem_sep Long[] transformLongArray concode_elem_sep long[] transformLongArray concode_elem_sep int compare concode_elem_sep Integer[] transformIntArray concode_elem_sep int[] transformIntArray"}
{"code": "void function ( ) { Arrays . fill ( probes , false ) ; }", "nl": "sets all probes to false . concode_field_sep String name concode_elem_sep boolean[] probes concode_elem_sep long id concode_field_sep String getName concode_elem_sep void merge concode_elem_sep void merge concode_elem_sep boolean[] getProbes concode_elem_sep long getId concode_elem_sep String toString concode_elem_sep void assertCompatibility"}
{"code": "ProvidedPortID function ( ) { return new ProvidedPortID ( ) ; }", "nl": "create an instance of providedportid concode_field_sep QName _PropertyDeclaration_QNAME concode_elem_sep QName _ProvidedPort_QNAME concode_elem_sep QName _ApplicationPayload_QNAME concode_elem_sep QName _Application_QNAME concode_elem_sep QName _ApplicationID_QNAME concode_elem_sep QName _ApplicationReleaseBinding_QNAME concode_elem_sep QName _ConsumedPort_QNAME concode_elem_sep QName _ProvidedPortID_QNAME concode_field_sep ConsumedPort createConsumedPort concode_elem_sep JAXBElement<ConsumedPort> createConsumedPort concode_elem_sep ApplicationPayload createApplicationPayload concode_elem_sep JAXBElement<ApplicationPayload> createApplicationPayload concode_elem_sep ApplicationReleaseBinding createApplicationReleaseBinding concode_elem_sep JAXBElement<ApplicationReleaseBinding> createApplicationReleaseBinding concode_elem_sep Application createApplication concode_elem_sep JAXBElement<Application> createApplication concode_elem_sep PropertyDeclaration createPropertyDeclaration concode_elem_sep JAXBElement<PropertyDeclaration> createPropertyDeclaration concode_elem_sep ApplicationID createApplicationID concode_elem_sep JAXBElement<ApplicationID> createApplicationID concode_elem_sep ProvidedPort createProvidedPort concode_elem_sep JAXBElement<ProvidedPort> createProvidedPort"}
{"code": "void function ( final ISourceFileLocator arg0 ) { delegates . add ( arg0 ) ; }", "nl": "adds the given locator . locators are queried in the sequence they have been added . concode_field_sep int tabWidth concode_elem_sep List<ISourceFileLocator> delegates concode_field_sep int getTabWidth concode_elem_sep Reader getSourceFile"}
{"code": "UnivPowerSeries < C > function ( java . math . BigInteger arg0 ) { return ONE . multiply ( coFac . fromInteger ( arg0 ) ) ; }", "nl": "get a constant univpowerseries from a java.math.biginteger . concode_field_sep UnivPowerSeries<C> ZERO concode_elem_sep String DEFAULT_NAME concode_elem_sep int truncate concode_elem_sep String var concode_elem_sep int DEFAULT_TRUNCATE concode_elem_sep UnivPowerSeries<C> ONE concode_elem_sep RingFactory<C> coFac concode_elem_sep Random random concode_field_sep UnivPowerSeries<C> getTAN concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep UnivPowerSeries<C> getSIN concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> parse concode_elem_sep UnivPowerSeries<C> fromPolynomial concode_elem_sep java.math.BigInteger characteristic concode_elem_sep UnivPowerSeries<C> getEXP concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep UnivPowerSeries<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep UnivPowerSeries<C> getONE concode_elem_sep UnivPowerSeries<C> getZERO concode_elem_sep UnivPowerSeries<C> getCOS concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep UnivPowerSeries<C> copy concode_elem_sep UnivPowerSeries<C> fixPoint"}
{"code": "void function ( final Shell arg0 ) { Robot . syncExec ( arg0 . getDisplay ( ) , null , new Runnable ( ) { public void run ( ) { arg0 . forceActive ( ) ; arg0 . setFocus ( ) ; } } ) ; Robot . waitForIdle ( arg0 . getDisplay ( ) ) ; }", "nl": "brings the passed shell to the top of the drawing order so that it receives keyboard focus . concode_field_sep String copyright concode_field_sep IWorkbenchWindow getWorkbenchWindow concode_elem_sep void bringWorkbenchToFront concode_elem_sep IWorkbench getWorkbench"}
{"code": "Limit function ( ) { final Limit loc0 = new Limit ( ) ; this . limits . add ( loc0 ) ; return loc0 ; }", "nl": "creates and adds a new limit . concode_field_sep WildcardMatcher excludesMatcher concode_elem_sep String excludes concode_elem_sep String includes concode_elem_sep WildcardMatcher includesMatcher concode_elem_sep List<Limit> limits concode_elem_sep ElementType element concode_field_sep List<Limit> getLimits concode_elem_sep ElementType getElement concode_elem_sep void setExcludes concode_elem_sep void setLimits concode_elem_sep String getIncludes concode_elem_sep String getExcludes concode_elem_sep void setElement concode_elem_sep boolean matches concode_elem_sep void setIncludes"}
{"code": "void function ( ) { pos ++ ; }", "nl": "skips the next char . concode_field_sep String str concode_elem_sep int pos concode_field_sep char ch concode_elem_sep char ch concode_elem_sep int pos concode_elem_sep int length concode_elem_sep boolean hasNext concode_elem_sep XMPDateTime parse concode_elem_sep XMPDateTime parse concode_elem_sep String render concode_elem_sep int gatherInt"}
{"code": "void function ( String [ ] arg0 ) { JAXBContext loc0 = JAXBContext . newInstance ( Session . class ) ; writeSession ( readSession ( new File ( \"srini_string\" ) , loc0 ) , new File ( \"srini_string\" ) , loc0 ) ; }", "nl": "main method execution steps : 1 . configure jaxb for the classes in the com.cooksys.serialization.assignment.model package 2 . read a session object from the / input/memphis / directory using the methods defined above 3 . write the session object to the / output/session.xml file . jaxb annotations and configuration : you will have to add jaxb annotations to the classes in the com.cooksys.serialization.assignment.model package check the xml files in the / input / directory to determine how to configure the contact jaxb annotations the session object should marshal to look like the following : ... ... ... ... concode_field_sep PlaceHolder placeHolder concode_field_sep Instructor readInstructor concode_elem_sep void writeSession concode_elem_sep Session readSession concode_elem_sep Student readStudent concode_elem_sep List<Student> readStudents"}
{"code": "String function ( ) { return name ; }", "nl": "the `` friendly '' name for this machine concode_field_sep Map<String,JsonBall> metadata concode_elem_sep Date created concode_elem_sep Type type concode_elem_sep Set<String> ips concode_elem_sep ImmutableSet.Builder<String> ips concode_elem_sep ImmutableMap.Builder<String,JsonBall> metadata concode_elem_sep String name concode_elem_sep String id concode_elem_sep State state concode_elem_sep Function<JsonBall,String> unquoteString concode_elem_sep String dataset concode_elem_sep int memorySizeMb concode_elem_sep Date updated concode_elem_sep int diskSizeGb concode_field_sep Builder toBuilder concode_elem_sep Builder metadata concode_elem_sep String getId concode_elem_sep int compareTo concode_elem_sep Builder type concode_elem_sep Date getUpdated concode_elem_sep Map<String,String> getMetadataAsJsonLiterals concode_elem_sep int hashCode concode_elem_sep Builder builder concode_elem_sep Builder id concode_elem_sep Builder state concode_elem_sep String value concode_elem_sep String value concode_elem_sep Builder memorySizeMb concode_elem_sep Type fromValue concode_elem_sep State fromValue concode_elem_sep Map<String,String> getMetadata concode_elem_sep String apply concode_elem_sep Builder created concode_elem_sep int getDiskSizeGb concode_elem_sep String getDatasetURN concode_elem_sep Date getCreated concode_elem_sep Builder addMetadata concode_elem_sep Builder ips concode_elem_sep Builder addIp concode_elem_sep int getMemorySizeMb concode_elem_sep State getState concode_elem_sep Builder fromMachine concode_elem_sep Machine build concode_elem_sep Type getType concode_elem_sep boolean equals concode_elem_sep Builder name concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Builder dataset concode_elem_sep Builder updated concode_elem_sep Set<String> getIps concode_elem_sep Builder diskSizeGb"}
{"code": "void function ( boolean arg0 ) { this . useCriterion4 = arg0 ; }", "nl": "set usecriterion4 . concode_field_sep boolean useCriterion4 concode_elem_sep ColorPolynomial<C> pi concode_elem_sep int i concode_elem_sep ColorPolynomial<C> pj concode_elem_sep int j concode_elem_sep boolean useCriterion3 concode_elem_sep int n concode_elem_sep boolean toZero concode_field_sep int getPairNumber concode_elem_sep int hashCode concode_elem_sep void setUseCriterion3 concode_elem_sep boolean equals concode_elem_sep boolean getUseCriterion3 concode_elem_sep void setZero concode_elem_sep boolean isZero concode_elem_sep String toString concode_elem_sep int compareTo concode_elem_sep void pairNumber concode_elem_sep boolean getUseCriterion4"}
{"code": "Vector < FieldDoc > function ( ClassDoc arg0 , String arg1 ) { Vector < FieldDoc > loc0 = new Vector < FieldDoc > ( ) ; for ( FieldDoc loc1 : arg0 . fields ( ) ) { if ( loc1 . name ( ) . startsWith ( arg1 ) ) loc0 . add ( loc1 ) ; } return ( loc0 ) ; }", "nl": "look for fields in the specified class that begin with the specified prefix . concode_field_sep String lineSep concode_elem_sep RootDoc root concode_elem_sep Map<ClassDoc,Set<ClassDoc>> cmap concode_elem_sep boolean dump_class_tree concode_field_sep void gather_derived_classes concode_elem_sep void process_class_sorted_texinfo concode_elem_sep void process concode_elem_sep int find_enabled concode_elem_sep boolean start concode_elem_sep int optionLength concode_elem_sep void process_class_tree_txt"}
{"code": "Property function ( ) { return property ; }", "nl": "the violated property . concode_field_sep String xmlname concode_elem_sep Time onExit concode_elem_sep HashMap<Integer,Violation> violationsMap concode_elem_sep Time onEntry concode_elem_sep Property property concode_elem_sep String name concode_elem_sep long serialVersionUID concode_elem_sep Time time concode_field_sep Object readResolve concode_elem_sep Object readResolve concode_elem_sep Violation[] findViolations concode_elem_sep String toStringWithMethod concode_elem_sep String xmlString concode_elem_sep String xmlString concode_elem_sep Violation[] viosWithConfGEQ concode_elem_sep Violation[] withKind concode_elem_sep int hashCode concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep boolean equals concode_elem_sep Violation get concode_elem_sep Violation get concode_elem_sep Violation get concode_elem_sep String toNiceString concode_elem_sep String toNiceString concode_elem_sep String toString concode_elem_sep String toString concode_elem_sep Time time concode_elem_sep Violation[] viosWithConfLT concode_elem_sep Violation[] withTime"}
{"code": "void function ( KademliaOverlayKey arg0 , OperationCallback < DHTObject > arg1 ) { KademliaOperation < DHTObject > loc0 = myNode . getOperationFactory ( ) . getDataLookupOperation ( arg0 , arg1 ) ; loc0 . scheduleImmediately ( ) ; }", "nl": "does a single lookup . added by leo nobach concode_field_sep Node<T> myNode concode_elem_sep PeerStatus peerStatus concode_elem_sep Logger log concode_elem_sep ComponentsConfig config concode_elem_sep boolean lookupEnabled concode_field_sep void enablePeriodicLookup concode_elem_sep void connectivityChanged concode_elem_sep void beginPeriodicLookups concode_elem_sep void doConnect concode_elem_sep void routingTableBuilt concode_elem_sep void doDisconnect concode_elem_sep PeerStatus getPeerStatus concode_elem_sep double getSimSec"}
{"code": "void function ( NetMessage arg0 , NetID arg1 ) { addReceivedMsg ( arg0 ) ; receivedMsg ++ ; }", "nl": "collects all received messages concode_field_sep long receivedBytes concode_elem_sep int sentMsg concode_elem_sep int receivedMsg concode_elem_sep StatisticGenerationEvent event concode_elem_sep long sentBytes concode_elem_sep Logger log concode_field_sep double[] getSentBytes concode_elem_sep void addReceivedMsg concode_elem_sep void stop concode_elem_sep double[] getSentMsg concode_elem_sep double[] getReceivedMsg concode_elem_sep void start concode_elem_sep void netMsgSend concode_elem_sep void netMsgDrop concode_elem_sep double[] getReceivedBytes concode_elem_sep void addSentMsg"}
{"code": "void function ( Throwable arg0 ) { if ( Platform . isRunning ( ) ) Logger . log ( arg0 ) ; else { if ( sendToConsole ) arg0 . printStackTrace ( ) ; } }", "nl": "log the specified exception . concode_field_sep boolean sendToConsole concode_field_sep placeholderType placeHolder"}
{"code": "Item [ ] function ( ) { synchronized ( items ) { Item loc0 [ ] = new Item [ this . items . size ( ) ] ; return ( ( Item [ ] ) this . items . toArray ( loc0 ) ) ; } }", "nl": "return the items for this channel . concode_field_sep String managingEditor concode_elem_sep String title concode_elem_sep String language concode_elem_sep String link concode_elem_sep ArrayList skipDays concode_elem_sep TextInput textInput concode_elem_sep String rating concode_elem_sep String pubDate concode_elem_sep String description concode_elem_sep String lastBuildDate concode_elem_sep String webMaster concode_elem_sep String copyright concode_elem_sep ArrayList skipHours concode_elem_sep ArrayList items concode_elem_sep Image image concode_elem_sep String docs concode_elem_sep double version concode_field_sep void addSkipDay concode_elem_sep void removeItem concode_elem_sep void setCopyright concode_elem_sep String getWebMaster concode_elem_sep void setDescription concode_elem_sep String getDescription concode_elem_sep void addSkipHour concode_elem_sep String getDocs concode_elem_sep void addItem concode_elem_sep Item[] getItems concode_elem_sep String getTitle concode_elem_sep String[] getSkipHours concode_elem_sep String[] findSkipHours concode_elem_sep String[] findSkipDays concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep void render concode_elem_sep String[] getSkipDays concode_elem_sep void setManagingEditor concode_elem_sep double getVersion concode_elem_sep String getLanguage concode_elem_sep String getCopyright concode_elem_sep void setVersion concode_elem_sep String getPubDate concode_elem_sep void setWebMaster concode_elem_sep void setTitle concode_elem_sep void setTextInput concode_elem_sep void setPubDate concode_elem_sep void setLink concode_elem_sep String getLink concode_elem_sep String getLastBuildDate concode_elem_sep void setDocs concode_elem_sep void removeSkipHour concode_elem_sep void removeSkipDay concode_elem_sep TextInput getTextInput concode_elem_sep Image getImage concode_elem_sep void setLastBuildDate concode_elem_sep void setRating concode_elem_sep String getManagingEditor concode_elem_sep void setImage concode_elem_sep void setLanguage concode_elem_sep String getRating"}
{"code": "String function ( ) { return name ; }", "nl": "getter for property ` name ' . concode_field_sep CoreMessageLogger LOG concode_elem_sep boolean containsJoinFetchedCollection concode_elem_sep Fetch bagJoinFetch concode_elem_sep String name concode_elem_sep boolean containsJoinFetchedBag concode_elem_sep Map<String,Fetch> fetches concode_field_sep Map<String,Fetch> getFetches concode_elem_sep boolean isContainsJoinFetchedBag concode_elem_sep void addFetch concode_elem_sep void addFetch concode_elem_sep void addFetch concode_elem_sep Fetch getFetchByRole concode_elem_sep boolean isContainsJoinFetchedCollection"}
{"code": "StackKeeper function ( ) { try { return this . queue . removeFirst ( ) ; } catch ( NoSuchElementException loc0 ) { throw new NoStackException ( ) ; } }", "nl": "retrieves and removes the top of the stack . concode_field_sep Charset charset concode_elem_sep TagProcessorFactory tagFactory concode_elem_sep Map<String,Object> memory concode_elem_sep List<Element> ctn concode_elem_sep LinkProvider linkprovider concode_elem_sep boolean autoBookmark concode_elem_sep boolean acceptUnknown concode_elem_sep List<String> roottags concode_elem_sep String BOOKMARK_TREE concode_elem_sep String LAST_MARGIN_BOTTOM concode_elem_sep Rectangle pageSize concode_elem_sep String resourcesRootPath concode_elem_sep LinkedList<StackKeeper> queue concode_elem_sep CssAppliers cssAppliers concode_elem_sep ImageProvider imageProvider concode_field_sep ImageProvider getImageProvider concode_elem_sep HtmlPipelineContext setTagFactory concode_elem_sep HtmlPipelineContext setAcceptUnknown concode_elem_sep boolean acceptUnknown concode_elem_sep LinkProvider getLinkProvider concode_elem_sep String getResourcesRootPath concode_elem_sep CssAppliers getCssAppliers concode_elem_sep HtmlPipelineContext charSet concode_elem_sep Charset charSet concode_elem_sep void setLastMarginBottom concode_elem_sep HtmlPipelineContext setImageProvider concode_elem_sep boolean isEmpty concode_elem_sep void setResourcesRootPath concode_elem_sep HtmlPipelineContext setCssApplier concode_elem_sep Map<String,Object> getMemory concode_elem_sep StackKeeper peek concode_elem_sep boolean autoBookmark concode_elem_sep HtmlPipelineContext autoBookmark concode_elem_sep HtmlPipelineContext setLinkProvider concode_elem_sep Float getLastMarginBottom concode_elem_sep Rectangle getPageSize concode_elem_sep List<Element> currentContent concode_elem_sep TagProcessor resolveProcessor concode_elem_sep HtmlPipelineContext clone concode_elem_sep List<String> getRootTags concode_elem_sep void setCssAppliers concode_elem_sep HtmlPipelineContext setRootTags concode_elem_sep void addFirst concode_elem_sep HtmlPipelineContext setPageSize"}
{"code": "GenVector < C > function ( ) { return ZERO ; }", "nl": "getzero . concode_field_sep GenVector<C> ZERO concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int cols concode_elem_sep List<GenVector<C>> BASIS concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> random concode_elem_sep GenVector<C> fromList concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenVector<C> fromInteger concode_elem_sep GenVector<C> fromInteger concode_elem_sep String toString concode_elem_sep GenVector<C> copy concode_elem_sep GenVector<C> parse concode_elem_sep GenVector<C> parse"}
{"code": "void function ( int arg0 ) { this . level = arg0 ; }", "nl": "set level of section . concode_field_sep List<Section> subsections concode_elem_sep Section parent concode_elem_sep List<Sentence> headerContent concode_elem_sep int level concode_elem_sep List<ListBlock> lists concode_elem_sep List<Paragraph> paragraphs concode_field_sep void appendListElement concode_elem_sep ListBlock getListBlock concode_elem_sep int getNumberOfLists concode_elem_sep int getHeaderContentsListSize concode_elem_sep Paragraph getParagraph concode_elem_sep void appendSubSection concode_elem_sep Sentence getHeaderContent concode_elem_sep int getNumberOfSubsections concode_elem_sep Section getParentSection concode_elem_sep int getLevel concode_elem_sep List<Paragraph> getParagraphs concode_elem_sep int getNumberOfParagraphs concode_elem_sep List<ListBlock> getListBlocks concode_elem_sep void setParentSection concode_elem_sep List<Sentence> getHeaderContents concode_elem_sep Section getSubSection concode_elem_sep void appendListBlock concode_elem_sep Sentence getJoinedHeaderContents concode_elem_sep void appendParagraph"}
{"code": "void function ( RPCContext arg0 ) { }", "nl": "this method is invoked at the server before the response is executed , but before the response has been formulated concode_field_sep PlaceHolder placeHolder concode_field_sep void clientStartConnect concode_elem_sep void clientFinishConnect concode_elem_sep void clientSendRequest concode_elem_sep void serverReceiveRequest concode_elem_sep void serverConnecting concode_elem_sep void clientReceiveResponse"}
{"code": "void function ( String arg0 , Object arg1 ) { mParameters . put ( arg0 , arg1 ) ; }", "nl": "adds a parameter to the request ; if the parameter is a file , the file is uploaded , otherwise the string value of the parameter is passed in the request concode_field_sep Map<String,Object> mParameters concode_elem_sep String boundary concode_elem_sep OutputStream mOutput concode_elem_sep URLConnection mConnection concode_elem_sep Map<String,String> mCookies concode_elem_sep Random random concode_field_sep void boundary concode_elem_sep void writeName concode_elem_sep void setParameters concode_elem_sep void newline concode_elem_sep void writeParameter concode_elem_sep void writeParameter concode_elem_sep void writeParameter concode_elem_sep HttpURLConnection post concode_elem_sep String randomString concode_elem_sep void postCookies concode_elem_sep void writeln concode_elem_sep void pipe concode_elem_sep void write concode_elem_sep void write"}
{"code": "Set < String > function ( InputSource arg0 ) { XmlNamespaceFinder loc0 = createNamespaceFinder ( ) ; Set < String > loc1 = loc0 . parseContents ( arg0 ) ; if ( factory == null ) { factory = loc0 . getFactory ( ) ; } return loc1 ; }", "nl": "returns the namespace uris found in the given xml file concode_field_sep SAXParserFactory factory concode_field_sep void setFactory concode_elem_sep XmlNamespaceFinder createNamespaceFinder concode_elem_sep SAXParserFactory getFactory"}
{"code": "void function ( List < Integer > arg0 ) { takeLock . lock ( ) ; try { taskIdsQueue . add ( arg0 ) ; notEmpty . signal ( ) ; } finally { takeLock . unlock ( ) ; } }", "nl": "put list of task id to its queue concode_field_sep ReentrantLock takeLock concode_elem_sep LinkedList<List<Integer>> taskIdsQueue concode_elem_sep Condition notEmpty concode_elem_sep LinkedBlockingQueue<BoltMsg> boltMsgQueue concode_field_sep void putBoltMsg concode_elem_sep Object poll"}
{"code": "void function ( boolean arg0 ) { debug = arg0 ; }", "nl": "enable or disable debug mode by default , debug mode is enabled for development builds and disabled for exported apks - see buildconfig.debug concode_field_sep int LOG_GENERAL concode_elem_sep OnLogListener logListener concode_elem_sep int LOG_COMMAND concode_elem_sep int LOG_NONE concode_elem_sep int LOG_ALL concode_elem_sep int logTypes concode_elem_sep int LOG_OUTPUT concode_elem_sep boolean sanityChecks concode_elem_sep boolean debug concode_elem_sep String TAG concode_field_sep void setOnLogListener concode_elem_sep boolean getSanityChecksEnabled concode_elem_sep OnLogListener getOnLogListener concode_elem_sep void log concode_elem_sep void logCommon concode_elem_sep void onLog concode_elem_sep void setSanityChecksEnabled concode_elem_sep boolean getLogTypeEnabledEffective concode_elem_sep boolean getDebug concode_elem_sep void logCommand concode_elem_sep boolean getLogTypeEnabled concode_elem_sep void logOutput concode_elem_sep void setLogTypeEnabled concode_elem_sep boolean getSanityChecksEnabledEffective concode_elem_sep boolean onMainThread"}
{"code": "String function ( IPath arg0 , boolean arg1 ) { String loc0 ; if ( arg1 ) { loc0 = arg0 . toOSString ( ) ; } else { loc0 = arg0 . makeRelative ( ) . toString ( ) ; } return Strings . markLTR ( loc0 ) ; }", "nl": "returns the label of a path . concode_field_sep String CODE_DELIMITERS concode_elem_sep String FILE_PATTERN_DELIMITERS concode_elem_sep String URL_DELIMITERS concode_field_sep String getJavaCodeString concode_elem_sep String getWorkingSetLabel concode_elem_sep String getURLPart concode_elem_sep String getJavaElementName concode_elem_sep String getFilePattern concode_elem_sep String getResourceName concode_elem_sep String getResourceName concode_elem_sep String getVersionName concode_elem_sep String getFileName"}
{"code": "ConditionMonitor function ( ) { return INSTANCE ; }", "nl": "answer the condition monitor concode_field_sep ConditionMonitor INSTANCE concode_field_sep void add concode_elem_sep void add concode_elem_sep void removeAll concode_elem_sep int process concode_elem_sep com.windowtester.runtime.condition.ICondition[] getConditions concode_elem_sep void removeHandler"}
{"code": "long function ( ) { return this . ours ; }", "nl": "gets the value of ours concode_field_sep long theirs concode_elem_sep long ours concode_elem_sep String description concode_elem_sep int iterations concode_field_sep int getIterations concode_elem_sep void setIterations concode_elem_sep void setOurs concode_elem_sep long getOurAvg concode_elem_sep String toString concode_elem_sep void setDescription concode_elem_sep void setTheirs concode_elem_sep long getTheirs concode_elem_sep String getDescription concode_elem_sep long getTheirAvg"}
{"code": "java . math . BigInteger function ( ) { return coFac . characteristic ( ) ; }", "nl": "characteristic of this ring . concode_field_sep int blocksize concode_elem_sep GenMatrix<C> ZERO concode_elem_sep int DEFAULT_BSIZE concode_elem_sep GenMatrix<C> ONE concode_elem_sep Logger logger concode_elem_sep RingFactory<C> coFac concode_elem_sep float density concode_elem_sep int rows concode_elem_sep int cols concode_elem_sep Random random concode_elem_sep float DEFAULT_DENSITY concode_field_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomUpper concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrix<C> randomLower concode_elem_sep GenMatrixRing<C> product concode_elem_sep GenMatrix<C> fromList concode_elem_sep boolean isField concode_elem_sep boolean isCommutative concode_elem_sep GenMatrix<C> parse concode_elem_sep GenMatrix<C> parse concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep GenMatrix<C> random concode_elem_sep int hashCode concode_elem_sep boolean equals concode_elem_sep GenMatrix<C> getONE concode_elem_sep GenMatrix<C> getZERO concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep GenMatrix<C> fromInteger concode_elem_sep String toString concode_elem_sep boolean isAssociative concode_elem_sep GenMatrixRing<C> transpose concode_elem_sep GenMatrix<C> copy"}
{"code": "void function ( @ ArquillianResource URL arg0 ) { final String loc0 = \"srini_string\" + arg0 . getHost ( ) + \"srini_string\" + arg0 . getPort ( ) + \"srini_string\" + JarClass . class . getName ( ) ; final String loc1 = HttpRequest . get ( loc0 , 2 , TimeUnit . SECONDS ) ; Assert . assertEquals ( Servlet . SUCCESS , loc1 ) ; }", "nl": "tests that a class available in a jar , which is added as a class-path manifest attribute of a . rar is available for access from within a class in a . war deployment , belonging to the same . ear top level deployment . this tests section 8.3 of java ee6 spec concode_field_sep PlaceHolder placeHolder concode_field_sep Archive<?> createDeployment"}
{"code": "int function ( String arg0 ) { File loc0 = new File ( arg0 ) ; if ( ! loc0 . exists ( ) || ! loc0 . isDirectory ( ) ) return 0 ; File loc1 [ ] = loc0 . listFiles ( ) ; if ( loc1 == null ) return 0 ; int loc2 = 0 ; for ( int loc3 = 0 ; loc3 < loc1 . length ; ++ loc3 ) { loc2 += insertFile ( loc1 [ loc3 ] ) ; } return loc2 ; }", "nl": "inserts all the fonts recognized by itext in the directory into the map . the encoding will be basefont.cp1252 but can be changed later . concode_field_sep HashMap<String,String> aliases concode_elem_sep String fontName concode_elem_sep byte pfb[] concode_elem_sep HashMap<String,BaseFontParameters> mapper concode_elem_sep boolean cached concode_elem_sep byte ttfAfm[] concode_elem_sep String encoding concode_elem_sep boolean embedded concode_field_sep void putName concode_elem_sep HashMap<String,String> getAliases concode_elem_sep BaseFont awtToPdf concode_elem_sep void putAlias concode_elem_sep Font pdfToAwt concode_elem_sep int insertFile concode_elem_sep HashMap<String,BaseFontParameters> getMapper concode_elem_sep BaseFontParameters getBaseFontParameters concode_elem_sep void insertNames"}
{"code": "void function ( String arg0 , Object arg1 ) { if ( Tracer . isDebugging ( ) ) printLog ( sysOut , arg0 , arg1 ) ; IStatus loc0 = createLogStatus ( arg0 , arg1 , \"srini_string\" ) ; try { log . log ( loc0 ) ; } catch ( Throwable loc1 ) { } }", "nl": "log the specified message and object concode_field_sep ILog sysOutLog concode_elem_sep PrintWriter sysOut concode_elem_sep ILog log concode_elem_sep String PRODUCT_ID concode_field_sep void setLog concode_elem_sep void printLogObject concode_elem_sep void removeLogListener concode_elem_sep void logNoHeader concode_elem_sep void logStackTrace concode_elem_sep void printLogStatus concode_elem_sep IStatus createLogStatus concode_elem_sep void printLogMessage concode_elem_sep void printLog concode_elem_sep void close concode_elem_sep void addLogListener concode_elem_sep org.osgi.framework.Bundle getBundle"}
{"code": "void function ( BigInteger arg0 ) { this . nresults = arg0 ; }", "nl": "sets the value of the nresults property . concode_field_sep BigInteger nresults concode_field_sep BigInteger getNresults"}
{"code": "void function ( String arg0 ) { String loc0 = getUsage ( ) ; if ( arg0 != null ) { MessageFormat loc1 = new MessageFormat ( Strings . get ( \"srini_string\" ) ) ; loc0 = loc1 . format ( new Object [ ] { loc0 , arg0 } ) ; } setScriptError ( new InvalidScriptException ( loc0 ) ) ; }", "nl": "store an invalid script exception describing the proper script usage . this should be used by derived classes whenever parsing indicates invalid input . concode_field_sep String description concode_elem_sep Resolver resolver concode_elem_sep String copyright concode_elem_sep Throwable invalidScriptError concode_elem_sep WidgetTester tester concode_field_sep String toXMLString concode_elem_sep String getXMLTag concode_elem_sep Widget resolve concode_elem_sep Element addAttributes concode_elem_sep void run concode_elem_sep Element toXML concode_elem_sep void setDescription concode_elem_sep String simpleClassName concode_elem_sep String getDescription concode_elem_sep String getDefaultDescription concode_elem_sep void runStep concode_elem_sep WidgetTester resolveTester concode_elem_sep void setScriptError concode_elem_sep HashMap createAttributeMap concode_elem_sep HashMap getAttributes concode_elem_sep void writeObject concode_elem_sep Element addContent concode_elem_sep void parseStepAttributes concode_elem_sep String getUsage concode_elem_sep void readObject concode_elem_sep String toEditableString concode_elem_sep Step createStep concode_elem_sep Step createStep concode_elem_sep Class resolveClass concode_elem_sep WidgetFinder getFinder concode_elem_sep Resolver getResolver"}
{"code": "boolean function ( ) { return ui . findAll ( locator ) . length == 1 ; }", "nl": "test whether the widget in question is showing . concode_field_sep IUIContext ui concode_elem_sep IWidgetLocator locator concode_field_sep placeholderType placeHolder"}
{"code": "VectorXZ function ( double arg0 ) { return new VectorXZ ( sin ( arg0 ) , cos ( arg0 ) ) ; }", "nl": "returns a unit vector based on an angular direction . for example , angle 0 creates vector 0,1 , angle pi/2 creates vector 1,0 . concode_field_sep VectorXZ NULL_VECTOR concode_elem_sep VectorXZ Z_UNIT concode_elem_sep double x concode_elem_sep VectorXZ X_UNIT concode_elem_sep double z concode_field_sep VectorXZ add concode_elem_sep Function<VectorXZ,VectorXYZ> xyzFunction concode_elem_sep double angleTo concode_elem_sep VectorXZ mult concode_elem_sep List<VectorXYZ> listXYZ concode_elem_sep double lengthSquared concode_elem_sep double distance concode_elem_sep VectorXZ invert concode_elem_sep VectorXZ subtract concode_elem_sep double dot concode_elem_sep double length concode_elem_sep double distanceTo concode_elem_sep double angleBetween concode_elem_sep double distanceSquared concode_elem_sep double getX concode_elem_sep double getY concode_elem_sep double getZ concode_elem_sep int hashCode concode_elem_sep VectorXZ normalize concode_elem_sep boolean equals concode_elem_sep VectorXYZ xyz concode_elem_sep double angle concode_elem_sep String toString concode_elem_sep VectorXZ rightNormal"}
{"code": "int function ( ImageInputStream arg0 ) { int loc0 = arg0 . readUnsignedShort ( ) ; return ( ( loc0 & 0xf800 ) << 8 ) | ( ( loc0 & 0x3800 ) << 5 ) | ( ( loc0 & 0x07e0 ) << 5 ) | ( ( loc0 & 0x0060 ) << 3 ) | ( ( loc0 & 0x001f ) << 3 ) | ( ( loc0 & 0x0007 ) ) ; }", "nl": "reads 16-bit rgb and converts it to 24-bit rgb . endian is defined by input stream . concode_field_sep byte[] byteBuf concode_field_sep void writeInt24LE concode_elem_sep void readRGBs555to24 concode_elem_sep void readInts24LE concode_elem_sep void writeInts24LE concode_elem_sep void readRGBs565to24 concode_elem_sep void writeInts24 concode_elem_sep int readInt24LE concode_elem_sep int readRGB555to24 concode_elem_sep void readRGBs555to24LE concode_elem_sep int readRGB555to24LE concode_elem_sep void writeInt24"}
{"code": "void function ( Object arg0 ) { for ( int loc0 = 0 ; loc0 < iPredicates . length ; loc0 ++ ) { if ( iPredicates [ loc0 ] . evaluate ( arg0 ) == true ) { iClosures [ loc0 ] . execute ( arg0 ) ; return ; } } iDefault . execute ( arg0 ) ; }", "nl": "executes the closure whose matching predicate returns true concode_field_sep Closure[] iClosures concode_elem_sep Predicate[] iPredicates concode_elem_sep long serialVersionUID concode_elem_sep Closure iDefault concode_field_sep Closure getDefaultClosure concode_elem_sep Closure[] getClosures concode_elem_sep Closure getInstance concode_elem_sep Closure getInstance concode_elem_sep Predicate[] getPredicates"}
{"code": "boolean function ( ArrayList < Byte > arg0 ) { try { FileInputStream loc0 = new FileInputStream ( inputFile ) ; byte [ ] loc1 = new byte [ 1 ] ; while ( loc0 . read ( loc1 ) != - 1 ) { arg0 . add ( new Byte ( loc1 [ 0 ] ) ) ; } loc0 . close ( ) ; return true ; } catch ( Exception loc3 ) { loc3 . printStackTrace ( ) ; } return false ; }", "nl": "read the random bytes from an input file and store them into an arraylist . concode_field_sep File inputFile concode_elem_sep ArrayList<Byte> bytes concode_elem_sep File outputImage concode_field_sep BufferedImage getGrayscale concode_elem_sep boolean create"}
{"code": "UnivariateRealFunction function ( ) { return polynomialSplineDerivative ( ) ; }", "nl": "returns the derivative of the polynomial spline function as a univariaterealfunction concode_field_sep int n concode_elem_sep long serialVersionUID concode_elem_sep PolynomialFunction polynomials[] concode_elem_sep double knots[] concode_field_sep double[] getKnots concode_elem_sep boolean isStrictlyIncreasing concode_elem_sep PolynomialSplineFunction polynomialSplineDerivative concode_elem_sep int getN concode_elem_sep PolynomialFunction[] getPolynomials concode_elem_sep double value"}
{"code": "void function ( Object arg0 ) { throw new FunctorException ( \"srini_string\" ) ; }", "nl": "always throw an exception . concode_field_sep Closure INSTANCE concode_elem_sep long serialVersionUID concode_field_sep Closure getInstance"}
{"code": "int function ( ) { return type ; }", "nl": "get the type of the rightermost child atom . most atoms have no child atoms , so the `` left type '' and the `` right type '' are the same : the atom 's type . this also is the default implementation . but some atoms are composed of child atoms put one after another in a horizontal row . these atoms must override this method . concode_field_sep int type concode_elem_sep int type_limits concode_elem_sep int alignment concode_field_sep int getLeftType concode_elem_sep Box createBox concode_elem_sep Atom clone"}
{"code": "double function ( ) { return mu ; }", "nl": "getter for property mu . concode_field_sep int DIGEST_MODE concode_elem_sep BufferedReader filePointer concode_elem_sep int CONSTANT_MODE concode_elem_sep int mode concode_elem_sep double mu concode_elem_sep EmpiricalDistribution empiricalDistribution concode_elem_sep URL valuesFileURL concode_elem_sep double sigma concode_elem_sep RandomDataImpl randomData concode_elem_sep int REPLAY_MODE concode_elem_sep int EXPONENTIAL_MODE concode_elem_sep int GAUSSIAN_MODE concode_elem_sep int UNIFORM_MODE concode_field_sep EmpiricalDistribution getEmpiricalDistribution concode_elem_sep double getNextUniform concode_elem_sep void closeReplayFile concode_elem_sep void setMode concode_elem_sep double getNext concode_elem_sep void fill concode_elem_sep double[] fill concode_elem_sep double getSigma concode_elem_sep void computeDistribution concode_elem_sep void computeDistribution concode_elem_sep void setMu concode_elem_sep void setValuesFileURL concode_elem_sep void setValuesFileURL concode_elem_sep double getNextReplay concode_elem_sep URL getValuesFileURL concode_elem_sep void setSigma concode_elem_sep void resetReplayFile concode_elem_sep double getNextGaussian concode_elem_sep int getMode concode_elem_sep double getNextDigest concode_elem_sep double getNextExponential"}
{"code": "DoubleListIterator function ( ListIterator arg0 ) { return null == arg0 ? null : new ListIteratorDoubleListIterator ( arg0 ) ; }", "nl": "create an doublelistiterator doublelistiterator wrappingthe specified listiterator listiterator . when the given iterator is null , returns null . concode_field_sep ListIterator _iterator concode_field_sep double next concode_elem_sep void add concode_elem_sep void set concode_elem_sep double previous concode_elem_sep boolean hasPrevious concode_elem_sep boolean hasNext concode_elem_sep int nextIndex concode_elem_sep int previousIndex concode_elem_sep void remove"}
{"code": "void function ( Set < String > arg0 ) { countryLookup . keySet ( ) . retainAll ( arg0 ) ; }", "nl": "remove all countries that are not defined in the set concode_field_sep HashMap<String,String[]> countryLookup concode_elem_sep ArrayList<String> pingErCountry concode_elem_sep ArrayList<String> pingErRegion concode_elem_sep long serialVersionUID concode_elem_sep Logger log concode_elem_sep HashMap<String,String> pingErCountryRegions concode_elem_sep String pingErCountryRegionFilename concode_field_sep void importPingErCountryRegionFile concode_elem_sep String getGeoIpCountryName concode_elem_sep String getPingErCountryName concode_elem_sep boolean containsPingErCountryOrRegion concode_elem_sep ArrayList<String> getPingErRegions concode_elem_sep void addCountryFromGeoIP concode_elem_sep String getPingErCountryRegionFilename concode_elem_sep Element exportToXML concode_elem_sep void assignCountryCodeToPingErData concode_elem_sep Set<String> getCountryCodes concode_elem_sep String getPingErRegionName concode_elem_sep ArrayList<String> getPingErCountrys concode_elem_sep void importFromXML concode_elem_sep void importFromXML"}
{"code": "Parser function ( Class arg0 , Parser arg1 ) { Parser loc0 = ( Parser ) parsers . get ( arg0 ) ; parsers . put ( arg0 , arg1 ) ; return loc0 ; }", "nl": "set the parser for a given class . returns the old one , if any . concode_field_sep String copyright concode_elem_sep HashMap parsers concode_field_sep Object[] eval concode_elem_sep Object eval concode_elem_sep Parser getParser concode_elem_sep String replace concode_elem_sep String[] parseArgumentList concode_elem_sep String unescapeBrackets concode_elem_sep Parser findParser concode_elem_sep String substitute concode_elem_sep boolean isExtension"}
{"code": "List < T > function ( Collection < T > arg0 ) { return Collections . unmodifiableList ( new ArrayList < T > ( arg0 ) ) ; }", "nl": "return a unmodifiable list that has all elements of the given collection . concode_field_sep PlaceHolder placeHolder concode_field_sep T getNthIteratedElement concode_elem_sep T getNthIteratedElement concode_elem_sep boolean containsIdentical concode_elem_sep List<String> prefix concode_elem_sep T removeMatching concode_elem_sep String toStringInLines concode_elem_sep List<String> toStringLines concode_elem_sep SortedSet<Integer> findAll concode_elem_sep String toStringInSortedLines concode_elem_sep List<List<T>> chunkUp concode_elem_sep boolean areDisjoint concode_elem_sep Set<T> intersection concode_elem_sep Set<T> xor concode_elem_sep String join concode_elem_sep List<T> map concode_elem_sep Set<T> getAll concode_elem_sep boolean containsEquivalent concode_elem_sep Set<T> diff concode_elem_sep Map<Integer,Set<Object[]>> createPerArityGroups concode_elem_sep Set<T> union concode_elem_sep List<T> concat concode_elem_sep List<String> sort concode_elem_sep List<T> concatAll concode_elem_sep boolean allInstancesOf concode_elem_sep List<T> unique concode_elem_sep List<List<T>> allCombinations concode_elem_sep T[] addToArray"}
{"code": "int function ( ) { int loc0 = startupOptions . getIntegerOption ( KdcServerOption . KDC_TCP_PORT ) ; if ( loc0 < 1 ) { loc0 = kdcConfig . getKdcTcpPort ( ) ; } if ( loc0 < 1 ) { loc0 = getKdcPort ( ) ; } return loc0 ; }", "nl": "get kdc tcp port concode_field_sep KdcConfig kdcConfig concode_elem_sep BackendConfig backendConfig concode_elem_sep KOptions startupOptions concode_field_sep int getKdcPort concode_elem_sep String getKdcRealm concode_elem_sep int checkGetKdcTcpPort concode_elem_sep int getKdcUdpPort concode_elem_sep int checkGetKdcUdpPort concode_elem_sep boolean allowTcp concode_elem_sep boolean allowUdp concode_elem_sep KdcConfig getKdcConfig concode_elem_sep String getKdcHost concode_elem_sep BackendConfig getBackendConfig"}
{"code": "Map function ( ) { loadMaps ( ) ; return characterMap ; }", "nl": "load a map for the current locale to translate a character into a corresponding virtual keycode-based keystroke . concode_field_sep KeyStrokeMapProvider generator concode_elem_sep Map chars concode_elem_sep boolean loaded concode_elem_sep Map characterMap concode_elem_sep Map keyStrokeMap concode_elem_sep Map keycodes concode_field_sep Map generateKeyStrokeMappings concode_elem_sep void loadMaps concode_elem_sep Map getKeyStrokeMap concode_elem_sep Map getCharacterMap concode_elem_sep InputStream findMap concode_elem_sep void main concode_elem_sep KeyStroke getKeyStroke concode_elem_sep String[] getMapNames concode_elem_sep String[] getMapDescriptions concode_elem_sep String getOSType concode_elem_sep char getChar concode_elem_sep String getFilename concode_elem_sep Map generateCharacterMappings concode_elem_sep KeyStrokeMapProvider getGenerator concode_elem_sep Map loadKeyStrokeMap concode_elem_sep String[] getMapStrings"}
{"code": "String function ( String arg0 ) { char [ ] loc0 = arg0 . toCharArray ( ) ; for ( int loc1 = 0 ; loc1 < loc0 . length ; loc1 ++ ) { char loc2 = loc0 [ loc1 ] ; if ( ! Character . isJavaIdentifierPart ( loc2 ) ) { loc0 [ loc1 ] = '_' ; } } return new String ( loc0 ) ; }", "nl": "cleans str by replacing all characters that are not valid java indentifier parts with '' _ '' . concode_field_sep int dkconfig_compile_timeout concode_elem_sep Logger debug concode_elem_sep FileCompiler fileCompiler concode_elem_sep boolean dkconfig_delete_splitters_on_exit concode_elem_sep String tempdir concode_elem_sep int guid concode_elem_sep String dkconfig_compiler concode_field_sep boolean matchPptRegex concode_elem_sep void compileFiles concode_elem_sep SpinfoFileParser parse_spinfofile concode_elem_sep void loadSplitters concode_elem_sep String createTempDir concode_elem_sep void load_splitters concode_elem_sep boolean matchPpt concode_elem_sep String getFileName concode_elem_sep String getTempDir concode_elem_sep void printAll concode_elem_sep void debugPrintln"}
{"code": "int function ( ModInteger arg0 ) { java . math . BigInteger loc0 = arg0 . val ; if ( ring != arg0 . ring ) { loc0 = loc0 . mod ( ring . modul ) ; } return val . compareTo ( loc0 ) ; }", "nl": "modinteger comparison . concode_field_sep java.math.BigInteger val concode_elem_sep ModIntegerRing ring concode_field_sep ModInteger MIREM concode_elem_sep java.math.BigInteger getSymmetricVal concode_elem_sep int MISIGN concode_elem_sep ModInteger gcd concode_elem_sep ModInteger sum concode_elem_sep ModInteger MINEG concode_elem_sep ModInteger MISUM concode_elem_sep int hashCode concode_elem_sep ModInteger MIDIF concode_elem_sep ModInteger divide concode_elem_sep ModInteger multiply concode_elem_sep int signum concode_elem_sep boolean isONE concode_elem_sep ModInteger inverse concode_elem_sep int MICOMP concode_elem_sep java.math.BigInteger getVal concode_elem_sep boolean isUnit concode_elem_sep ModInteger subtract concode_elem_sep ModInteger MIABS concode_elem_sep ModInteger MIINV concode_elem_sep ModInteger[] egcd concode_elem_sep java.math.BigInteger getModul concode_elem_sep ModInteger abs concode_elem_sep ModInteger MIQ concode_elem_sep ModInteger negate concode_elem_sep boolean equals concode_elem_sep ModInteger clone concode_elem_sep boolean isZERO concode_elem_sep String toString concode_elem_sep ModInteger MIPROD concode_elem_sep ModInteger remainder"}
{"code": "CashAccount16 function ( String arg0 ) { CashAccount16 loc0 = new CashAccount16 ( ) ; AccountIdentification4Choice loc1 = new AccountIdentification4Choice ( ) ; loc1 . setIBAN ( arg0 ) ; loc0 . setId ( loc1 ) ; return loc0 ; }", "nl": "unambiguous identification of a account concode_field_sep Pattern bicRegex concode_field_sep PartyIdentification32 createParty concode_elem_sep RemittanceInformation5 createRmtInf_struct concode_elem_sep XMLGregorianCalendar createXMLGregorianCalendarDate concode_elem_sep RemittanceInformation5 createRmtInf concode_elem_sep BranchAndFinancialInstitutionIdentification4 createFinInstnId concode_elem_sep XMLGregorianCalendar createXMLGregorianCalendar concode_elem_sep AmountType3Choice createAmount"}
{"code": "Unmarshaller function ( ) { try { return JAXB_CONTEXT . createUnmarshaller ( ) ; } catch ( JAXBException loc0 ) { throw new RuntimeException ( loc0 . getMessage ( ) , loc0 ) ; } }", "nl": "creates an unmarshaller from the sardineutil #jaxb_context . note : the unmarshaller is not thread safe , so it must be created for every request . concode_field_sep JAXBContext JAXB_CONTEXT concode_elem_sep String CUSTOM_NAMESPACE_URI concode_elem_sep String DEFAULT_NAMESPACE_URI concode_elem_sep String DEFAULT_NAMESPACE_PREFIX concode_elem_sep List<ThreadLocal<SimpleDateFormat>> DATETIME_FORMATS concode_elem_sep String CUSTOM_NAMESPACE_PREFIX concode_elem_sep String[] SUPPORTED_DATE_FORMATS concode_elem_sep DocumentBuilderFactory factory concode_field_sep Marshaller createMarshaller concode_elem_sep Date parseDate concode_elem_sep T unmarshal concode_elem_sep Map<QName,String> toQName concode_elem_sep List<QName> toQName concode_elem_sep QName toQName concode_elem_sep QName createQNameWithCustomNamespace concode_elem_sep String toXml concode_elem_sep Element createElement concode_elem_sep Element createElement concode_elem_sep Document createDocument concode_elem_sep QName createQNameWithDefaultNamespace"}
{"code": "byte [ ] function ( byte [ ] arg0 ) { byte loc0 [ ] = new byte [ arg0 . length ] ; int loc1 = 0 ; for ( int loc2 = 0 ; loc2 < arg0 . length ; loc2 ++ ) { if ( isValidBase64Byte ( arg0 [ loc2 ] ) ) { loc0 [ loc1 ++ ] = arg0 [ loc2 ] ; } } byte loc3 [ ] = new byte [ loc1 ] ; System . arraycopy ( loc0 , 0 , loc3 , 0 , loc1 ) ; return loc3 ; }", "nl": "discards any characters outside of the base64 alphabet see page 25 of rfc 2045 `` any characters outside of the base64 alphabet are to be ignored in base64 encoded data . '' concode_field_sep byte[] decodingTable concode_elem_sep byte[] encodingTable concode_field_sep void encode concode_elem_sep byte[] encode concode_elem_sep int computeEncodedSize concode_elem_sep byte[] decode concode_elem_sep byte[] decode concode_elem_sep String decode concode_elem_sep String decode concode_elem_sep boolean isValidBase64Byte concode_elem_sep String discardNonBase64Chars"}
{"code": "String function ( String arg0 , int arg1 ) { return getComposedMessage ( arg0 , String . valueOf ( arg1 ) , null , null , null ) ; }", "nl": "get a message with one parameter as an primitive int . the parameter will replace the string '' 1 '' found in the message . concode_field_sep String BASE_PATH concode_elem_sep HashMap<String,String> currentLanguage concode_elem_sep HashMap<String,String> defaultLanguage concode_field_sep HashMap<String,String> getLanguageMessages concode_elem_sep String getMessage concode_elem_sep String getMessage concode_elem_sep void setMessages concode_elem_sep HashMap<String,String> readLanguageStream concode_elem_sep HashMap<String,String> readLanguageStream concode_elem_sep boolean setLanguage"}
{"code": "void function ( PropertyChangeListener arg0 ) { if ( arg0 == null ) { throw new IllegalArgumentException ( ) ; } pcsDelegate . addPropertyChangeListener ( arg0 ) ; }", "nl": "attach a non-null propertychangelistener to this object . concode_field_sep IPropertyDescriptor[] EMPTY_ARRAY concode_elem_sep PropertyChangeSupport pcsDelegate concode_elem_sep long serialVersionUID concode_field_sep void firePropertyChange concode_elem_sep Object getPropertyValue concode_elem_sep void setPropertyValue concode_elem_sep Object getEditableValue concode_elem_sep IPropertyDescriptor[] getPropertyDescriptors concode_elem_sep void resetPropertyValue concode_elem_sep boolean isPropertySet concode_elem_sep void removePropertyChangeListener concode_elem_sep void readObject"}
{"code": "Object function ( ) { if ( _constructor == null ) { return null ; } return _constructor . newInstance ( _args ) ; }", "nl": "creates a new instance . concode_field_sep ReflectConstructor _constructor concode_elem_sep Object[] _args concode_elem_sep ReflectConstructorSpec UNSPECIFIED_CONSTRUCTOR concode_elem_sep TernaryBool _canBeInstantiated concode_elem_sep ReflectConstructorSpec INVALID_CONSTRUCTOR concode_field_sep TernaryBool canBeInstantiated"}
{"code": "byte [ ] function ( int arg0 ) { byte [ ] loc0 = new byte [ 2 ] ; loc0 [ 0 ] = ( byte ) ( arg0 >> 8 ) ; loc0 [ 1 ] = ( byte ) ( ( arg0 << 8 ) >> 8 ) ; return loc0 ; }", "nl": "interpret a short as its binary form concode_field_sep PlaceHolder placeHolder concode_field_sep long asLong concode_elem_sep int toInt concode_elem_sep String toBinaryString concode_elem_sep String toBinaryString concode_elem_sep String toBinaryString concode_elem_sep byte[] fromInt concode_elem_sep byte[] fromLong"}
